/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IOrder, IOrderInterface } from "../IOrder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disputed",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buyerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sellerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.Invoice",
            name: "invoice",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "winningChoice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "procecutorId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defendantId",
        type: "uint256",
      },
    ],
    name: "rule",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOrder__factory {
  static readonly abi = _abi;
  static createInterface(): IOrderInterface {
    return new utils.Interface(_abi) as IOrderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IOrder {
    return new Contract(address, _abi, signerOrProvider) as IOrder;
  }
}
