"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Order__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IAddressProvider",
                name: "provider",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "ADDRESSES_PROVIDER",
        outputs: [
            {
                internalType: "contract IAddressProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "ADDRESS_PROVIDER",
        outputs: [
            {
                internalType: "contract IAddressProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_UINT",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "erc20",
                type: "address",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "buyerId",
                type: "uint256",
            },
        ],
        name: "autoRefund",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "sellerId",
                type: "uint256",
            },
        ],
        name: "confirmOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "sellerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "buyerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "gigId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "packageId",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "brief",
                        type: "string",
                    },
                ],
                internalType: "struct InputTypes.CreateOrderInput",
                name: "input",
                type: "tuple",
            },
        ],
        name: "createOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "sellerId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "buyerId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "userId",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "role",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "metadata",
                        type: "string",
                    },
                ],
                internalType: "struct DataTypes.Evidence",
                name: "evidence",
                type: "tuple",
            },
        ],
        name: "dispute",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_name",
                type: "bytes32",
            },
        ],
        name: "fetchContract",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "contract IUser",
                name: "UserContract",
                type: "address",
            },
        ],
        name: "getInvitersByAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
            },
        ],
        name: "getInvitersById",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
        ],
        name: "getOrderById",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "metadata",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "brief",
                        type: "string",
                    },
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "buyerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sellerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "gigId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "disputeId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256[]",
                        name: "reviewIds",
                        type: "uint256[]",
                    },
                    {
                        internalType: "bool",
                        name: "disputed",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "price",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "buyerFees",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "sellerFees",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "createdAt",
                                type: "uint256",
                            },
                            {
                                internalType: "contract IERC20",
                                name: "currency",
                                type: "address",
                            },
                        ],
                        internalType: "struct DataTypes.Invoice",
                        name: "invoice",
                        type: "tuple",
                    },
                    {
                        internalType: "enum DataTypes.OrderState",
                        name: "state",
                        type: "uint8",
                    },
                ],
                internalType: "struct OutputTypes.OrderOutput",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getOrderCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getOrderList",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "metadata",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "brief",
                        type: "string",
                    },
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "buyerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sellerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "gigId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "disputeId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256[]",
                        name: "reviewIds",
                        type: "uint256[]",
                    },
                    {
                        internalType: "bool",
                        name: "disputed",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "price",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "buyerFees",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "sellerFees",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "createdAt",
                                type: "uint256",
                            },
                            {
                                internalType: "contract IERC20",
                                name: "currency",
                                type: "address",
                            },
                        ],
                        internalType: "struct DataTypes.Invoice",
                        name: "invoice",
                        type: "tuple",
                    },
                    {
                        internalType: "enum DataTypes.OrderState",
                        name: "state",
                        type: "uint8",
                    },
                ],
                internalType: "struct OutputTypes.OrderOutput[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "caller",
                type: "address",
            },
            {
                internalType: "contract IUser",
                name: "UserContract",
                type: "address",
            },
        ],
        name: "getUserIdByAddress",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "hasProtocolRole",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "caller",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
            },
            {
                internalType: "contract IUser",
                name: "UserContract",
                type: "address",
            },
        ],
        name: "isCallerUser",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "gigId",
                type: "uint256",
            },
            {
                internalType: "contract IUser",
                name: "UserContract",
                type: "address",
            },
        ],
        name: "isGigOwner",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isStillBuyer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isStillSeller",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "kill",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "buyerId",
                type: "uint256",
            },
        ],
        name: "payOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "sellerId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "buyerId",
                type: "uint256",
            },
        ],
        name: "refundOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "winningChoice",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "procecutorId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "defendantId",
                type: "uint256",
            },
        ],
        name: "rule",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IAddressProvider",
                name: "_providerAddress",
                type: "address",
            },
        ],
        name: "setProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040526000196005553480156200001757600080fd5b50604051620035e2380380620035e28339810160408190526200003a916200010b565b806200004633620000b9565b6040805180820190915260018152603560f81b60208201526001600160a01b038216620000915760405162461bcd60e51b81526004016200008891906200013d565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000195565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200011e57600080fd5b81516001600160a01b03811681146200013657600080fd5b9392505050565b600060208083528351808285015260005b818110156200016c578581018301518582016040015282016200014e565b818111156200017f576000604083870101525b50601f01601f1916929092016040019392505050565b61343d80620001a56000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063d2fbd0ed11610097578063e5b5019a11610071578063e5b5019a146103d4578063f2fde38b146103dd578063f38aa74d146103f0578063fa1021c41461040357600080fd5b8063d2fbd0ed1461039b578063daea85c5146103ae578063db46f68a146103c157600080fd5b8063bebf138f116100d3578063bebf138f1461034f578063c835188214610362578063c9d5a94c14610375578063cfd8d6c01461038857600080fd5b80638da5cb5b14610318578063985fadc814610329578063b817bcf71461033c57600080fd5b806341c0e1b511610166578063715018a611610140578063715018a6146102e257806379a558e7146102ea57806387d51276146102fd5780638d0a5fbb1461031057600080fd5b806341c0e1b51461029757806342b50a7a146102a157806366e5e0b3146102c157600080fd5b80631848effa116101a25780631848effa1461022b57806318f385181461023e57806319872f76146102515780633a16c97d1461026457600080fd5b80630542975c146101c957806311e0c07b146101f3578063163dd8bb14610216575b600080fd5b6004546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61020661020136600461254f565b610416565b60405190151581526020016101ea565b61021e6104a0565b6040516101ea9190612732565b6004546101d6906001600160a01b031681565b61020661024c366004612794565b61054f565b6101d661025f3660046127cb565b6105d6565b6102776102723660046127e4565b61065b565b604080516001600160a01b039384168152929091166020830152016101ea565b61029f6106e3565b005b6102b46102af3660046127cb565b61070b565b6040516101ea919061281d565b6102d46102cf3660046127e4565b610838565b6040519081526020016101ea565b61029f6108b5565b6102066102f8366004612830565b6108c9565b61029f61030b3660046129a0565b61097f565b6102d4610bc5565b6003546001600160a01b03166101d6565b610206610337366004612a3d565b610bd2565b61020661034a366004612830565b610c36565b61027761035d3660046127cb565b610ced565b610206610370366004612a62565b610d85565b61029f610383366004612a94565b611011565b61029f610396366004612830565b61112f565b61029f6103a9366004612a94565b61127d565b61029f6103bc366004612830565b61143d565b61029f6103cf366004612ab6565b611545565b6102d460055481565b61029f6103eb366004612830565b611850565b61029f6103fe366004612a94565b6118c9565b61029f610411366004612b4a565b61199a565b60405163fbd2817f60e01b815260048101849052602481018390526000906001600160a01b0383169063fbd2817f9060440160206040518083038186803b15801561046057600080fd5b505afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190612b8b565b949350505050565b606060006104ac610bc5565b90506000816001600160401b038111156104c8576104c861284d565b60405190808252806020026020018201604052801561050157816020015b6104ee6124a6565b8152602001906001900390816104e65790505b50905060005b82811015610548576105188161070b565b82828151811061052a5761052a612ba6565b6020026020010181905250808061054090612bd2565b915050610507565b5092915050565b60405163dff3b49760e01b81526001600160a01b038481166004830152600091849184169063dff3b4979060240160206040518083038186803b15801561059557600080fd5b505afa1580156105a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cd9190612bed565b14949350505050565b60048054604051630cc397bb60e11b81529182018390526000916001600160a01b03909116906319872f769060240160206040518083038186803b15801561061d57600080fd5b505afa158015610631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190612c11565b92915050565b604051636e83778160e11b81526001600160a01b038381166004830152600091829184169063dd06ef0290602401604080518083038186803b1580156106a057600080fd5b505afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d89190612c2e565b915091509250929050565b6004546001600160a01b031633146106fd576106fd612c5d565b6004546001600160a01b0316ff5b6107136124a6565b60405163b54a2e1960e01b8152600481018390526002602482015260009073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063b54a2e199060440160206040518083038186803b15801561076857600080fd5b505af415801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190612bed565b6040516302738e1760e61b8152600481018290526024810185905290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__90639ce385c09060440160006040518083038186803b1580156107f557600080fd5b505af4158015610809573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108319190810190612d9d565b9392505050565b60405163dff3b49760e01b81526001600160a01b0383811660048301526000919083169063dff3b4979060240160206040518083038186803b15801561087d57600080fd5b505afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108319190612bed565b6108bd611b1d565b6108c76000611b77565b565b60006108dd64212aaca2a960d91b83610bd2565b80156106555750426108f5632aa9a2a960e11b6105d6565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b15801561093857600080fd5b505afa15801561094c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109749190810190612ec0565b604001511192915050565b336000610992632aa9a2a960e11b6105d6565b905060006109a9664449535055544560c81b6105d6565b60405163dff3b49760e01b81526001600160a01b03858116600483015291925060009184169063dff3b4979060240160206040518083038186803b1580156109f057600080fd5b505afa158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190612bed565b90506000878214610a395787610a3b565b865b905087821480610a4a57508682145b60405180604001604052806002815260200161323560f01b81525090610a8c5760405162461bcd60e51b8152600401610a839190613086565b60405180910390fd5b50604051630639c40960e31b81526000906001600160a01b038516906331ce204890610ac4908d90879087908c908e90600401613099565b602060405180830381600087803b158015610ade57600080fd5b505af1158015610af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b169190612bed565b60405163681caa2160e01b8152600481018c9052602481018a9052604481018b9052606481018290526002608482015290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063681caa219060a40160206040518083038186803b158015610b8057600080fd5b505af4158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb89190612b8b565b5050505050505050505050565b6000806106556000611bc9565b600080610bec6a20a1a62fa6a0a720a3a2a960a91b6105d6565b604051632474521560e21b8152600481018690526001600160a01b03858116602483015291909116906391d148549060440160206040518083038186803b15801561046057600080fd5b6000610c4b6529a2a62622a960d11b83610bd2565b8015610655575042610c63632aa9a2a960e11b6105d6565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b158015610ca657600080fd5b505afa158015610cba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ce29190810190612ec0565b608001511192915050565b600080610d00632aa9a2a960e11b6105d6565b6001600160a01b031663bebf138f846040518263ffffffff1660e01b8152600401610d2d91815260200190565b604080518083038186803b158015610d4457600080fd5b505afa158015610d58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7c9190612c2e565b91509150915091565b6000664449535055544560c81b610d9b816105d6565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610de85760405162461bcd60e51b8152600401610a839190613086565b506000610dfb632aa9a2a960e11b6105d6565b90506000610e088761070b565b610120015190506000610e19611bd3565b6040516346c0649160e11b8152600481018890529091506000906001600160a01b03851690638d80c9229060240160206040518083038186803b158015610e5f57600080fd5b505afa158015610e73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e979190612c11565b6040516346c0649160e11b8152600481018a90529091506000906001600160a01b03861690638d80c9229060240160206040518083038186803b158015610edd57600080fd5b505afa158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f159190612c11565b905060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63843234578e88604001518960000151610f4991906130f6565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401604080518083038186803b158015610f8457600080fd5b505af4158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbc919061310d565b91509150610fcf82848860800151611c7c565b610fde81858860800151611c7c565b610fee866040015184878a611c95565b610ffe866020015184878a611c95565b5060019c9b505050505050505050505050565b336000611024632aa9a2a960e11b6105d6565b905061103182848361054f565b60405180604001604052806002815260200161032360f41b8152509061106a5760405162461bcd60e51b8152600401610a839190613086565b506000611075611de1565b805160405163937bb08360e01b81526004810188905260248101879052604481019190915260026064820152909150600090819073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063937bb08390608401604080518083038186803b1580156110df57600080fd5b505af41580156110f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111179190613131565b91509150611126828683611c7c565b50505050505050565b6001600160a01b038116158061114f57506004546001600160a01b031633145b806111db5750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561119857600080fd5b505afa1580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d09190612c11565b6001600160a01b0316145b61125b5760405162461bcd60e51b815260206004820152604560248201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060448201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060648201526437bbb732b960d91b608482015260a401610a83565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b336000611290632aa9a2a960e11b6105d6565b905061129d82848361054f565b60405180604001604052806002815260200161032360f41b815250906112d65760405162461bcd60e51b8152600401610a839190613086565b506040516319e45cf360e21b81526004810185905260248101849052600260448201526000908190819073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063679173cc9060640160e06040518083038186803b15801561133757600080fd5b505af415801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190613156565b9250925092506000846001600160a01b0316638d80c922846040518263ffffffff1660e01b81526004016113a591815260200190565b60206040518083038186803b1580156113bd57600080fd5b505afa1580156113d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f59190612c11565b90506000611401611bd3565b90506114138560200151888389611c95565b6114238560400151838389611c95565b61143283838760800151611c7c565b505050505050505050565b6d282927aa27a1a7a62fa0a226a4a760911b6114598133610bd2565b6114a55760405162461bcd60e51b815260206004820152601c60248201527f5265717569726573206d73672e73656e6465722068617320726f6c65000000006044820152606401610a83565b60006114b66211105560ea1b6105d6565b60055460405163095ea7b360e01b81526001600160a01b038084166004830152602482019290925291925084169063095ea7b390604401602060405180830381600087803b15801561150757600080fd5b505af115801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190612b8b565b50505050565b61154e336108c9565b60405180604001604052806002815260200161313760f01b815250906115875760405162461bcd60e51b8152600401610a839190613086565b50600061159a632aa9a2a960e11b6105d6565b90506115af8260000151836040015183610416565b60405180604001604052806002815260200161062760f31b815250906115e85760405162461bcd60e51b8152600401610a839190613086565b5081516040516346c0649160e11b815261166d916001600160a01b03841691638d80c9229161161d9160040190815260200190565b60206040518083038186803b15801561163557600080fd5b505afa158015611649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190612c11565b60405180604001604052806002815260200161189b60f11b815250906116a65760405162461bcd60e51b8152600401610a839190613086565b503360006116b2610bc5565b90506000806116c66247494760e81b6105d6565b6001600160a01b031663a1ba444d84886040015189606001516040518463ffffffff1660e01b815260040161170e939291909283526020830191909152604082015260600190565b600060405180830381600087803b15801561172857600080fd5b505af115801561173c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261176491908101906131da565b6020890151604051634c138a5b60e11b815260048101919091526024810187905291945092506001600160a01b038716915063982714b690604401602060405180830381600087803b1580156117b957600080fd5b505af11580156117cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f19190612b8b565b5061182f8483836000015160405180608001604052808881526020018b6020015181526020018b6000015181526020018b604001518152508a611ea4565b6118486b21a922a0aa22afa7a92222a960a11b8561212b565b505050505050565b611858611b1d565b6001600160a01b0381166118bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a83565b6118c681611b77565b50565b3360006118dc632aa9a2a960e11b6105d6565b90506118e982848361054f565b60405180604001604052806002815260200161313960f01b815250906119225760405162461bcd60e51b8152600401610a839190613086565b50604051634d52915760e01b815260048101859052602481018490526002604482015273__$1e813abb9dfd13063c9f915940bdcd3e67$__90634d5291579060640160006040518083038186803b15801561197c57600080fd5b505af4158015611990573d6000803e3d6000fd5b5050505050505050565b3360006119ad632aa9a2a960e11b6105d6565b6040516346c0649160e11b8152600481018590529091506000906001600160a01b03831690638d80c9229060240160206040518083038186803b1580156119f357600080fd5b505afa158015611a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2b9190612c11565b9050611a3883868461054f565b60405180604001604052806002815260200161313960f01b81525090611a715760405162461bcd60e51b8152600401610a839190613086565b5060405163051b30cb60e21b815260048101879052602481018690526044810185905260026064820152600090819073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063146cc32c90608401604080518083038186803b158015611ad657600080fd5b505af4158015611aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0e9190613131565b91509150611990828483611c7c565b6003546001600160a01b031633146108c75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a83565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610655825490565b6040805180820190915260008082526020820152611c0874282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6105d6565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b158015611c3f57600080fd5b505afa158015611c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c779190613238565b905090565b611c906001600160a01b038216838561219a565b505050565b600080611ca2858461065b565b6040805160608101825289815287516020808301918252890151828401908152925163013a9d5b60e01b81529151600483015251602482015290516044820152919350915060009073__$30e2c0763bc74e29ca837c0a99f7d1b333$__9063013a9d5b9060640160606040518083038186803b158015611d2157600080fd5b505af4158015611d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d599190613254565b90506000611d6c6211105560ea1b6105d6565b9050611dcb6040518060c00160405280306001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020018460000151815260200184602001518152602001846040015181525082612225565b611990682820acafa7a92222a960b91b8861212b565b611e136040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b611e3474282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6105d6565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b158015611e6c57600080fd5b505afa158015611e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c779190613290565b6000611ec774282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6105d6565b90506000816001600160a01b031663d618cc646040518163ffffffff1660e01b8152600401604080518083038186803b158015611f0357600080fd5b505afa158015611f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3b9190613238565b90506000826001600160a01b0316633388aed96040518163ffffffff1660e01b8152600401604080518083038186803b158015611f7757600080fd5b505afa158015611f8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611faf9190613238565b90506000611fc26211105560ea1b6105d6565b6001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ffc57600080fd5b505af1158015612010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120349190612c11565b9050600073__$1e813abb9dfd13063c9f915940bdcd3e67$";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class Order__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, Order__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$1e813abb9dfd13063c9f915940bdcd3e67\\$__", "g"), linkLibraryAddresses["contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"]
            .replace(/^0x/, "")
            .toLowerCase());
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"), linkLibraryAddresses["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(provider, overrides) {
        return super.deploy(provider, overrides || {});
    }
    getDeployTransaction(provider, overrides) {
        return super.getDeployTransaction(provider, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Order__factory = Order__factory;
Order__factory.bytecode = _bytecode;
Order__factory.abi = _abi;
