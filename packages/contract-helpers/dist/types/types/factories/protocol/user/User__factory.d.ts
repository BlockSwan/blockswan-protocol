import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { User, UserInterface } from "../../../protocol/user/User";
type UserConstructorParams = [linkLibraryAddresses: UserLibraryAddresses, signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class User__factory extends ContractFactory {
    constructor(...args: UserConstructorParams);
    static linkBytecode(linkLibraryAddresses: UserLibraryAddresses): string;
    deploy(provider: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<User>;
    getDeployTransaction(provider: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): User;
    connect(signer: Signer): User__factory;
    static readonly bytecode = "0x60806040526000196008553480156200001757600080fd5b5060405162002b8b38038062002b8b8339810160408190526200003a916200010b565b806200004633620000b9565b6040805180820190915260018152603560f81b60208201526001600160a01b038216620000915760405162461bcd60e51b81526004016200008891906200013d565b60405180910390fd5b50600780546001600160a01b0319166001600160a01b03929092169190911790555062000195565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200011e57600080fd5b81516001600160a01b03811681146200013657600080fd5b9392505050565b600060208083528351808285015260005b818110156200016c578581018301518582016040015282016200014e565b818111156200017f576000604083870101525b50601f01601f1916929092016040019392505050565b6129e680620001a56000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063982714b6116100f9578063cfd8d6c011610097578063dff3b49711610071578063dff3b497146103be578063e5b5019a146103d1578063f2fde38b146103da578063fbd2817f146103ed57600080fd5b8063cfd8d6c014610385578063daea85c514610398578063dd06ef02146103ab57600080fd5b8063adcd2d21116100d3578063adcd2d2114610317578063b817bcf71461032a578063b85220431461033d578063bebf138f1461035257600080fd5b8063982714b6146102db578063985fadc8146102ee578063a4a1e2631461030157600080fd5b806369c212f61161016657806379a558e71161014057806379a558e71461029c5780638d80c922146102af5780638da5cb5b146102c25780638f299b1e146102d357600080fd5b806369c212f6146102615780636ed6da9e14610281578063715018a61461029457600080fd5b8063128fdb48116101a2578063128fdb481461022b5780631848effa1461023357806319872f761461024657806341c0e1b51461025957600080fd5b80630542975c146101c957806311e0c07b146101f3578063121ef24314610216575b600080fd5b6007546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b610206610201366004611f93565b610400565b60405190151581526020016101ea565b610229610224366004612065565b61048a565b005b610229610659565b6007546101d6906001600160a01b031681565b6101d66102543660046120e7565b61085f565b6102296108e2565b61027461026f366004612100565b61090a565b6040516101ea91906122ea565b61027461028f3660046120e7565b6109df565b610229610a70565b6102066102aa366004612100565b610a84565b6101d66102bd3660046120e7565b610b3a565b6006546001600160a01b03166101d6565b610229610b47565b6102066102e93660046122fd565b610cdc565b6102066102fc36600461231f565b610de3565b610309610e47565b6040519081526020016101ea565b61020661032536600461234f565b610e54565b610206610338366004612100565b610f11565b610345610fc8565b6040516101ea919061237b565b6103656103603660046120e7565b611078565b604080516001600160a01b039384168152929091166020830152016101ea565b610229610393366004612100565b6111ae565b6102296103a6366004612100565b6112fc565b6103656103b9366004612100565b6113fe565b6103096103cc366004612100565b61145a565b61030960085481565b6102296103e8366004612100565b611467565b6102066103fb3660046122fd565b6114e0565b60405163fbd2817f60e01b815260048101849052602481018390526000906001600160a01b0383169063fbd2817f9060440160206040518083038186803b15801561044a57600080fd5b505afa15801561045e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048291906123dd565b949350505050565b6000610494610e47565b905080156104a4578082106104a7565b81155b60405180604001604052806002815260200161031360f41b815250906104e95760405162461bcd60e51b81526004016104e091906123ff565b60405180910390fd5b506000819050600060405180608001604052808381526020018681526020018581526020016105153390565b6001600160a01b0316905260405163729dfdcd60e11b815290915060009073__$2fdc6bd74422c331d4350e08f48e4d7efc$__9063e53bfb9a906105659084906002906005908890600401612412565b60206040518083038186803b15801561057d57600080fd5b505af4158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b591906123dd565b90508080156105d6575060016105c9610e47565b6105d3919061248d565b83145b604051806040016040528060018152602001600760fb1b8152509061060e5760405162461bcd60e51b81526004016104e091906123ff565b50336001600160a01b0316837fbee9c5c7ffbde119e3d12f30b5b584a6b78652a5ce90278f90c9c98c0f3178db8460405161064991906124a4565b60405180910390a3505050505050565b33600061066e64212aaca2a960d91b83610de3565b90508015604051806040016040528060018152602001603960f81b815250906106aa5760405162461bcd60e51b81526004016104e091906123ff565b5060006106bf64212aaca2a960d91b8461157b565b90506106d364212aaca2a960d91b846116e7565b60408051606080820183526001600160a01b038616825283830180516020908101519084015251015160ff16818301529051633bb7b3f960e01b815260009173__$2fdc6bd74422c331d4350e08f48e4d7efc$__91633bb7b3f991610743916002916005918791906004016124f5565b60206040518083038186803b15801561075b57600080fd5b505af415801561076f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079391906123dd565b90508060405180604001604052806002815260200161313160f01b815250906107cf5760405162461bcd60e51b81526004016104e091906123ff565b506107e96b2122a1a7a6a2afa12aaca2a960a11b85611767565b6108596040518060c00160405280866001600160a01b0316815260200184600001516001600160a01b0316815260200184602001516001600160a01b03168152602001846080015160000151815260200184608001516020015181526020018460800151604001518152506117ac565b50505050565b600754604051630cc397bb60e11b8152600481018390526000916001600160a01b0316906319872f769060240160206040518083038186803b1580156108a457600080fd5b505afa1580156108b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190612543565b92915050565b6007546001600160a01b031633146108fc576108fc612560565b6007546001600160a01b0316ff5b610912611e6a565b6001600160a01b038216600090815260056020526040902073__$2fdc6bd74422c331d4350e08f48e4d7efc$__632aa8eb8082610950600287611883565b6040516001600160e01b031960e085901b168152600481019290925260248201526001600160a01b03861660448201526064015b60006040518083038186803b15801561099c57600080fd5b505af41580156109b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109d8919081019061263b565b9392505050565b6109e7611e6a565b60006005816109f68186611898565b6001600160a01b031681526020810191909152604001600020905073__$2fdc6bd74422c331d4350e08f48e4d7efc$__632aa8eb808285610a3681610b3a565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526001600160a01b03166044820152606401610984565b610a786118a4565b610a8260006118fe565b565b6000610a9864212aaca2a960d91b83610de3565b80156108dc575042610ab0632aa9a2a960e11b61085f565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b158015610af357600080fd5b505afa158015610b07573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b2f919081019061263b565b604001511192915050565b6000806109d88184611898565b336000610b5d6529a2a62622a960d11b83610de3565b9050801560405180604001604052806002815260200161189960f11b81525090610b9a5760405162461bcd60e51b81526004016104e091906123ff565b506000610bb06529a2a62622a960d11b8461157b565b9050610bc56529a2a62622a960d11b846116e7565b60408051606080820183526001600160a01b038616825283830180516020908101519084015251015160ff16818301529051633ea5a5a360e11b815260009173__$2fdc6bd74422c331d4350e08f48e4d7efc$__91637d4b4b4691610c35916002916005918791906004016124f5565b60206040518083038186803b158015610c4d57600080fd5b505af4158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8591906123dd565b90508060405180604001604052806002815260200161313360f01b81525090610cc15760405162461bcd60e51b81526004016104e091906123ff565b506107e96c2122a1a7a6a2afa9a2a62622a960991b85611767565b60006427a92222a960d91b610cf08161085f565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610d3d5760405162461bcd60e51b81526004016104e091906123ff565b5060405163a292a61360e01b81526004810184905260248101859052600060448201819052600560648301529073__$2fdc6bd74422c331d4350e08f48e4d7efc$__9063a292a613906084015b60206040518083038186803b158015610da257600080fd5b505af4158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda91906123dd565b95945050505050565b600080610dfd6a20a1a62fa6a0a720a3a2a960a91b61085f565b604051632474521560e21b8152600481018690526001600160a01b03858116602483015291909116906391d148549060440160206040518083038186803b15801561044a57600080fd5b6000806108dc6000611950565b60006247494760e81b610e668161085f565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610eb35760405162461bcd60e51b81526004016104e091906123ff565b50600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__63a2caedd685610eda8861145a565b6040516001600160e01b031960e085901b168152600481019290925260248201526000604482015260056064820152608401610d8a565b6000610f266529a2a62622a960d11b83610de3565b80156108dc575042610f3e632aa9a2a960e11b61085f565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b158015610f8157600080fd5b505afa158015610f95573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fbd919081019061263b565b608001511192915050565b60606000610fd4610e47565b905060008167ffffffffffffffff811115610ff157610ff1611fcc565b60405190808252806020026020018201604052801561102a57816020015b611017611e6a565b81526020019060019003908161100f5790505b50905060005b8281101561107157611041816109df565b82828151811061105357611053612802565b6020026020010181905250808061106990612818565b915050611030565b5092915050565b60405163f1193ae960e01b81526004810182905260006024820181905260056044830152908190819073__$2fdc6bd74422c331d4350e08f48e4d7efc$__9063f1193ae9906064015b60206040518083038186803b1580156110d957600080fd5b505af41580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111119190612833565b604051631900f20b60e21b815260048101829052600060248201526005604482015290915073__$30e2c0763bc74e29ca837c0a99f7d1b333$__90636403c82c90606401604080518083038186803b15801561116c57600080fd5b505af4158015611180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a4919061284c565b9250925050915091565b6001600160a01b03811615806111ce57506007546001600160a01b031633145b8061125a5750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561121757600080fd5b505afa15801561122b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124f9190612543565b6001600160a01b0316145b6112da5760405162461bcd60e51b815260206004820152604560248201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060448201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060648201526437bbb732b960d91b608482015260a4016104e0565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6d282927aa27a1a7a62fa0a226a4a760911b6113188133610de3565b6113645760405162461bcd60e51b815260206004820152601c60248201527f5265717569726573206d73672e73656e6465722068617320726f6c650000000060448201526064016104e0565b60006113756211105560ea1b61085f565b60085460405163095ea7b360e01b81526001600160a01b038084166004830152602482019290925291925084169063095ea7b390604401602060405180830381600087803b1580156113c657600080fd5b505af11580156113da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085991906123dd565b604051635e80e95160e01b81526001600160a01b03821660048201526002602482015260006044820181905260056064830152908190819073__$2fdc6bd74422c331d4350e08f48e4d7efc$__90635e80e951906084016110c1565b60006108dc600283611883565b61146f6118a4565b6001600160a01b0381166114d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e0565b6114dd816118fe565b50565b604051630dde020f60e01b81526004810183905260248101829052600060448201819052600560648301529073__$2fdc6bd74422c331d4350e08f48e4d7efc$__90630dde020f9060840160206040518083038186803b15801561154357600080fd5b505af4158015611557573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d891906123dd565b611583611ee9565b6115b16040518060800160405280600081526020016000815260200160008152602001600060ff1681525090565b64212aaca2a960d91b8414156115d0576115c961195a565b90506115db565b6115d8611a1e565b90505b6000806115e7856113fe565b9150915060006115f5611aa5565b604080516060810182528651815282516020808301918252840151828401908152925163013a9d5b60e01b8152915160048301525160248201529051604482015290915060009073__$30e2c0763bc74e29ca837c0a99f7d1b333$";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IAddressProvider";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "userId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "newId";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "metadata";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inviterId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "wallet";
                readonly type: "address";
            }];
            readonly indexed: false;
            readonly internalType: "struct InputTypes.CreateUserInput";
            readonly name: "userData";
            readonly type: "tuple";
        }];
        readonly name: "UserAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "userId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "metadata";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inviterId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "userId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "wallet";
                readonly type: "address";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "offerIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "bidIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "buyerOrderIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "userReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "reviewsIds";
                readonly type: "uint256[]";
            }];
            readonly indexed: false;
            readonly internalType: "struct OutputTypes.UserOutput";
            readonly name: "userData";
            readonly type: "tuple";
        }];
        readonly name: "UserEdited";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "ADDRESSES_PROVIDER";
        readonly outputs: readonly [{
            readonly internalType: "contract IAddressProvider";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "ADDRESS_PROVIDER";
        readonly outputs: readonly [{
            readonly internalType: "contract IAddressProvider";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "MAX_UINT";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "erc20";
            readonly type: "address";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "becomeBuyer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "becomeSeller";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "buyerId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "newOrderId";
            readonly type: "uint256";
        }];
        readonly name: "createBuyerOrder";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "newGigId";
            readonly type: "uint256";
        }];
        readonly name: "createGig";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "metadata";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "inviterId";
            readonly type: "uint256";
        }];
        readonly name: "createUser";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_name";
            readonly type: "bytes32";
        }];
        readonly name: "fetchContract";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "userId";
            readonly type: "uint256";
        }];
        readonly name: "getAddressById";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "getIdByAddress";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "userId";
            readonly type: "uint256";
        }];
        readonly name: "getInvitersById";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "getInvitersByUserAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "pubKey";
            readonly type: "address";
        }];
        readonly name: "getUserByAddress";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "metadata";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inviterId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "userId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "wallet";
                readonly type: "address";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "offerIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "bidIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "buyerOrderIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "userReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "reviewsIds";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct OutputTypes.UserOutput";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "userId";
            readonly type: "uint256";
        }];
        readonly name: "getUserById";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "metadata";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inviterId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "userId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "wallet";
                readonly type: "address";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "offerIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "bidIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "buyerOrderIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "userReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "reviewsIds";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct OutputTypes.UserOutput";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUserList";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "metadata";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inviterId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerUntil";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerInvites";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "userId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "wallet";
                readonly type: "address";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "offerIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "bidIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "buyerOrderIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "gigReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "userReviewsIds";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "reviewsIds";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct OutputTypes.UserOutput[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUsersCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_role";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "hasProtocolRole";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "userId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "gigId";
            readonly type: "uint256";
        }, {
            readonly internalType: "contract IUser";
            readonly name: "UserContract";
            readonly type: "address";
        }];
        readonly name: "isGigOwner";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "userId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "gigId";
            readonly type: "uint256";
        }];
        readonly name: "isGigOwner";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "isStillBuyer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "isStillSeller";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "kill";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IAddressProvider";
            readonly name: "_providerAddress";
            readonly type: "address";
        }];
        readonly name: "setProvider";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): UserInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): User;
}
export interface UserLibraryAddresses {
    ["contracts/protocol/libraries/logics/UserLogic.sol:UserLogic"]: string;
    ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
export {};
