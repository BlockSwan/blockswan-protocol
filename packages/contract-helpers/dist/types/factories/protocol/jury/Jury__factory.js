"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Jury__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IAddressProvider",
                name: "provider",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "ADDRESSES_PROVIDER",
        outputs: [
            {
                internalType: "contract IAddressProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "ADDRESS_PROVIDER",
        outputs: [
            {
                internalType: "contract IAddressProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_UINT",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "erc20",
                type: "address",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "toStake",
                type: "uint256",
            },
        ],
        name: "depositStake",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "numberOfJurors",
                type: "uint256",
            },
        ],
        name: "drawJurors",
        outputs: [
            {
                internalType: "address[]",
                name: "jurors",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_name",
                type: "bytes32",
            },
        ],
        name: "fetchContract",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "accounts",
                type: "address[]",
            },
        ],
        name: "freezeTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "hasProtocolRole",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "gigId",
                type: "uint256",
            },
            {
                internalType: "contract IUser",
                name: "UserContract",
                type: "address",
            },
        ],
        name: "isGigOwner",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isStillBuyer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isStillSeller",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "kill",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "readJuror",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "stakedTokens",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "freezedTokens",
                        type: "uint256",
                    },
                ],
                internalType: "struct DataTypes.Juror",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "juror",
                type: "address",
            },
        ],
        name: "rewardJuror",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IAddressProvider",
                name: "_providerAddress",
                type: "address",
            },
        ],
        name: "setProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "unfreezeTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "toWithdraw",
                type: "uint256",
            },
        ],
        name: "withdrawStake",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040526000196006553480156200001757600080fd5b5060405162001db938038062001db98339810160408190526200003a916200019f565b8062000046336200014d565b6040805180820190915260018152603560f81b60208201526001600160a01b038216620000915760405162461bcd60e51b8152600401620000889190620001d1565b60405180910390fd5b50600580546001600160a01b0319166001600160a01b039290921691909117905560405163483abc4f60e11b8152600060048201527f426c6f636b7377616e2f536f72746974696f6e53756d54726565730000000000602482015262040000604482015273__$819dd864b9a28b29592cd77136582b47ce$__90639075789e9060640160006040518083038186803b1580156200012d57600080fd5b505af415801562000142573d6000803e3d6000fd5b505050505062000229565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620001b257600080fd5b81516001600160a01b0381168114620001ca57600080fd5b9392505050565b600060208083528351808285015260005b818110156200020057858101830151858201604001528201620001e2565b8181111562000213576000604083870101525b50601f01601f1916929092016040019392505050565b611b8080620002396000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063cfd8d6c01161007c578063cfd8d6c014610277578063d04899451461028a578063daea85c5146102b8578063e5b5019a146102cb578063f2fde38b146102e2578063fd9c6009146102f557600080fd5b80638da5cb5b1461020d578063985fadc81461021e578063ac36c0a814610231578063b817bcf714610251578063cb82cc8f1461026457600080fd5b806325d5971f116100ff57806325d5971f146101c457806341c0e1b5146101d757806344b797a2146101df578063715018a6146101f257806379a558e7146101fa57600080fd5b80630542975c1461013c57806311e0c07b1461016657806316252254146101895780631848effa1461019e57806319872f76146101b1575b600080fd5b6005546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b610179610174366004611405565b610308565b604051901515815260200161015d565b61019c6101973660046114d3565b610392565b005b600554610149906001600160a01b031681565b6101496101bf366004611572565b61054b565b6101796101d2366004611572565b6105ce565b61019c610794565b61019c6101ed36600461158b565b6107bc565b61019c6108d9565b6101796102083660046115bb565b6108ed565b6004546001600160a01b0316610149565b61017961022c36600461158b565b6109a3565b61024461023f366004611572565b610a07565b60405161015d91906115df565b61017961025f3660046115bb565b610c05565b610179610272366004611572565b610cbc565b61019c6102853660046115bb565b610e8a565b61029d6102983660046115bb565b610fd8565b6040805182518152602092830151928101929092520161015d565b61019c6102c63660046115bb565b61107b565b6102d460065481565b60405190815260200161015d565b61019c6102f03660046115bb565b611159565b61019c61030336600461158b565b6111d2565b60405163fbd2817f60e01b815260048101849052602481018390526000906001600160a01b0383169063fbd2817f9060440160206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a919061162c565b949350505050565b664449535055544560c81b6103a68161054b565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b815250906103fc5760405162461bcd60e51b81526004016103f3919061167a565b60405180910390fd5b506000610407611286565b80516020820151604051633e8973e560e01b815292935060009273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__92633e8973e59261045292600401918252602082015260400190565b60206040518083038186803b15801561046a57600080fd5b505af415801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906116ad565b6040516357774cdf60e11b815290915073__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063aeee99be906104f49084908890600080516020611b2b833981519152906003906000906004016116c6565b60206040518083038186803b15801561050c57600080fd5b505af4158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061162c565b5050505050565b600554604051630cc397bb60e11b8152600481018390526000916001600160a01b0316906319872f769060240160206040518083038186803b15801561059057600080fd5b505afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190611741565b92915050565b600033826105db82610fd8565b51604080518082019091526002815261323760f01b60208201529111156106155760405162461bcd60e51b81526004016103f3919061167a565b50604051633d32046f60e21b815273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063f4c811bc906106689086908590600080516020611b2b8339815191529060019060039060009060040161175e565b60206040518083038186803b15801561068057600080fd5b505af4158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b8919061162c565b5060006106ca6211105560ea1b61054b565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018790529192509082169063a9059cbb90604401602060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610750919061162c565b60405180604001604052806002815260200161323960f01b815250906107895760405162461bcd60e51b81526004016103f3919061167a565b506001949350505050565b6005546001600160a01b031633146107ae576107ae61178f565b6005546001600160a01b0316ff5b664449535055544560c81b6107d08161054b565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b8152509061081d5760405162461bcd60e51b81526004016103f3919061167a565b5060405163305893b560e11b8152600481018490526001600160a01b0383166024820152600080516020611b2b8339815191526044820152600360648201526000608482015273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__906360b1276a9060a4015b60206040518083038186803b15801561089b57600080fd5b505af41580156108af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d3919061162c565b50505050565b6108e1611344565b6108eb600061139e565b565b600061090164212aaca2a960d91b836109a3565b80156105c8575042610919632aa9a2a960e11b61054b565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b15801561095c57600080fd5b505afa158015610970573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610998919081019061186f565b604001511192915050565b6000806109bd6a20a1a62fa6a0a720a3a2a960a91b61054b565b604051632474521560e21b8152600481018690526001600160a01b03858116602483015291909116906391d148549060440160206040518083038186803b15801561035257600080fd5b60608167ffffffffffffffff811115610a2257610a2261143e565b604051908082528060200260200182016040528015610a4b578160200160208202803683370190505b5090506000610a58611286565b51905060005b83811015610bfe5760405163109680f160e21b8152600060048201819052600080516020611b2b8339815191526024830152604482018390529073__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063425a03c49060640160206040518083038186803b158015610acf57600080fd5b505af4158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b079190611741565b90505b82610b1482610fd8565b511015610bc05760405163109680f160e21b815260006004820152600080516020611b2b83398151915260248201526044810183905273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063425a03c49060640160206040518083038186803b158015610b8157600080fd5b505af4158015610b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb99190611741565b9050610b0a565b80848381518110610bd357610bd3611a36565b6001600160a01b03909216602092830291909101909101525080610bf681611a4c565b915050610a5e565b5050919050565b6000610c1a6529a2a62622a960d11b836109a3565b80156105c8575042610c32632aa9a2a960e11b61054b565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b158015610c7557600080fd5b505afa158015610c89573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb1919081019061186f565b608001511192915050565b60003381610cc8611286565b90506000610cdb6211105560ea1b61054b565b8251604080518082019091526002815261323760f01b6020820152919250861015610d195760405162461bcd60e51b81526004016103f3919061167a565b5060405163021d5e4b60e11b815273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063043abc9690610d6c9088908790600080516020611b2b8339815191529060019060039060009060040161175e565b60206040518083038186803b158015610d8457600080fd5b505af4158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc919061162c565b506040516323b872dd60e01b81526001600160a01b038481166004830152306024830152604482018790528216906323b872dd90606401602060405180830381600087803b158015610e0d57600080fd5b505af1158015610e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e45919061162c565b60405180604001604052806002815260200161064760f31b81525090610e7e5760405162461bcd60e51b81526004016103f3919061167a565b50600195945050505050565b6001600160a01b0381161580610eaa57506005546001600160a01b031633145b80610f365750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef357600080fd5b505afa158015610f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2b9190611741565b6001600160a01b0316145b610fb65760405162461bcd60e51b815260206004820152604560248201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060448201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060648201526437bbb732b960d91b608482015260a4016103f3565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252600080825260208201529051633206318d60e21b81526001600160a01b03831660048201526003602482015273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063c818c63490604401604080518083038186803b15801561104357600080fd5b505af4158015611057573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190611a75565b6d282927aa27a1a7a62fa0a226a4a760911b61109781336109a3565b6110e35760405162461bcd60e51b815260206004820152601c60248201527f5265717569726573206d73672e73656e6465722068617320726f6c650000000060448201526064016103f3565b60006110f46211105560ea1b61054b565b60065460405163095ea7b360e01b81526001600160a01b038084166004830152602482019290925291925084169063095ea7b390604401602060405180830381600087803b15801561114557600080fd5b505af11580156108af573d6000803e3d6000fd5b611161611344565b6001600160a01b0381166111c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f3565b6111cf8161139e565b50565b664449535055544560c81b6111e68161054b565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b815250906112335760405162461bcd60e51b81526004016103f3919061167a565b5060405163021d5e4b60e11b815273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063043abc96906108839086908690600080516020611b2b8339815191529060019060039060009060040161175e565b6112b16040518060800160405280600081526020016000815260200160008152602001600081525090565b60006112d474282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b61054b565b6001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b15801561130c57600080fd5b505afa158015611320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190611ac4565b6004546001600160a01b031633146108eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f3565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146111cf57600080fd5b60008060006060848603121561141a57600080fd5b83359250602084013591506040840135611433816113f0565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff811182821017156114785761147861143e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156114a7576114a761143e565b604052919050565b600067ffffffffffffffff8211156114c9576114c961143e565b5060051b60200190565b600060208083850312156114e657600080fd5b823567ffffffffffffffff8111156114fd57600080fd5b8301601f8101851361150e57600080fd5b803561152161151c826114af565b61147e565b81815260059190911b8201830190838101908783111561154057600080fd5b928401925b82841015611567578335611558816113f0565b82529284019290840190611545565b979650505050505050565b60006020828403121561158457600080fd5b5035919050565b6000806040838503121561159e57600080fd5b8235915060208301356115b0816113f0565b809150509250929050565b6000602082840312156115cd57600080fd5b81356115d8816113f0565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156116205783516001600160a01b0316835292840192918401916001016115fb565b50909695505050505050565b60006020828403121561163e57600080fd5b815180151581146115d857600080fd5b60005b83811015611669578181015183820152602001611651565b838111156108d35750506000910152565b602081526000825180602084015261169981604085016020870161164e565b601f01601f19169190910160400192915050565b6000602082840312156116bf57600080fd5b5051919050565b600060a08201878352602060a08185015281885180845260c086019150828a01935060005b818110156117105784516001600160a01b0316835293830193918301916001016116eb565b50506040850197909752505050606081019290925260809091015292915050565b805161173c816113f0565b919050565b60006020828403121561175357600080fd5b81516115d8816113f0565b9586526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b634e487b7160e01b600052600160045260246000fd5b600082601f8301126117b657600080fd5b815167ffffffffffffffff8111156117d0576117d061143e565b6117e3601f8201601f191660200161147e565b8181528460208386010111156117f857600080fd5b61038a82602083016020870161164e565b600082601f83011261181a57600080fd5b8151602061182a61151c836114af565b82815260059290921b8401810191818101908684111561184957600080fd5b8286015b84811015611864578051835291830191830161184d565b509695505050505050565b60006020828403121561188157600080fd5b815167ffffffffffffffff8082111561189957600080fd5b908301906101e082860312156118ae57600080fd5b6118b6611454565b8251828111156118c557600080fd5b6118d1878286016117a5565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261191c60e08401611731565b60e0820152610100808401518381111561193557600080fd5b61194188828701611809565b828401525050610120808401518381111561195b57600080fd5b61196788828701611809565b828401525050610140808401518381111561198157600080fd5b61198d88828701611809565b82840152505061016080840151838111156119a757600080fd5b6119b388828701611809565b82840152505061018080840151838111156119cd57600080fd5b6119d988828701611809565b8284015250506101a080840151838111156119f357600080fd5b6119ff88828701611809565b8284015250506101c08084015183811115611a1957600080fd5b611a2588828701611809565b918301919091525095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611a6e57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060408284031215611a8757600080fd5b6040516040810181811067ffffffffffffffff82111715611aaa57611aaa61143e565b604052825181526020928301519281019290925250919050565b600060808284031215611ad657600080fd5b6040516080810181811067ffffffffffffffff82111715611af957611af961143e565b806040525082518152602083015160208201526040830151604082015260608301516060820152809150509291505056fe426c6f636b7377616e2f536f72746974696f6e53756d54726565730000000000a264697066735822122012cc0af5d21ae08d1a2f07643cc2712047de98d2d17294992c3bdd76f319e94364736f6c63430008090033";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class Jury__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, Jury__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$819dd864b9a28b29592cd77136582b47ce\\$__", "g"), linkLibraryAddresses["contracts/imports/kleros/contracts/SortitionSumTreeFactory.sol:SortitionSumTreeFactory"]
            .replace(/^0x/, "")
            .toLowerCase());
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$d4e29236ef5669bc8e4309ccc6f37ccd7f\\$__", "g"), linkLibraryAddresses["contracts/protocol/libraries/logics/JuryLogic.sol:JuryLogic"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(provider, overrides) {
        return super.deploy(provider, overrides || {});
    }
    getDeployTransaction(provider, overrides) {
        return super.getDeployTransaction(provider, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Jury__factory = Jury__factory;
Jury__factory.bytecode = _bytecode;
Jury__factory.abi = _abi;
