"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IOrder__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
        ],
        name: "getOrderById",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "metadata",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "brief",
                        type: "string",
                    },
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "buyerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sellerId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "gigId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "disputeId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256[]",
                        name: "reviewIds",
                        type: "uint256[]",
                    },
                    {
                        internalType: "bool",
                        name: "disputed",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "price",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "buyerFees",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "sellerFees",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "createdAt",
                                type: "uint256",
                            },
                            {
                                internalType: "contract IERC20",
                                name: "currency",
                                type: "address",
                            },
                        ],
                        internalType: "struct DataTypes.Invoice",
                        name: "invoice",
                        type: "tuple",
                    },
                    {
                        internalType: "enum DataTypes.OrderState",
                        name: "state",
                        type: "uint8",
                    },
                ],
                internalType: "struct OutputTypes.OrderOutput",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "winningChoice",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "procecutorId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "defendantId",
                type: "uint256",
            },
        ],
        name: "rule",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IOrder__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IOrder__factory = IOrder__factory;
IOrder__factory.abi = _abi;
