/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface ErrorsInterface extends utils.Interface {
  functions: {
    "ADDRESS_ALREADY_USED()": FunctionFragment;
    "ADDRESS_PROVIDER_ALREADY_ADDED()": FunctionFragment;
    "ADDRESS_PROVIDER_NOT_REGISTERED()": FunctionFragment;
    "CONTRACT_NAME_ALREADY_USED()": FunctionFragment;
    "INDEX_OUT_OF_RANGE()": FunctionFragment;
    "INVALID_ADDRESS_PROVIDER_ID()": FunctionFragment;
    "INVALID_USER_ID()": FunctionFragment;
    "ZERO_ADDRESS_IS_INVALID()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "ADDRESS_ALREADY_USED"
      | "ADDRESS_PROVIDER_ALREADY_ADDED"
      | "ADDRESS_PROVIDER_NOT_REGISTERED"
      | "CONTRACT_NAME_ALREADY_USED"
      | "INDEX_OUT_OF_RANGE"
      | "INVALID_ADDRESS_PROVIDER_ID"
      | "INVALID_USER_ID"
      | "ZERO_ADDRESS_IS_INVALID"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "ADDRESS_ALREADY_USED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADDRESS_PROVIDER_ALREADY_ADDED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADDRESS_PROVIDER_NOT_REGISTERED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CONTRACT_NAME_ALREADY_USED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INDEX_OUT_OF_RANGE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_ADDRESS_PROVIDER_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_USER_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ZERO_ADDRESS_IS_INVALID",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ADDRESS_ALREADY_USED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADDRESS_PROVIDER_ALREADY_ADDED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADDRESS_PROVIDER_NOT_REGISTERED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CONTRACT_NAME_ALREADY_USED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INDEX_OUT_OF_RANGE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_ADDRESS_PROVIDER_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_USER_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ZERO_ADDRESS_IS_INVALID",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Errors extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ErrorsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    ADDRESS_ALREADY_USED(overrides?: CallOverrides): Promise<[string]>;

    ADDRESS_PROVIDER_ALREADY_ADDED(
      overrides?: CallOverrides
    ): Promise<[string]>;

    ADDRESS_PROVIDER_NOT_REGISTERED(
      overrides?: CallOverrides
    ): Promise<[string]>;

    CONTRACT_NAME_ALREADY_USED(overrides?: CallOverrides): Promise<[string]>;

    INDEX_OUT_OF_RANGE(overrides?: CallOverrides): Promise<[string]>;

    INVALID_ADDRESS_PROVIDER_ID(overrides?: CallOverrides): Promise<[string]>;

    INVALID_USER_ID(overrides?: CallOverrides): Promise<[string]>;

    ZERO_ADDRESS_IS_INVALID(overrides?: CallOverrides): Promise<[string]>;
  };

  ADDRESS_ALREADY_USED(overrides?: CallOverrides): Promise<string>;

  ADDRESS_PROVIDER_ALREADY_ADDED(overrides?: CallOverrides): Promise<string>;

  ADDRESS_PROVIDER_NOT_REGISTERED(overrides?: CallOverrides): Promise<string>;

  CONTRACT_NAME_ALREADY_USED(overrides?: CallOverrides): Promise<string>;

  INDEX_OUT_OF_RANGE(overrides?: CallOverrides): Promise<string>;

  INVALID_ADDRESS_PROVIDER_ID(overrides?: CallOverrides): Promise<string>;

  INVALID_USER_ID(overrides?: CallOverrides): Promise<string>;

  ZERO_ADDRESS_IS_INVALID(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    ADDRESS_ALREADY_USED(overrides?: CallOverrides): Promise<string>;

    ADDRESS_PROVIDER_ALREADY_ADDED(overrides?: CallOverrides): Promise<string>;

    ADDRESS_PROVIDER_NOT_REGISTERED(overrides?: CallOverrides): Promise<string>;

    CONTRACT_NAME_ALREADY_USED(overrides?: CallOverrides): Promise<string>;

    INDEX_OUT_OF_RANGE(overrides?: CallOverrides): Promise<string>;

    INVALID_ADDRESS_PROVIDER_ID(overrides?: CallOverrides): Promise<string>;

    INVALID_USER_ID(overrides?: CallOverrides): Promise<string>;

    ZERO_ADDRESS_IS_INVALID(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    ADDRESS_ALREADY_USED(overrides?: CallOverrides): Promise<BigNumber>;

    ADDRESS_PROVIDER_ALREADY_ADDED(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ADDRESS_PROVIDER_NOT_REGISTERED(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    CONTRACT_NAME_ALREADY_USED(overrides?: CallOverrides): Promise<BigNumber>;

    INDEX_OUT_OF_RANGE(overrides?: CallOverrides): Promise<BigNumber>;

    INVALID_ADDRESS_PROVIDER_ID(overrides?: CallOverrides): Promise<BigNumber>;

    INVALID_USER_ID(overrides?: CallOverrides): Promise<BigNumber>;

    ZERO_ADDRESS_IS_INVALID(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    ADDRESS_ALREADY_USED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADDRESS_PROVIDER_ALREADY_ADDED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADDRESS_PROVIDER_NOT_REGISTERED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CONTRACT_NAME_ALREADY_USED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    INDEX_OUT_OF_RANGE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    INVALID_ADDRESS_PROVIDER_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    INVALID_USER_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ZERO_ADDRESS_IS_INVALID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
