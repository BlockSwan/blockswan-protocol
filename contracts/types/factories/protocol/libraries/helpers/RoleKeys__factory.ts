/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RoleKeys,
  RoleKeysInterface,
} from "../../../../protocol/libraries/helpers/RoleKeys";

const _abi = [
  {
    inputs: [],
    name: "BLACKLIST_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BUYER_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BUYER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JUDGE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SELLER_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SELLER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WHITELIST_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "XP_GIVER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61033b610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c806383d708261161007057806383d708261461011a57806397125aa114610138578063aee2bc8614610156578063dbe4613d14610174578063e0e47588146101925761009d565b806319afe463146100a25780631ed17e32146100c05780637a01a1da146100de5780637a997ab7146100fc575b600080fd5b6100aa6101b0565b6040516100b791906102f4565b60405180910390f35b6100c86101d4565b6040516100d591906102f4565b60405180910390f35b6100e66101f8565b6040516100f391906102f4565b60405180910390f35b61010461021c565b60405161011191906102f4565b60405180910390f35b610122610240565b60405161012f91906102f4565b60405180910390f35b610140610264565b60405161014d91906102f4565b60405180910390f35b61015e610288565b60405161016b91906102f4565b60405180910390f35b61017c6102ac565b60405161018991906102f4565b60405180910390f35b61019a6102d0565b6040516101a791906102f4565b60405180910390f35b7f424c41434b4c495354000000000000000000000000000000000000000000000081565b7f58505f474956455200000000000000000000000000000000000000000000000081565b7f425559455200000000000000000000000000000000000000000000000000000081565b7f57484954454c495354000000000000000000000000000000000000000000000081565b7f53454c4c45525f41444d494e000000000000000000000000000000000000000081565b7f42555945525f41444d494e00000000000000000000000000000000000000000081565b7f50524f544f434f4c5f41444d494e00000000000000000000000000000000000081565b7f53454c4c4552000000000000000000000000000000000000000000000000000081565b7f4a5544474500000000000000000000000000000000000000000000000000000081565b60006020820190508282529291505056fea264697066735822122070676e1a7f784dedddf032970f5fbf017b2ca3bf44835e38d732f39147f0981e64736f6c63430008000033";

type RoleKeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoleKeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoleKeys__factory extends ContractFactory {
  constructor(...args: RoleKeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoleKeys> {
    return super.deploy(overrides || {}) as Promise<RoleKeys>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoleKeys {
    return super.attach(address) as RoleKeys;
  }
  override connect(signer: Signer): RoleKeys__factory {
    return super.connect(signer) as RoleKeys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoleKeysInterface {
    return new utils.Interface(_abi) as RoleKeysInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoleKeys {
    return new Contract(address, _abi, signerOrProvider) as RoleKeys;
  }
}
