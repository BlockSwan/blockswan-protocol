/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Errors,
  ErrorsInterface,
} from "../../../../protocol/libraries/helpers/Errors";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS_ALREADY_USED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER_ALREADY_ADDED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER_NOT_REGISTERED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_NOT_BUYER_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_NOT_SELLER_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_NAME_ALREADY_USED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DISPUTE_NOT_CREATED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FAILED_BECOMING_BUYER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FAILED_BECOMING_SELLER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FAILED_TO_STAKE_JURY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FAILED_TO_WITHDRAW_JURY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GIG_ID_ALREADY_EXISING",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OUT_OF_RANGE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_ADDRESS_PROVIDER_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_INVITER_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_ORDER_STATE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_USER_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JURY_STAKE_NOT_ENOUGH",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_GIG_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_ORDER_ACTOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_ORDER_BUYER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_ORDER_SELLER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NO_MATCHING_XP_KEY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONLY_BUYER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONLY_SELLER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESTRICTED_TO_BUYER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESTRICTED_TO_SELLER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SELF_REFUND_DELAY_NOT_OVER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS_IS_INVALID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6106c261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101d95760003560e01c806399b1944d1161010e578063cc8045e8116100ac578063e6b9a3111161007b578063e6b9a311146102bc578063e94402ea146102c4578063f07617b2146102cc578063fd3a2900146102d4576101d9565b8063cc8045e81461029c578063d030157b146102a4578063e169e078146102ac578063e407ada9146102b4576101d9565b8063b0687fa5116100e8578063b0687fa51461027c578063b9d5e9ed14610284578063bba1fdec1461028c578063bdceb4af14610294576101d9565b806399b1944d14610264578063a18911fb1461026c578063a881ae1f14610274576101d9565b806347a809de1161017b5780636b040b2b116101555780636b040b2b146102445780637fe801631461024c57806385b5cd7a146102545780638b866cd11461025c576101d9565b806347a809de1461022c5780635c65be551461023457806360aa55691461023c576101d9565b806318fef852116101b757806318fef8521461020c57806319923d7f146102145780632af4b5a81461021c5780633ba5ef1314610224576101d9565b806302316e19146101de57806305d92c6f146101fc5780631652b9f114610204575b600080fd5b6101e66102dc565b6040516101f39190610639565b60405180910390f35b6101e66102fa565b6101e6610318565b6101e6610336565b6101e6610354565b6101e6610371565b6101e661038e565b6101e66103ac565b6101e66103ca565b6101e66103e8565b6101e6610406565b6101e6610424565b6101e6610442565b6101e6610460565b6101e661047d565b6101e661049a565b6101e66104b7565b6101e66104d4565b6101e66104f2565b6101e661050f565b6101e661052d565b6101e661054b565b6101e6610569565b6101e6610587565b6101e66105a4565b6101e66105c1565b6101e66105df565b6101e66105fd565b6101e661061b565b60405180604001604052806002815260200161062760f31b81525081565b604051806040016040528060028152602001610c8d60f21b81525081565b60405180604001604052806002815260200161191b60f11b81525081565b60405180604001604052806002815260200161032360f41b81525081565b604051806040016040528060018152602001600d60fa1b81525081565b604051806040016040528060018152602001603360f81b81525081565b60405180604001604052806002815260200161189960f11b81525081565b60405180604001604052806002815260200161313760f01b81525081565b60405180604001604052806002815260200161323360f01b81525081565b60405180604001604052806002815260200161189b60f11b81525081565b60405180604001604052806002815260200161064760f31b81525081565b60405180604001604052806002815260200161313360f01b81525081565b60405180604001604052806002815260200161313960f01b81525081565b604051806040016040528060018152602001603960f81b81525081565b604051806040016040528060018152602001603160f81b81525081565b604051806040016040528060018152602001601960f91b81525081565b604051806040016040528060018152602001603560f81b81525081565b60405180604001604052806002815260200161323960f01b81525081565b604051806040016040528060018152602001601b60f91b81525081565b60405180604001604052806002815260200161323160f01b81525081565b60405180604001604052806002815260200161323760f01b81525081565b60405180604001604052806002815260200161191960f11b81525081565b60405180604001604052806002815260200161313160f01b81525081565b604051806040016040528060018152602001600760fb1b81525081565b604051806040016040528060018152602001603760f81b81525081565b60405180604001604052806002815260200161313560f01b81525081565b604051806040016040528060028152602001610c4d60f21b81525081565b60405180604001604052806002815260200161323560f01b81525081565b60405180604001604052806002815260200161031360f41b81525081565b6000602080835283518082850152825b8181101561066557858101830151858201604001528201610649565b818111156106765783604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220e45fef9752fd7ecc0830f10030dfc689f7e3b5f615de2f40f42edec7453662e664736f6c63430008000033";

type ErrorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErrorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Errors__factory extends ContractFactory {
  constructor(...args: ErrorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Errors> {
    return super.deploy(overrides || {}) as Promise<Errors>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Errors {
    return super.attach(address) as Errors;
  }
  override connect(signer: Signer): Errors__factory {
    return super.connect(signer) as Errors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErrorsInterface {
    return new utils.Interface(_abi) as ErrorsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Errors {
    return new Contract(address, _abi, signerOrProvider) as Errors;
  }
}
