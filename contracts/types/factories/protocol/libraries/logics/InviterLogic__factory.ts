/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  InviterLogic,
  InviterLogicInterface,
} from "../../../../protocol/libraries/logics/InviterLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currencyValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "affiliateShare",
        type: "uint256",
      },
    ],
    name: "calcInviterRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "affiliateShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lvl0AffiliateShare",
            type: "uint256",
          },
        ],
        internalType: "struct InputTypes.CalcInvitersRewardsInput",
        name: "params",
        type: "tuple",
      },
    ],
    name: "calcInvitersRewards",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "inviter0Rewards",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inviter1Rewards",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingRewards",
            type: "uint256",
          },
        ],
        internalType: "struct OutputTypes.CalcInvitersRewardsOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61066f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063013a9d5b146100665780635f4f36bd1461008f5780638f67cda6146100b05780639917612f146100d0578063db043c55146100fd575b600080fd5b61007961007436600461042d565b61011d565b6040516100869190610571565b60405180910390f35b6100a261009d3660046104cb565b610196565b60405161008692919061054c565b6100c36100be366004610488565b61029f565b6040516100869190610538565b8180156100dc57600080fd5b506100f06100eb366004610517565b6102bf565b6040516100869190610566565b61011061010b366004610517565b6102c8565b6040516100869190610592565b610125610335565b6000610139836000015184602001516102c8565b905060006101548460400151836102d090919063ffffffff16565b9050600061016282846105c5565b9050604051806060016040528083815260200182815260200184876000015161018b91906105c5565b905295945050505050565b60008060006101a5868661029f565b90506000610291856000846001600160a01b03166001600160a01b031681526020019081526020016000206040518060800160405290816000820180546101eb906105e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610217906105e8565b80156102645780601f1061023957610100808354040283529160200191610264565b820191906000526020600020905b81548152906001019060200180831161024757829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815250508761029f565b919791965090945050505050565b60006102b88360200151836102f690919063ffffffff16565b9392505050565b60019182015590565b60006102b883835b6000811561138819839004841115176102e857600080fd5b506127109102611388010490565b60006102b88383600082600001828154811061032257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60405180606001604052806000815260200160008152602001600081525090565b600060808284031215610367578081fd5b6040516080810167ffffffffffffffff828210818311171561038b5761038b610623565b8160405282935084359150808211156103a357600080fd5b818501915085601f8301126103b757600080fd5b81356020828211156103cb576103cb610623565b6103dd601f8301601f1916820161059b565b925081835287818386010111156103f357600080fd5b8181850182850137600081838501015282855280870135818601525050505060408301356040820152606083013560608201525092915050565b60006060828403121561043e578081fd5b6040516060810181811067ffffffffffffffff8211171561046157610461610623565b80604052508235815260208301356020820152604083013560408201528091505092915050565b6000806040838503121561049a578081fd5b823567ffffffffffffffff8111156104b0578182fd5b6104bc85828601610356565b95602094909401359450505050565b6000806000606084860312156104df578081fd5b833567ffffffffffffffff8111156104f5578182fd5b61050186828701610356565b9660208601359650604090950135949350505050565b60008060408385031215610529578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b81518152602080830151908201526040918201519181019190915260600190565b90815260200190565b60405181810167ffffffffffffffff811182821017156105bd576105bd610623565b604052919050565b6000828210156105e357634e487b7160e01b81526011600452602481fd5b500390565b6002810460018216806105fc57607f821691505b6020821081141561061d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122025044cf2621a19fe10b962fe8810e2705fd7ca329371c09da87a7a106e6003ab64736f6c63430008000033";

type InviterLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InviterLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InviterLogic__factory extends ContractFactory {
  constructor(...args: InviterLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InviterLogic> {
    return super.deploy(overrides || {}) as Promise<InviterLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InviterLogic {
    return super.attach(address) as InviterLogic;
  }
  override connect(signer: Signer): InviterLogic__factory {
    return super.connect(signer) as InviterLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InviterLogicInterface {
    return new utils.Interface(_abi) as InviterLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InviterLogic {
    return new Contract(address, _abi, signerOrProvider) as InviterLogic;
  }
}
