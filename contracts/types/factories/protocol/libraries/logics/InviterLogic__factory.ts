/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  InviterLogic,
  InviterLogicInterface,
} from "../../../../protocol/libraries/logics/InviterLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currencyValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "affiliateShare",
        type: "uint256",
      },
    ],
    name: "calcInviterRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "affiliateShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lvl0AffiliateShare",
            type: "uint256",
          },
        ],
        internalType: "struct InputTypes.CalcInvitersRewardsInput",
        name: "params",
        type: "tuple",
      },
    ],
    name: "calcInvitersRewards",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "inviter0Rewards",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inviter1Rewards",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingRewards",
            type: "uint256",
          },
        ],
        internalType: "struct OutputTypes.CalcInvitersRewardsOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61074a610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063013a9d5b1461006657806301fdfdb6146100965780636403c82c146100c65780639917612f146100f7578063db043c5514610134575b600080fd5b610080600480360381019061007b9190610564565b610164565b60405161008d91906106b4565b60405180910390f35b6100b060048036038101906100ab91906105cb565b610295565b6040516100bd9190610664565b60405180910390f35b6100e060048036038101906100db91906105ef565b6102f2565b6040516100ee92919061067d565b60405180910390f35b81801561010357600080fd5b5061011e6004803603810190610119919061061c565b6103ea565b60405161012b91906106a1565b60405180910390f35b61014e60048036038101906101499190610640565b61044f565b60405161015b91906106da565b60405180910390f35b61016c610543565b610180674a5fade87a2ecaf760c01b6104a8565b61019467703aab9217db3d7460c01b6104a8565b6101a8675d24633cdd97bea160c01b6104a8565b60006101bc8360000151846020015161044f565b90506101d2677709788011fd7f4b60c01b6104a8565b6101e667378953999da5b5d860c01b6104a8565b60006101ff8460400151836104ab90919063ffffffff16565b9050610215672966a4df671f5c0960c01b6104a8565b61022967425cc340d90a832460c01b6104a8565b6000818361023791906106eb565b905061024d6778357ab67a1ec42860c01b6104a8565b610261677cc97b9af17bc75a60c01b6104a8565b604051806060016040528083815260200182815260200184876000015161028891906106eb565b8152509350505050919050565b60006102ab679018f14ee6ad944360c01b6104a8565b6102bf676f77ab15ee529ecb60c01b6104a8565b6102d36746f6997a1bcbe0c160c01b6104a8565b6102ea8360010154836104d890919063ffffffff16565b905092915050565b6000806103096734703af8b7b0427a60c01b6104a8565b61031d6747b5b513129566c560c01b6104a8565b61033167bb2d5790a6ef214260c01b6104a8565b600061033d8686610295565b90506103536702490328061b395360c01b6104a8565b6103676722fdda1dc04d125760c01b6104a8565b60006103b08560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002087610295565b90506103c667dfcd23e397c26eae60c01b6104a8565b6103da67d0b62bcc692dd9a960c01b6104a8565b8181935093505050935093915050565b6000610400674056490e610a9e9b60c01b6104a8565b610414674d71a7517a717fd160c01b6104a8565b818360010181905550610431672fd66c3b43dbd24360c01b6104a8565b61044567922f0ef8eb337a7460c01b6104a8565b6001905092915050565b60006104656770b763472e79782160c01b6104a8565b61047967bb7ad01c85c87e4960c01b6104a8565b61048d67bd8bc3b72e45f81460c01b6104a8565b6104a082846104ab90919063ffffffff16565b905092915050565b50565b60008161138860001903048311158215176104c557600080fd5b6127106113888385020104905092915050565b60006104e783600001836104f2565b60001c905092915050565b6000826000018281548110610530577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b60405180606001604052806000815260200160008152602001600081525090565b600060608284031215610575578081fd5b6040516060810181811067ffffffffffffffff821117156105a457634e487b7160e01b83526041600452602483fd5b80604052508235815260208301356020820152604083013560408201528091505092915050565b600080604083850312156105dd578081fd5b82359150602083013590509250929050565b600080600060608486031215610603578081fd5b8335925060208401359150604084013590509250925092565b6000806040838503121561062e578182fd5b82359150602083013590509250929050565b60008060408385031215610652578182fd5b82359150602083013590509250929050565b600060208201905060018060a01b038316825292915050565b600060408201905060018060a01b0380851683528084166020840152509392505050565b6000602082019050821515825292915050565b600060608201905082518252602083015160208301526040830151604083015292915050565b600060208201905082825292915050565b60008282101561070957634e487b7160e01b81526011600452602481fd5b82820390509291505056fea26469706673582212200fbb64ac6fb776857e978174c2f83af51acb67cb3976a3d92bd36f6e078ca7d664736f6c63430008000033";

type InviterLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InviterLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InviterLogic__factory extends ContractFactory {
  constructor(...args: InviterLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InviterLogic> {
    return super.deploy(overrides || {}) as Promise<InviterLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InviterLogic {
    return super.attach(address) as InviterLogic;
  }
  override connect(signer: Signer): InviterLogic__factory {
    return super.connect(signer) as InviterLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InviterLogicInterface {
    return new utils.Interface(_abi) as InviterLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InviterLogic {
    return new Contract(address, _abi, signerOrProvider) as InviterLogic;
  }
}
