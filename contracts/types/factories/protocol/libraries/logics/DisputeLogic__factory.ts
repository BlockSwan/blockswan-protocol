/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DisputeLogic,
  DisputeLogicInterface,
} from "../../../../protocol/libraries/logics/DisputeLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "evidenceUntil",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "commitUntil",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteUntil",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "appealUntil",
        type: "uint256",
      },
    ],
    name: "calcDisputeDelaysFromBlock",
    outputs: [
      {
        internalType: "uint256[]",
        name: "delays",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61187e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063115e1e5f146100665780634aac50521461008f5780639d403dc5146100af578063a191f9b3146100dc578063a5fc071c146100fc575b600080fd5b6100796100743660046111b0565b61011c565b6040516100869190611612565b60405180910390f35b6100a261009d3660046112cc565b610131565b604051610086919061164a565b8180156100bb57600080fd5b506100cf6100ca3660046111e9565b6102ba565b604051610086919061165d565b6100ef6100ea3660046111b0565b61066a565b604051610086919061167b565b81801561010857600080fd5b506100cf61011736600461109d565b6107d5565b60008281526020829052604090205b92915050565b60408051600480825260a082019092526060914291906020820160808036833701905050915061016186826117c6565b8260008151811061018257634e487b7160e01b600052603260045260246000fd5b60200260200101818152505084826000815181106101b057634e487b7160e01b600052603260045260246000fd5b60200260200101516101c291906117c6565b826001815181106101e357634e487b7160e01b600052603260045260246000fd5b602002602001018181525050838260018151811061021157634e487b7160e01b600052603260045260246000fd5b602002602001015161022391906117c6565b8260028151811061024457634e487b7160e01b600052603260045260246000fd5b602002602001018181525050828260028151811061027257634e487b7160e01b600052603260045260246000fd5b602002602001015161028491906117c6565b826003815181106102a557634e487b7160e01b600052603260045260246000fd5b60200260200101818152505050949350505050565b805160009081906102cc9086906109d8565b905060006102de84600001518661011c565b60408086015190516320dbe63d60e21b815291925073__$a30805314670aba7a268b004e381771f39$__9163836f98f49161031e91859190600401611706565b60206040518083038186803b15801561033657600080fd5b505af415801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190611083565b50606084015160405163e4af479f60e01b815273__$a30805314670aba7a268b004e381771f39$__9163e4af479f916103ab918591600401611706565b60206040518083038186803b1580156103c357600080fd5b505af41580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190611083565b508073__$a30805314670aba7a268b004e381771f39$__63f1f965fa90918660c0015160008151811061043e57634e487b7160e01b600052603260045260246000fd5b60200260200101518760c0015160018151811061046b57634e487b7160e01b600052603260045260246000fd5b60200260200101518860c0015160028151811061049857634e487b7160e01b600052603260045260246000fd5b60200260200101518960c001516003815181106104c557634e487b7160e01b600052603260045260246000fd5b60200260200101516040518663ffffffff1660e01b81526004016104ed959493929190611714565b60206040518083038186803b15801561050557600080fd5b505af4158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190611083565b5060405163218d0a6360e01b815273__$a30805314670aba7a268b004e381771f39$__9063218d0a6390610575908490600401611612565b60206040518083038186803b15801561058d57600080fd5b505af41580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c59190611083565b50608084015160a085015160e086015160405163f608bcb360e01b815273__$81e31c3dd8ba021b250581ddc9f3365d5d$__9363f608bcb39361060f93600788019360040161161b565b60206040518083038186803b15801561062757600080fd5b505af415801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190611083565b509095945050505050565b610672610a4d565b60405180610120016040528084600001548152602001838152602001846001015481526020018460020154815260200184600301548152602001846004015481526020018460050180548060200260200160405190810160405280929190818152602001828054801561070457602002820191906000526020600020905b8154815260200190600101908083116106f0575b5050509183525050600685015460209091019060ff16600481111561073957634e487b7160e01b600052602160045260246000fd5b815260200173__$81e31c3dd8ba021b250581ddc9f3365d5d$__63327d2e01866007016040518263ffffffff1660e01b81526004016107789190611612565b60006040518083038186803b15801561079057600080fd5b505af41580156107a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107cc9190810190610ec7565b90529392505050565b6000806107e683600001518561011c565b60405163db7e892160e01b815290915060009073__$a30805314670aba7a268b004e381771f39$__9063db7e892190610823908590600401611612565b60206040518083038186803b15801561083b57600080fd5b505af415801561084f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087391906111d1565b604051634b7a59db60e11b815290915073__$a30805314670aba7a268b004e381771f39$__906396f4b3b6906108ad908590600401611612565b60206040518083038186803b1580156108c557600080fd5b505af41580156108d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fd9190611083565b60405180604001604052806002815260200161199960f11b8152509061093f5760405162461bcd60e51b81526004016109369190611668565b60405180910390fd5b5060408085015190516331d0395d60e11b815273__$81e31c3dd8ba021b250581ddc9f3365d5d$__916363a072ba9161097c918591600401611737565b60206040518083038186803b15801561099457600080fd5b505af41580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190611083565b50600195945050505050565b60006109e483836109eb565b9392505050565b60006109f78383610a35565b610a2d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561012b565b50600061012b565b60009081526001919091016020526040902054151590565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016060815260200160006004811115610aab57634e487b7160e01b600052602160045260246000fd5b8152602001606081525090565b8051610ac381611830565b919050565b600082601f830112610ad8578081fd5b81356020610aed610ae88361177a565b611750565b8281528181019085830183850287018401881015610b09578586fd5b855b85811015610b30578135610b1e81611830565b84529284019290840190600101610b0b565b5090979650505050505050565b600082601f830112610b4d578081fd5b81516020610b5d610ae88361177a565b8281528181019085830183850287018401881015610b79578586fd5b855b85811015610b30578151610b8e81611830565b84529284019290840190600101610b7b565b600082601f830112610bb0578081fd5b81516020610bc0610ae88361177a565b82815281810190858301855b85811015610b305781518801608080601f19838d03011215610bec578889fd5b6040805182810167ffffffffffffffff8282108183111715610c1057610c1061181a565b908352848a0151825284830151828b015260608501519080821115610c33578c8dfd5b610c418f8c84890101610e7c565b83850152938501519380851115610c56578c8dfd5b5050610c668d8a85870101610e7c565b606082015287525050509284019290840190600101610bcc565b600082601f830112610c90578081fd5b81516020610ca0610ae88361177a565b82815281810190858301855b85811015610b30578151880160c080601f19838d03011215610ccc578889fd5b6040805182810167ffffffffffffffff8282108183111715610cf057610cf061181a565b818452610cfe8b8701610ab8565b8352838601518b8401526060860151848401526080860151606084015260a0935083860151915080821115610d31578c8dfd5b50610d408e8b83880101610e7c565b608083015250610d51838501610e20565b91810191909152865250509284019290840190600101610cac565b600082601f830112610d7c578081fd5b81356020610d8c610ae88361177a565b8281528181019085830183850287018401881015610da8578586fd5b855b85811015610b3057813584529284019290840190600101610daa565b600082601f830112610dd6578081fd5b81516020610de6610ae88361177a565b8281528181019085830183850287018401881015610e02578586fd5b855b85811015610b3057815184529284019290840190600101610e04565b80518015158114610ac357600080fd5b600082601f830112610e40578081fd5b8135610e4e610ae88261179e565b818152846020838601011115610e62578283fd5b816020850160208301379081016020019190915292915050565b600082601f830112610e8c578081fd5b8151610e9a610ae88261179e565b818152846020838601011115610eae578283fd5b610ebf8260208301602087016117ea565b949350505050565b60006020808385031215610ed9578182fd5b825167ffffffffffffffff80821115610ef0578384fd5b818501915085601f830112610f03578384fd5b8151610f11610ae88261177a565b81815284810190848601875b8481101561107457815187016101c080601f19838f03011215610f3e578a8bfd5b610f4781611750565b8a830151815260408301518b820152606083015160408201526080830151606082015260a0830151608082015260c083015160a082015260e083015160c082015261010083015160e082015261012083015161010082015261014083015189811115610fb1578c8dfd5b610fbf8f8d83870101610dc6565b6101208301525061016083015189811115610fd8578c8dfd5b610fe68f8d83870101610dc6565b6101408301525061018083015189811115610fff578c8dfd5b61100d8f8d83870101610c80565b610160830152506101a083015189811115611026578c8dfd5b6110348f8d83870101610ba0565b6101808301525090820151908882111561104c578b8cfd5b61105a8e8c84860101610b3d565b6101a0820152865250509287019290870190600101610f1d565b50909998505050505050505050565b600060208284031215611094578081fd5b6109e482610e20565b60008060408084860312156110b0578182fd5b83359250602084013567ffffffffffffffff808211156110ce578384fd5b90850190606082880312156110e1578384fd5b82516060810181811083821117156110fb576110fb61181a565b84528235815260208084013590820152828401358281111561111b578586fd5b92909201916080838903121561112f578485fd5b83516080810181811084821117156111495761114961181a565b855283358152602080850135908201528385013583811115611169578687fd5b6111758a828701610e30565b868301525060608401358381111561118b578687fd5b6111978a828701610e30565b6060830152509381019390935250929590945092505050565b600080604083850312156111c2578182fd5b50508035926020909101359150565b6000602082840312156111e2578081fd5b5051919050565b6000806000606084860312156111fd578081fd5b8335925060208401359150604084013567ffffffffffffffff80821115611222578283fd5b8186019150610100808389031215611238578384fd5b61124181611750565b9050823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c08301358281111561128a578485fd5b61129689828601610d6c565b60c08301525060e0830135828111156112ad578485fd5b6112b989828601610ac8565b60e0830152508093505050509250925092565b600080600080608085870312156112e1578182fd5b5050823594602084013594506040840135936060013592509050565b6000815180845260208085019450808401835b838110156113355781516001600160a01b031687529582019590820190600101611310565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b858110156113865782840389526113748483516115c7565b9885019893509084019060010161135c565b5091979650505050505050565b6000815180845260208085018081965082840281019150828601855b85811015611386578284038952815180518552858101518686015260408082015190860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e080820151908601526101008082015190860152610120808201516101c0828801819052919061142f8389018261154a565b92505050610140808301518783038289015261144b838261154a565b92505050610160808301518783038289015261146783826114b6565b9250505061018080830151878303828901526114838382611340565b925050506101a080830151925086820381880152506114a281836112fd565b9a87019a95505050908401906001016113af565b6000815180845260208085018081965082840281019150828601855b85811015611386578284038952815180516001600160a01b031685528581015186860152604080820151908601526060808201519086015260808082015160c082880181905291906115268389018261159b565b60a094850151151598909401979097525050988501989350908401906001016114d2565b6000815180845260208085019450808401835b838110156113355781518752958201959082019060010161155d565b6005811061159757634e487b7160e01b600052602160045260246000fd5b9052565b600081518084526115b38160208601602086016117ea565b601f01601f19169290920160200192915050565b600081518352602082015160208401526040820151608060408501526115f0608085018261159b565b905060608301518482036060860152611609828261159b565b95945050505050565b90815260200190565b60008582528460208301528360408301526080606083015261164060808301846112fd565b9695505050505050565b6000602082526109e4602083018461154a565b901515815260200190565b6000602082526109e4602083018461159b565b60006020825282516020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c08301516101208060e08501526116d661014085018361154a565b915060e08501516101006116ec81870183611579565b860151858403601f19018387015290506116408382611393565b918252602082015260400190565b948552602085019390935260408401919091526060830152608082015260a00190565b600083825260406020830152610ebf60408301846115c7565b60405181810167ffffffffffffffff811182821017156117725761177261181a565b604052919050565b600067ffffffffffffffff8211156117945761179461181a565b5060209081020190565b600067ffffffffffffffff8211156117b8576117b861181a565b50601f01601f191660200190565b600082198211156117e557634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156118055781810151838201526020016117ed565b83811115611814576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461184557600080fd5b5056fea264697066735822122061c00621464bc9a6878cf992187d171d9344488c80913cd1f2e0d1629adff62064736f6c63430008000033";

type DisputeLogicConstructorParams =
  | [linkLibraryAddresses: DisputeLogicLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisputeLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DisputeLogic__factory extends ContractFactory {
  constructor(...args: DisputeLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DisputeLogic__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DisputeLogicLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a30805314670aba7a268b004e381771f39\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/DisputeDataLogic.sol:DisputeDataLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$81e31c3dd8ba021b250581ddc9f3365d5d\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/RoundLogic.sol:RoundLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DisputeLogic> {
    return super.deploy(overrides || {}) as Promise<DisputeLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DisputeLogic {
    return super.attach(address) as DisputeLogic;
  }
  override connect(signer: Signer): DisputeLogic__factory {
    return super.connect(signer) as DisputeLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeLogicInterface {
    return new utils.Interface(_abi) as DisputeLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DisputeLogic {
    return new Contract(address, _abi, signerOrProvider) as DisputeLogic;
  }
}

export interface DisputeLogicLibraryAddresses {
  ["contracts/protocol/libraries/logics/DisputeDataLogic.sol:DisputeDataLogic"]: string;
  ["contracts/protocol/libraries/logics/RoundLogic.sol:RoundLogic"]: string;
}
