/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  InvoiceLogic,
  InvoiceLogicInterface,
} from "../../../../protocol/libraries/logics/InvoiceLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "buyerFees",
        type: "tuple",
      },
    ],
    name: "calcBuyerFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "sellerFees",
        type: "tuple",
      },
    ],
    name: "calcSellerFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6105fb610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c80631a9d78131461006657806378645da714610096578063b92aa3c0146100c6578063da6e40d5146100f6578063f4b84e5914610133575b600080fd5b610080600480360381019061007b9190610522565b610163565b60405161008d9190610561565b60405180910390f35b6100b060048036038101906100ab9190610522565b6101cf565b6040516100bd9190610561565b60405180910390f35b6100e060048036038101906100db91906104a1565b61023b565b6040516100ed9190610561565b60405180910390f35b81801561010257600080fd5b5061011d600480360381019061011891906104bc565b610293565b60405161012a919061054e565b60405180910390f35b61014d600480360381019061014891906104a1565b6103bb565b60405161015a9190610561565b60405180910390f35b6000610179678422febb80d4027460c01b610414565b61018d6777c68d2ca3d39f5f60c01b610414565b6101a16755904ac1c08f0fe460c01b610414565b81600001516101bd83602001518561041790919063ffffffff16565b6101c79190610572565b905092915050565b60006101e567b3e1979f1f3565fd60c01b610414565b6101f967304f06e3635dfdfc60c01b610414565b61020d678a141b060aef3f3960c01b610414565b816000015161022983602001518561041790919063ffffffff16565b6102339190610572565b905092915050565b600061025167925a10dcf26c5cb960c01b610414565b610264669d93f1877e682360c01b610414565b6102786729473892427c783d60c01b610414565b8160020154826000015461028c9190610591565b9050919050565b60006102a96797615e0c1e00e5d260c01b610414565b6102bd677a5ca25c5bff79a460c01b610414565b8486600001819055506102da673fd5f27e9004813e60c01b610414565b6102e485846101cf565b86600101819055506103006752a447cc3c3bb7f160c01b610414565b61030a8583610163565b8660020181905550610326679fb92e55c9794ab460c01b610414565b4286600301819055506103436726e2c74ac6d32b7d60c01b610414565b838660040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061039a679674ff7d10775cbb60c01b610414565b6103ae676b8e0f2813f0fd5560c01b610414565b6001905095945050505050565b60006103d16791f504309a0dae5060c01b610414565b6103e56742091d2429cc8fbc60c01b610414565b6103f967c36564844a6ec7a260c01b610414565b8160010154826000015461040d9190610572565b9050919050565b50565b600081611388600019030483111582151761043157600080fd5b6127106113888385020104905092915050565b600060408284031215610455578081fd5b6040516040810181811067ffffffffffffffff8211171561048457634e487b7160e01b83526041600452602483fd5b806040525080915082358152602083013560208201525092915050565b6000602082840312156104b2578081fd5b8135905092915050565b600080600080600060e086880312156104d3578081fd5b8535945060208601359350604086013560018060a01b03811681146104f6578182fd5b809350506105078760608801610444565b91506105168760a08801610444565b90509295509295909350565b60008060608385031215610534578182fd5b823591506105458460208501610444565b90509250929050565b6000602082019050821515825292915050565b600060208201905082825292915050565b60008219821115610586576105856105af565b5b828201905092915050565b6000828210156105a4576105a36105af565b5b828203905092915050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208e77dd072942e489cd49ff1828e0d609033753abbd384d8fb97bd8dbc48e122f64736f6c63430008000033";

type InvoiceLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvoiceLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvoiceLogic__factory extends ContractFactory {
  constructor(...args: InvoiceLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InvoiceLogic> {
    return super.deploy(overrides || {}) as Promise<InvoiceLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InvoiceLogic {
    return super.attach(address) as InvoiceLogic;
  }
  override connect(signer: Signer): InvoiceLogic__factory {
    return super.connect(signer) as InvoiceLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceLogicInterface {
    return new utils.Interface(_abi) as InvoiceLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InvoiceLogic {
    return new Contract(address, _abi, signerOrProvider) as InvoiceLogic;
  }
}
