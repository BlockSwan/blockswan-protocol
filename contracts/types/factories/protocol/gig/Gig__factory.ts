/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Gig, GigInterface } from "../../../protocol/gig/Gig";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeDelivery",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Package[3]",
        name: "packages",
        type: "tuple[3]",
      },
    ],
    name: "createGig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newOrderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeDelivery",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Package",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
    ],
    name: "getGigById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successSell",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedSell",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "orderIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package[3]",
            name: "packages",
            type: "tuple[3]",
          },
        ],
        internalType: "struct OutputTypes.GigOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGigList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successSell",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedSell",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "orderIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package[3]",
            name: "packages",
            type: "tuple[3]",
          },
        ],
        internalType: "struct OutputTypes.GigOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGigsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getInvitersAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b50604051620024ac380380620024ac8339810160408190526200003a916200010b565b806200004633620000b9565b6040805180820190915260018152603560f81b60208201526001600160a01b038216620000915760405162461bcd60e51b81526004016200008891906200013d565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000195565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200011e57600080fd5b81516001600160a01b03811681146200013657600080fd5b9392505050565b600060208083528351808285015260005b818110156200016c578581018301518582016040015282016200014e565b818111156200017f576000604083870101525b50601f01601f1916929092016040019392505050565b61230780620001a56000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063985fadc8116100ad578063cfd8d6c011610071578063cfd8d6c014610293578063d107c212146102a6578063daea85c5146102c6578063e5b5019a146102d9578063f2fde38b146102e257600080fd5b8063985fadc8146102055780639a2dc73814610218578063a1ba444d1461022b578063a5a8a6101461024d578063b817bcf71461028057600080fd5b806341c0e1b5116100f457806341c0e1b5146101b9578063715018a6146101c357806379a558e7146101cb5780638da5cb5b146101de5780639011b9cc146101ef57600080fd5b80630542975c1461013157806311e0c07b1461015b5780631848effa1461017e57806319872f76146101915780631af140e8146101a4575b600080fd5b6004546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61016e6101693660046117ca565b6102f5565b6040519015158152602001610152565b60045461013e906001600160a01b031681565b61013e61019f366004611803565b61037f565b6101ac610404565b604051610152919061196b565b6101c16104b4565b005b6101c16104dc565b61016e6101d93660046119cd565b6104f0565b6003546001600160a01b031661013e565b6101f76105a6565b604051908152602001610152565b61016e6102133660046119ea565b6105b3565b6101c1610226366004611b1d565b610617565b61023e610239366004611c0d565b61095e565b60405161015293929190611c39565b61026061025b3660046119cd565b610c4c565b604080516001600160a01b03938416815292909116602083015201610152565b61016e61028e3660046119cd565b610ce2565b6101c16102a13660046119cd565b610d99565b6102b96102b4366004611803565b610ee7565b6040516101529190611c6f565b6101c16102d43660046119cd565b611014565b6101f760055481565b6101c16102f03660046119cd565b61111c565b60405163fbd2817f60e01b815260048101849052602481018390526000906001600160a01b0383169063fbd2817f9060440160206040518083038186803b15801561033f57600080fd5b505afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190611c82565b949350505050565b60048054604051630cc397bb60e11b81529182018390526000916001600160a01b03909116906319872f769060240160206040518083038186803b1580156103c657600080fd5b505afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190611cb4565b92915050565b606060006104106105a6565b905060008167ffffffffffffffff81111561042d5761042d611a1a565b60405190808252806020026020018201604052801561046657816020015b610453611732565b81526020019060019003908161044b5790505b50905060005b828110156104ad5761047d81610ee7565b82828151811061048f5761048f611cd1565b602002602001018190525080806104a590611cfd565b91505061046c565b5092915050565b6004546001600160a01b031633146104ce576104ce611d18565b6004546001600160a01b0316ff5b6104e4611195565b6104ee60006111ef565b565b600061050464212aaca2a960d91b836105b3565b80156103fe57504261051c632aa9a2a960e11b61037f565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b15801561055f57600080fd5b505afa158015610573573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261059b9190810190611df3565b604001511192915050565b6000806103fe6000611241565b6000806105cd6a20a1a62fa6a0a720a3a2a960a91b61037f565b604051632474521560e21b8152600481018690526001600160a01b03858116602483015291909116906391d148549060440160206040518083038186803b15801561033f57600080fd5b61062033610ce2565b60405180604001604052806002815260200161189b60f11b815250906106625760405162461bcd60e51b81526004016106599190611fba565b60405180910390fd5b5033600061066e6105a6565b9050600073__$1c13fa74a81089071ad74f3376e739188f$__636810420d6000600260405180606001604052808781526020018981526020018a8152506040518463ffffffff1660e01b81526004016106c993929190611fcd565b60206040518083038186803b1580156106e157600080fd5b505af41580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190611c82565b9050600061072d632aa9a2a960e11b61037f565b60405163adcd2d2160e01b81526001600160a01b03868116600483015260248201869052919091169063adcd2d2190604401602060405180830381600087803b15801561077957600080fd5b505af115801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190611c82565b90508180156107bd5750805b6108005760405162461bcd60e51b81526020600482015260146024820152736661696c656420746f206372656174652067696760601b6044820152606401610659565b610817694352454154455f47494760b01b8561124b565b60008061082386610c4c565b9150915060006108316112c2565b9050600061083d61136b565b604080516060810182528251815284516020808301918252860151828401908152925163013a9d5b60e01b8152915160048301525160248201529051604482015290915060009073__$30e2c0763bc74e29ca837c0a99f7d1b333$__9063013a9d5b9060640160606040518083038186803b1580156108bb57600080fd5b505af41580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f3919061204a565b90506109516040518060c001604052808b6001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001836000015181526020018360200151815260200183604001518152506113d7565b5050505050505050505050565b6000606061097f604051806040016040528060008152602001600081525090565b6427a92222a960d91b6109918161037f565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b815250906109de5760405162461bcd60e51b81526004016106599190611fba565b50604051631813c0cb60e21b8152600481018790526002602482015260009073__$1c13fa74a81089071ad74f3376e739188f$__9063604f032c9060440160206040518083038186803b158015610a3457600080fd5b505af4158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c91906120a6565b9050610aae816009018760038110610a8657610a86611cd1565b60020201604051806040016040529081600082015481526020016001820154815250506114ae565b610aec5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964205061636b61676560881b6044820152606401610659565b60405163aa371aeb60e01b8152600481018290526024810189905260009073__$1c13fa74a81089071ad74f3376e739188f$__9063aa371aeb9060440160206040518083038186803b158015610b4157600080fd5b505af4158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190611c82565b90508082600981018960038110610b9257610b92611cd1565b60020201818054610ba2906120bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610bce906120bf565b8015610c1b5780601f10610bf057610100808354040283529160200191610c1b565b820191906000526020600020905b815481529060010190602001808311610bfe57829003601f168201915b50506040805180820190915285548152600190950154602086015250949e919d50919b509950505050505050505050565b600080610c5f632aa9a2a960e11b61037f565b604051636e83778160e11b81526001600160a01b038581166004830152919091169063dd06ef0290602401604080518083038186803b158015610ca157600080fd5b505afa158015610cb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd991906120f4565b91509150915091565b6000610cf76529a2a62622a960d11b836105b3565b80156103fe575042610d0f632aa9a2a960e11b61037f565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b158015610d5257600080fd5b505afa158015610d66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8e9190810190611df3565b608001511192915050565b6001600160a01b0381161580610db957506004546001600160a01b031633145b80610e455750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0257600080fd5b505afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a9190611cb4565b6001600160a01b0316145b610ec55760405162461bcd60e51b815260206004820152604560248201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060448201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060648201526437bbb732b960d91b608482015260a401610659565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610eef611732565b604051631813c0cb60e21b8152600481018390526002602482015260009073__$1c13fa74a81089071ad74f3376e739188f$__9063604f032c9060440160206040518083038186803b158015610f4457600080fd5b505af4158015610f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7c91906120a6565b60405163561a6ee760e01b8152600481018290526024810185905290915073__$1c13fa74a81089071ad74f3376e739188f$__9063561a6ee79060440160006040518083038186803b158015610fd157600080fd5b505af4158015610fe5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261100d91908101906121ad565b9392505050565b6d282927aa27a1a7a62fa0a226a4a760911b61103081336105b3565b61107c5760405162461bcd60e51b815260206004820152601c60248201527f5265717569726573206d73672e73656e6465722068617320726f6c65000000006044820152606401610659565b600061108d6211105560ea1b61037f565b60055460405163095ea7b360e01b81526001600160a01b038084166004830152602482019290925291925084169063095ea7b390604401602060405180830381600087803b1580156110de57600080fd5b505af11580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111169190611c82565b50505050565b611124611195565b6001600160a01b0381166111895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610659565b611192816111ef565b50565b6003546001600160a01b031633146104ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610659565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006103fe825490565b61125961058560f41b61037f565b60405163149e351d60e11b8152600481018490526001600160a01b038381166024830152919091169063293c6a3a906044015b600060405180830381600087803b1580156112a657600080fd5b505af11580156112ba573d6000803e3d6000fd5b505050505050565b60408051808201909152600080825260208201526112f774282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b61037f565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561132e57600080fd5b505afa158015611342573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611366919061229d565b905090565b60408051808201909152600080825260208201526113a074282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b61037f565b6001600160a01b031663333274726040518163ffffffff1660e01b8152600401604080518083038186803b15801561132e57600080fd5b60006113e86211105560ea1b61037f565b905060008260a001518360800151846060015161140591906122b9565b61140f91906122b9565b905061149f83600001513083856001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561145657600080fd5b505af115801561146a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148e9190611cb4565b6001600160a01b03169291906114c6565b6114a98383611568565b505050565b8051600090158015906103fe57505060200151151590565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af161150b573d6000803e3d6000fd5b5061151585611689565b6115615760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d000000000000006044820152606401610659565b5050505050565b60208201516060830151604051636203b43b60e11b81526001600160a01b0384169263c4076876926115b0926004016001600160a01b03929092168252602082015260400190565b600060405180830381600087803b1580156115ca57600080fd5b505af11580156115de573d6000803e3d6000fd5b5050505060408281015160808401519151636203b43b60e11b81526001600160a01b039182166004820152602481019290925282169063c407687690604401600060405180830381600087803b15801561163757600080fd5b505af115801561164b573d6000803e3d6000fd5b5050505060a0820151604051636203b43b60e11b81526000600482015260248101919091526001600160a01b0382169063c40768769060440161128c565b60006116af565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d80156116ee576020811461171f576116e97f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f611690565b61172c565b823b611716576117167311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014611690565b6001915061172c565b3d6000803e600051151591505b50919050565b6040518061010001604052806000815260200160608152602001600081526020016000815260200160008152602001606081526020016060815260200161177761177c565b905290565b60405180606001604052806003905b604080518082019091526000808252602082015281526020019060019003908161178b5790505090565b6001600160a01b038116811461119257600080fd5b6000806000606084860312156117df57600080fd5b833592506020840135915060408401356117f8816117b5565b809150509250925092565b60006020828403121561181557600080fd5b5035919050565b60005b8381101561183757818101518382015260200161181f565b838111156111165750506000910152565b6000815180845261186081602086016020860161181c565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156118a457815187529582019590820190600101611888565b509495945050505050565b60006101a08251845260208084015182828701526118cf83870182611848565b92505060408085015181870152606085015160608701526080850151608087015260a085015186840360a08801526119078482611874565b93505060c085015186840360c08801526119218482611874565b93505060e085015160e0870160005b600381101561195e5761194e82845180518252602090810151910152565b9184019190830190600101611930565b5093979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156119c057603f198886030184526119ae8583516118af565b94509285019290850190600101611992565b5092979650505050505050565b6000602082840312156119df57600080fd5b813561100d816117b5565b600080604083850312156119fd57600080fd5b823591506020830135611a0f816117b5565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611a5357611a53611a1a565b60405290565b6040516101e0810167ffffffffffffffff81118282101715611a5357611a53611a1a565b604051610100810167ffffffffffffffff81118282101715611a5357611a53611a1a565b6040516060810167ffffffffffffffff81118282101715611a5357611a53611a1a565b604051601f8201601f1916810167ffffffffffffffff81118282101715611aed57611aed611a1a565b604052919050565b600067ffffffffffffffff821115611b0f57611b0f611a1a565b50601f01601f191660200190565b60008060e08385031215611b3057600080fd5b823567ffffffffffffffff811115611b4757600080fd5b8301601f81018513611b5857600080fd5b80356020611b6d611b6883611af5565b611ac4565b8281528782848601011115611b8157600080fd5b828285018383013760009350838284830101528095505086603f870112611ba6578283fd5b611bae611aa1565b91508160e0870188811115611bc1578485fd5b8288015b81811015611bfe576040818b031215611bdc578586fd5b611be4611a30565b813581528482013585820152855293830193604001611bc5565b50959890975095505050505050565b600080600060608486031215611c2257600080fd5b505081359360208301359350604090920135919050565b8315158152608060208201526000611c546080830185611848565b83516040840152602084015160608401529050949350505050565b60208152600061100d60208301846118af565b600060208284031215611c9457600080fd5b8151801515811461100d57600080fd5b8051611caf816117b5565b919050565b600060208284031215611cc657600080fd5b815161100d816117b5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611d1157611d11611ce7565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600082601f830112611d3f57600080fd5b8151611d4d611b6882611af5565b818152846020838601011115611d6257600080fd5b61037782602083016020870161181c565b600082601f830112611d8457600080fd5b8151602067ffffffffffffffff821115611da057611da0611a1a565b8160051b611daf828201611ac4565b9283528481018201928281019087851115611dc957600080fd5b83870192505b84831015611de857825182529183019190830190611dcf565b979650505050505050565b600060208284031215611e0557600080fd5b815167ffffffffffffffff80821115611e1d57600080fd5b908301906101e08286031215611e3257600080fd5b611e3a611a59565b825182811115611e4957600080fd5b611e5587828601611d2e565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c0820152611ea060e08401611ca4565b60e08201526101008084015183811115611eb957600080fd5b611ec588828701611d73565b8284015250506101208084015183811115611edf57600080fd5b611eeb88828701611d73565b8284015250506101408084015183811115611f0557600080fd5b611f1188828701611d73565b8284015250506101608084015183811115611f2b57600080fd5b611f3788828701611d73565b8284015250506101808084015183811115611f5157600080fd5b611f5d88828701611d73565b8284015250506101a08084015183811115611f7757600080fd5b611f8388828701611d73565b8284015250506101c08084015183811115611f9d57600080fd5b611fa988828701611d73565b918301919091525095945050505050565b60208152600061100d6020830184611848565b838152600060208481840152604060608185015284516060850152818501516080850160005b60038110156120215761201182845180518252602090810151910152565b9184019190830190600101611ff3565b5050508401516101006101408501529050612040610160840182611848565b9695505050505050565b60006060828403121561205c57600080fd5b6040516060810181811067ffffffffffffffff8211171561207f5761207f611a1a565b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000602082840312156120b857600080fd5b5051919050565b600181811c908216806120d357607f821691505b6020821081141561172c57634e487b7160e01b600052602260045260246000fd5b6000806040838503121561210757600080fd5b8251612112816117b5565b6020840151909250611a0f816117b5565b60006040828403121561213557600080fd5b61213d611a30565b9050815181526020820151602082015292915050565b600082601f83011261216457600080fd5b61216c611aa1565b8060c084018581111561217e57600080fd5b845b818110156121a2576121928782612123565b8452602090930192604001612180565b509095945050505050565b6000602082840312156121bf57600080fd5b815167ffffffffffffffff808211156121d757600080fd5b908301906101a082860312156121ec57600080fd5b6121f4611a7d565b8251815260208301518281111561220a57600080fd5b61221687828601611d2e565b60208301525060408301516040820152606083015160608201526080830151608082015260a08301518281111561224c57600080fd5b61225887828601611d73565b60a08301525060c08301518281111561227057600080fd5b61227c87828601611d73565b60c08301525061228f8660e08501612153565b60e082015295945050505050565b6000604082840312156122af57600080fd5b61100d8383612123565b600082198211156122cc576122cc611ce7565b50019056fea264697066735822122005fbbca0aaef832da5b41d48470bf4e0a26b3d0839a5f815cc0c26bfc9c6cff864736f6c63430008090033";

type GigConstructorParams =
  | [linkLibraryAddresses: GigLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Gig__factory extends ContractFactory {
  constructor(...args: GigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Gig__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: GigLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1c13fa74a81089071ad74f3376e739188f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/GigLogic.sol:GigLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gig> {
    return super.deploy(provider, overrides || {}) as Promise<Gig>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Gig {
    return super.attach(address) as Gig;
  }
  override connect(signer: Signer): Gig__factory {
    return super.connect(signer) as Gig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GigInterface {
    return new utils.Interface(_abi) as GigInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gig {
    return new Contract(address, _abi, signerOrProvider) as Gig;
  }
}

export interface GigLibraryAddresses {
  ["contracts/protocol/libraries/logics/GigLogic.sol:GigLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
