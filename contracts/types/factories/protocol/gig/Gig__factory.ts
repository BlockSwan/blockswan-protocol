/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Gig, GigInterface } from "../../../protocol/gig/Gig";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeDelivery",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Package[3]",
        name: "packages",
        type: "tuple[3]",
      },
    ],
    name: "createGig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newOrderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeDelivery",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Package",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
    ],
    name: "getGigById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successSell",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedSell",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "orderIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package[3]",
            name: "packages",
            type: "tuple[3]",
          },
        ],
        internalType: "struct OutputTypes.GigOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGigList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successSell",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedSell",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "orderIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package[3]",
            name: "packages",
            type: "tuple[3]",
          },
        ],
        internalType: "struct OutputTypes.GigOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGigsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getInvitersAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b506040516200250f3803806200250f8339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b61236180620001ae6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063985fadc8116100ad578063cfd8d6c011610071578063cfd8d6c01461025d578063d107c21214610270578063daea85c514610290578063e5b5019a146102a3578063f2fde38b146102ab5761012c565b8063985fadc8146101e15780639a2dc738146101f4578063a1ba444d14610207578063a5a8a61014610229578063b817bcf71461024a5761012c565b806341c0e1b5116100f457806341c0e1b51461019f578063715018a6146101a957806379a558e7146101b15780638da5cb5b146101c45780639011b9cc146101cc5761012c565b80630542975c1461013157806311e0c07b1461014f5780631848effa1461016f57806319872f76146101775780631af140e81461018a575b600080fd5b6101396102be565b6040516101469190611e75565b60405180910390f35b61016261015d366004611cec565b6102cd565b6040516101469190611f1c565b610139610356565b61013961018536600461186d565b610365565b6101926103ef565b6040516101469190611ebc565b6101a76104bb565b005b6101a76104f1565b6101626101bf3660046117dc565b610505565b6101396105bb565b6101d46105ca565b6040516101469190611f51565b6101626101ef366004611885565b6105dd565b6101a76102023660046118a9565b610624565b61021a610215366004611d24565b610941565b60405161014693929190611f27565b61023c6102373660046117dc565b610c1a565b604051610146929190611e89565b6101626102583660046117dc565b610cb0565b6101a761026b3660046117dc565b610d67565b61028361027e36600461186d565b610e51565b6040516101469190612150565b6101a761029e3660046117dc565b610f7d565b6101d4611053565b6101a76102b93660046117dc565b611059565b6004546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906102fe9087908790600401612163565b60206040518083038186803b15801561031657600080fd5b505afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e919061184d565b949350505050565b6004546001600160a01b031681565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f769161039791869101611f51565b60206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e791906117f8565b90505b919050565b606060006103fb6105ca565b905060008167ffffffffffffffff81111561042657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561045f57816020015b61044c6115ac565b8152602001906001900390816104445790505b50905060005b828110156104b45761047681610e51565b82828151811061049657634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806104ac906122cf565b915050610465565b5091505090565b6004546001600160a01b031633146104e357634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b6104f9611093565b61050360006110d2565b565b600061051964212aaca2a960d91b836105dd565b80156103e7575042610531632aa9a2a960e11b610365565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b815260040161055c9190611e75565b60006040518083038186803b15801561057457600080fd5b505afa158015610588573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105b09190810190611b2b565b604001511192915050565b6003546001600160a01b031690565b6000806105d76000611124565b91505090565b6000806105f76a20a1a62fa6a0a720a3a2a960a91b610365565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b81526004016102fe929190611f5a565b61062f61025861112f565b60405180604001604052806002815260200161189b60f11b815250906106715760405162461bcd60e51b81526004016106689190611f71565b60405180910390fd5b50600061067c61112f565b905060006106886105ca565b9050600073__$1c13fa74a81089071ad74f3376e739188f$__636810420d6000600260405180606001604052808781526020018981526020018a8152506040518463ffffffff1660e01b81526004016106e393929190612171565b60206040518083038186803b1580156106fb57600080fd5b505af415801561070f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610733919061184d565b90506000610747632aa9a2a960e11b610365565b6001600160a01b031663adcd2d2185856040518363ffffffff1660e01b8152600401610774929190611ea3565b602060405180830381600087803b15801561078e57600080fd5b505af11580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c6919061184d565b90508180156107d25750805b6107ee5760405162461bcd60e51b815260040161066890612035565b610805694352454154455f47494760b01b85611133565b60008061081186610c1a565b91509150600061081f6111a4565b9050600061082b611241565b6040805160608101825282518152845160208083019190915285015181830152905163013a9d5b60e01b815291925060009173__$30e2c0763bc74e29ca837c0a99f7d1b333$__9163013a9d5b91610886919060040161212f565b60606040518083038186803b15801561089e57600080fd5b505af41580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d691906119b0565b90506109346040518060c001604052808b6001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001836000015181526020018360200151815260200183604001518152506112a1565b5050505050505050505050565b6000606061094d6115f6565b6427a92222a960d91b61095f81610365565b6001600160a01b031661097061112f565b6001600160a01b03161460405180604001604052806002815260200161199b60f11b815250906109b35760405162461bcd60e51b81526004016106689190611f71565b50604051631813c0cb60e21b815260009073__$1c13fa74a81089071ad74f3376e739188f$__9063604f032c906109f1908a90600290600401612163565b60206040518083038186803b158015610a0957600080fd5b505af4158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190611b13565b9050610a91816009018760038110610a6957634e487b7160e01b600052603260045260246000fd5b6002020160405180604001604052908160008201548152602001600182015481525050611378565b610aad5760405162461bcd60e51b815260040161066890612063565b60405163aa371aeb60e01b815260009073__$1c13fa74a81089071ad74f3376e739188f$__9063aa371aeb90610ae99085908d90600401612163565b60206040518083038186803b158015610b0157600080fd5b505af4158015610b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b39919061184d565b90508082600981018960038110610b6057634e487b7160e01b600052603260045260246000fd5b60020201818054610b709061229a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9c9061229a565b8015610be95780601f10610bbe57610100808354040283529160200191610be9565b820191906000526020600020905b815481529060010190602001808311610bcc57829003601f168201915b50506040805180820190915285548152600190950154602086015250949e919d50919b509950505050505050505050565b600080610c2d632aa9a2a960e11b610365565b6001600160a01b031663dd06ef02846040518263ffffffff1660e01b8152600401610c589190611e75565b604080518083038186803b158015610c6f57600080fd5b505afa158015610c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca79190611814565b91509150915091565b6000610cc56529a2a62622a960d11b836105dd565b80156103e7575042610cdd632aa9a2a960e11b610365565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610d089190611e75565b60006040518083038186803b158015610d2057600080fd5b505afa158015610d34573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d5c9190810190611b2b565b608001511192915050565b6001600160a01b0381161580610d8757506004546001600160a01b031633145b80610e135750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dd057600080fd5b505afa158015610de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0891906117f8565b6001600160a01b0316145b610e2f5760405162461bcd60e51b815260040161066890611fca565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610e596115ac565b604051631813c0cb60e21b815260009073__$1c13fa74a81089071ad74f3376e739188f$__9063604f032c90610e96908690600290600401612163565b60206040518083038186803b158015610eae57600080fd5b505af4158015610ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee69190611b13565b60405163561a6ee760e01b815290915073__$1c13fa74a81089071ad74f3376e739188f$__9063561a6ee790610f229084908790600401612163565b60006040518083038186803b158015610f3a57600080fd5b505af4158015610f4e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f769190810190611a26565b9392505050565b6d282927aa27a1a7a62fa0a226a4a760911b610f9b816101ef61112f565b610fb75760405162461bcd60e51b8152600401610668906120f8565b6000610fc86211105560ea1b610365565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b391610ffb91859190600401611ea3565b602060405180830381600087803b15801561101557600080fd5b505af1158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d919061184d565b50505050565b60055481565b611061611093565b6001600160a01b0381166110875760405162461bcd60e51b815260040161066890611f84565b611090816110d2565b50565b61109b61112f565b6001600160a01b03166110ac6105bb565b6001600160a01b0316146105035760405162461bcd60e51b8152600401610668906120c3565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006103e782611390565b3390565b61114161058560f41b610365565b6001600160a01b031663293c6a3a83836040518363ffffffff1660e01b815260040161116e929190611f5a565b600060405180830381600087803b15801561118857600080fd5b505af115801561119c573d6000803e3d6000fd5b505050505050565b6111ac6115f6565b6111cd74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610365565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561120457600080fd5b505afa158015611218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123c9190611a0b565b905090565b6112496115f6565b61126a74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610365565b6001600160a01b031663333274726040518163ffffffff1660e01b8152600401604080518083038186803b15801561120457600080fd5b60006112b26211105560ea1b610365565b905060008260a00151836080015184606001516112cf9190612256565b6112d99190612256565b905061136983600001513083856001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561132057600080fd5b505af1158015611334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135891906117f8565b6001600160a01b0316929190611394565b6113738383611406565b505050565b8051600090158015906103e757505060200151151590565b5490565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af16113d9573d6000803e3d6000fd5b506113e385611505565b6113ff5760405162461bcd60e51b81526004016106689061208c565b5050505050565b60208201516060830151604051636203b43b60e11b81526001600160a01b0384169263c40768769261143a92600401611ea3565b600060405180830381600087803b15801561145457600080fd5b505af1158015611468573d6000803e3d6000fd5b50505060408084015160808501519151636203b43b60e11b81526001600160a01b038516935063c4076876926114a19291600401611ea3565b600060405180830381600087803b1580156114bb57600080fd5b505af11580156114cf573d6000803e3d6000fd5b5050505060a0820151604051636203b43b60e11b81526001600160a01b0383169163c40768769161116e91600091600401611ea3565b6000611529565b62461bcd60e51b6000526020600452806024528160445260646000fd5b3d80156115685760208114611599576115637f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f61150c565b6115a6565b823b611590576115907311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b601461150c565b600191506115a6565b3d6000803e600051151591505b50919050565b604051806101000160405280600081526020016060815260200160008152602001600081526020016000815260200160608152602001606081526020016115f1611610565b905290565b604051806040016040528060008152602001600081525090565b60405180606001604052806003905b6116276115f6565b81526020019060019003908161161f5790505090565b80516103ea81612316565b600082601f830112611658578081fd5b604080516060810181811067ffffffffffffffff8211171561167c5761167c612300565b8252808460c0810187101561168f578485fd5b845b60038110156116b8576116a4888361178e565b835260209092019190840190600101611691565b50919695505050505050565b600082601f8301126116d4578081fd5b8151602067ffffffffffffffff8211156116f0576116f0612300565b8082026116fe8282016121e3565b838152828101908684018388018501891015611718578687fd5b8693505b8584101561173a57805183526001939093019291840191840161171c565b50979650505050505050565b600082601f830112611756578081fd5b81516117696117648261222e565b6121e3565b81815284602083860101111561177d578283fd5b61034e82602083016020870161226e565b60006040828403121561179f578081fd5b6040516040810181811067ffffffffffffffff821117156117c2576117c2612300565b604052825181526020928301519281019290925250919050565b6000602082840312156117ed578081fd5b8135610f7681612316565b600060208284031215611809578081fd5b8151610f7681612316565b60008060408385031215611826578081fd5b825161183181612316565b602084015190925061184281612316565b809150509250929050565b60006020828403121561185e578081fd5b81518015158114610f76578182fd5b60006020828403121561187e578081fd5b5035919050565b60008060408385031215611897578182fd5b82359150602083013561184281612316565b60008060e083850312156118bb578182fd5b823567ffffffffffffffff808211156118d2578384fd5b818501915085601f8301126118e5578384fd5b813560206118f56117648361222e565b8281528882848701011115611908578687fd5b8282860183830137808301820196909652603f87018813611927578485fd5b600393506119376117648561220d565b9150818188018960e08a01111561194c578687fd5b865b868110156119a057604080838d031215611966578889fd5b8051818101818110898211171561197f5761197f612300565b8252833581528584013586820152865294840194919091019060010161194e565b5096999098509650505050505050565b6000606082840312156119c1578081fd5b6040516060810181811067ffffffffffffffff821117156119e4576119e4612300565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600060408284031215611a1c578081fd5b610f76838361178e565b600060208284031215611a37578081fd5b815167ffffffffffffffff80821115611a4e578283fd5b908301906101a08286031215611a62578283fd5b611a6d6101006121e3565b82518152602083015182811115611a82578485fd5b611a8e87828601611746565b60208301525060408301516040820152606083015160608201526080830151608082015260a083015182811115611ac3578485fd5b611acf878286016116c4565b60a08301525060c083015182811115611ae6578485fd5b611af2878286016116c4565b60c083015250611b058660e08501611648565b60e082015295945050505050565b600060208284031215611b24578081fd5b5051919050565b600060208284031215611b3c578081fd5b815167ffffffffffffffff80821115611b53578283fd5b81840191506101e0808387031215611b69578384fd5b611b72816121e3565b9050825182811115611b82578485fd5b611b8e87828601611746565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c0820152611bd960e0840161163d565b60e08201526101008084015183811115611bf1578586fd5b611bfd888287016116c4565b8284015250506101208084015183811115611c16578586fd5b611c22888287016116c4565b8284015250506101408084015183811115611c3b578586fd5b611c47888287016116c4565b8284015250506101608084015183811115611c60578586fd5b611c6c888287016116c4565b8284015250506101808084015183811115611c85578586fd5b611c91888287016116c4565b8284015250506101a08084015183811115611caa578586fd5b611cb6888287016116c4565b8284015250506101c08084015183811115611ccf578586fd5b611cdb888287016116c4565b918301919091525095945050505050565b600080600060608486031215611d00578081fd5b83359250602084013591506040840135611d1981612316565b809150509250925092565b600080600060608486031215611d38578081fd5b505081359360208301359350604090920135919050565b6000815180845260208085019450808401835b83811015611d7e57815187529582019590820190600101611d62565b509495945050505050565b60008151808452611da181602086016020860161226e565b601f01601f19169290920160200192915050565b60006101a0825184526020808401518282870152611dd583870182611d89565b92505060408085015181870152606085015160608701526080850151608087015260a085015186840360a0880152611e0d8482611d4f565b93505060c085015186840360c0880152611e278482611d4f565b93505060e085015160e08701855b6003811015611e5957611e49828451611e66565b9184019190830190600101611e35565b5093979650505050505050565b80518252602090810151910152565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611f0f57603f19888603018452611efd858351611db5565b94509285019290850190600101611ee1565b5092979650505050505050565b901515815260200190565b6000841515825260806020830152611f426080830185611d89565b905061034e6040830184611e66565b90815260200190565b9182526001600160a01b0316602082015260400190565b600060208252610f766020830184611d89565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b6020808252601490820152736661696c656420746f206372656174652067696760601b604082015260600190565b6020808252600f908201526e496e76616c6964205061636b61676560881b604082015260600190565b60208082526019908201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b81518152602080830151908201526040918201519181019190915260600190565b600060208252610f766020830184611db5565b918252602082015260400190565b6000848252602084818401526040606081850152845160608501528185015160808501845b60038110156121ba576121aa828451611e66565b9184019190830190600101612196565b50505084015161010061014085015290506121d9610160840182611d89565b9695505050505050565b60405181810167ffffffffffffffff8111828210171561220557612205612300565b604052919050565b600067ffffffffffffffff82111561222757612227612300565b5060200290565b600067ffffffffffffffff82111561224857612248612300565b50601f01601f191660200190565b60008219821115612269576122696122ea565b500190565b60005b83811015612289578181015183820152602001612271565b8381111561104d5750506000910152565b6002810460018216806122ae57607f821691505b602082108114156115a657634e487b7160e01b600052602260045260246000fd5b60006000198214156122e3576122e36122ea565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461109057600080fdfea2646970667358221220da4927291193d1c31b12523f924e3203691df80df24744026be752fcb129bf0464736f6c63430008000033";

type GigConstructorParams =
  | [linkLibraryAddresses: GigLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Gig__factory extends ContractFactory {
  constructor(...args: GigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Gig__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: GigLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1c13fa74a81089071ad74f3376e739188f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/GigLogic.sol:GigLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gig> {
    return super.deploy(provider, overrides || {}) as Promise<Gig>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Gig {
    return super.attach(address) as Gig;
  }
  override connect(signer: Signer): Gig__factory {
    return super.connect(signer) as Gig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GigInterface {
    return new utils.Interface(_abi) as GigInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gig {
    return new Contract(address, _abi, signerOrProvider) as Gig;
  }
}

export interface GigLibraryAddresses {
  ["contracts/protocol/libraries/logics/GigLogic.sol:GigLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
