/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Gig, GigInterface } from "../../../protocol/gig/Gig";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeDelivery",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Package[3]",
        name: "packages",
        type: "tuple[3]",
      },
    ],
    name: "createGig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newOrderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "packageId",
        type: "uint256",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeDelivery",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Package",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
    ],
    name: "getGigById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successSell",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedSell",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "orderIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package[3]",
            name: "packages",
            type: "tuple[3]",
          },
        ],
        internalType: "struct OutputTypes.GigOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGigList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successSell",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedSell",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "orderIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package[3]",
            name: "packages",
            type: "tuple[3]",
          },
        ],
        internalType: "struct OutputTypes.GigOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGigsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getInvitersAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b506040516200254f3803806200254f8339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b6123a180620001ae6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063985fadc8116100ad578063cfd8d6c011610071578063cfd8d6c01461025d578063d107c21214610270578063daea85c514610290578063e5b5019a146102a3578063f2fde38b146102ab5761012c565b8063985fadc8146101e15780639a2dc738146101f4578063a1ba444d14610207578063a5a8a61014610229578063b817bcf71461024a5761012c565b806341c0e1b5116100f457806341c0e1b51461019f578063715018a6146101a957806379a558e7146101b15780638da5cb5b146101c45780639011b9cc146101cc5761012c565b80630542975c1461013157806311e0c07b1461014f5780631848effa1461016f57806319872f76146101775780631af140e81461018a575b600080fd5b6101396102be565b6040516101469190611e57565b60405180910390f35b61016261015d366004611cce565b6102cd565b6040516101469190611efe565b610139610356565b61013961018536600461184f565b610365565b6101926103ef565b6040516101469190611e9e565b6101a76104bb565b005b6101a76104f1565b6101626101bf3660046117be565b610505565b6101396105bb565b6101d46105ca565b6040516101469190611f33565b6101626101ef366004611867565b6105dd565b6101a761020236600461188b565b610624565b61021a610215366004611d06565b610941565b60405161014693929190611f09565b61023c6102373660046117be565b610bfc565b604051610146929190611e6b565b6101626102583660046117be565b610c92565b6101a761026b3660046117be565b610d49565b61028361027e36600461184f565b610e33565b6040516101469190612190565b6101a761029e3660046117be565b610f5f565b6101d4611035565b6101a76102b93660046117be565b61103b565b6004546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906102fe90879087906004016121a3565b60206040518083038186803b15801561031657600080fd5b505afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e919061182f565b949350505050565b6004546001600160a01b031681565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f769161039791869101611f33565b60206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e791906117da565b90505b919050565b606060006103fb6105ca565b905060008167ffffffffffffffff81111561042657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561045f57816020015b61044c61158e565b8152602001906001900390816104445790505b50905060005b828110156104b45761047681610e33565b82828151811061049657634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806104ac9061230f565b915050610465565b5091505090565b6004546001600160a01b031633146104e357634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b6104f9611075565b61050360006110b4565b565b600061051964212aaca2a960d91b836105dd565b80156103e7575042610531632aa9a2a960e11b610365565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b815260040161055c9190611e57565b60006040518083038186803b15801561057457600080fd5b505afa158015610588573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105b09190810190611b0d565b604001511192915050565b6003546001600160a01b031690565b6000806105d76000611106565b91505090565b6000806105f76a20a1a62fa6a0a720a3a2a960a91b610365565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b81526004016102fe929190611f3c565b61062f610258611111565b60405180604001604052806002815260200161189b60f11b815250906106715760405162461bcd60e51b81526004016106689190611f53565b60405180910390fd5b50600061067c611111565b905060006106886105ca565b9050600073__$1c13fa74a81089071ad74f3376e739188f$__636810420d6000600260405180606001604052808781526020018981526020018a8152506040518463ffffffff1660e01b81526004016106e3939291906121b1565b60206040518083038186803b1580156106fb57600080fd5b505af415801561070f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610733919061182f565b90506000610747632aa9a2a960e11b610365565b6001600160a01b031663adcd2d2185856040518363ffffffff1660e01b8152600401610774929190611e85565b602060405180830381600087803b15801561078e57600080fd5b505af11580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c6919061182f565b90508180156107d25750805b6107ee5760405162461bcd60e51b815260040161066890612017565b610805694352454154455f47494760b01b85611115565b60008061081186610bfc565b91509150600061081f611186565b9050600061082b611223565b6040805160608101825282518152845160208083019190915285015181830152905163013a9d5b60e01b815291925060009173__$30e2c0763bc74e29ca837c0a99f7d1b333$__9163013a9d5b91610886919060040161216f565b60606040518083038186803b15801561089e57600080fd5b505af41580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d69190611992565b90506109346040518060c001604052808b6001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b0316815260200183600001518152602001836020015181526020018360400151815250611283565b5050505050505050505050565b6000606061094d6115d8565b6427a92222a960d91b61095f81610365565b6001600160a01b0316610970611111565b6001600160a01b0316146109965760405162461bcd60e51b815260040161066890612111565b604051631813c0cb60e21b815260009073__$1c13fa74a81089071ad74f3376e739188f$__9063604f032c906109d3908a906002906004016121a3565b60206040518083038186803b1580156109eb57600080fd5b505af41580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a239190611af5565b9050610a73816009018760038110610a4b57634e487b7160e01b600052603260045260246000fd5b600202016040518060400160405290816000820154815260200160018201548152505061135a565b610a8f5760405162461bcd60e51b815260040161066890612045565b60405163aa371aeb60e01b815260009073__$1c13fa74a81089071ad74f3376e739188f$__9063aa371aeb90610acb9085908d906004016121a3565b60206040518083038186803b158015610ae357600080fd5b505af4158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b919061182f565b90508082600981018960038110610b4257634e487b7160e01b600052603260045260246000fd5b60020201818054610b52906122da565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7e906122da565b8015610bcb5780601f10610ba057610100808354040283529160200191610bcb565b820191906000526020600020905b815481529060010190602001808311610bae57829003601f168201915b50506040805180820190915285548152600190950154602086015250949e919d50919b509950505050505050505050565b600080610c0f632aa9a2a960e11b610365565b6001600160a01b031663dd06ef02846040518263ffffffff1660e01b8152600401610c3a9190611e57565b604080518083038186803b158015610c5157600080fd5b505afa158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8991906117f6565b91509150915091565b6000610ca76529a2a62622a960d11b836105dd565b80156103e7575042610cbf632aa9a2a960e11b610365565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610cea9190611e57565b60006040518083038186803b158015610d0257600080fd5b505afa158015610d16573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d3e9190810190611b0d565b608001511192915050565b6001600160a01b0381161580610d6957506004546001600160a01b031633145b80610df55750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610db257600080fd5b505afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906117da565b6001600160a01b0316145b610e115760405162461bcd60e51b815260040161066890611fac565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610e3b61158e565b604051631813c0cb60e21b815260009073__$1c13fa74a81089071ad74f3376e739188f$__9063604f032c90610e789086906002906004016121a3565b60206040518083038186803b158015610e9057600080fd5b505af4158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec89190611af5565b60405163561a6ee760e01b815290915073__$1c13fa74a81089071ad74f3376e739188f$__9063561a6ee790610f0490849087906004016121a3565b60006040518083038186803b158015610f1c57600080fd5b505af4158015610f30573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f589190810190611a08565b9392505050565b6d282927aa27a1a7a62fa0a226a4a760911b610f7d816101ef611111565b610f995760405162461bcd60e51b8152600401610668906120da565b6000610faa6211105560ea1b610365565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b391610fdd91859190600401611e85565b602060405180830381600087803b158015610ff757600080fd5b505af115801561100b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102f919061182f565b50505050565b60055481565b611043611075565b6001600160a01b0381166110695760405162461bcd60e51b815260040161066890611f66565b611072816110b4565b50565b61107d611111565b6001600160a01b031661108e6105bb565b6001600160a01b0316146105035760405162461bcd60e51b8152600401610668906120a5565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006103e782611372565b3390565b61112361058560f41b610365565b6001600160a01b031663293c6a3a83836040518363ffffffff1660e01b8152600401611150929190611f3c565b600060405180830381600087803b15801561116a57600080fd5b505af115801561117e573d6000803e3d6000fd5b505050505050565b61118e6115d8565b6111af74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610365565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b1580156111e657600080fd5b505afa1580156111fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121e91906119ed565b905090565b61122b6115d8565b61124c74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610365565b6001600160a01b031663333274726040518163ffffffff1660e01b8152600401604080518083038186803b1580156111e657600080fd5b60006112946211105560ea1b610365565b905060008260a00151836080015184606001516112b19190612296565b6112bb9190612296565b905061134b83600001513083856001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561130257600080fd5b505af1158015611316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133a91906117da565b6001600160a01b0316929190611376565b61135583836113e8565b505050565b8051600090158015906103e757505060200151151590565b5490565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af16113bb573d6000803e3d6000fd5b506113c5856114e7565b6113e15760405162461bcd60e51b81526004016106689061206e565b5050505050565b60208201516060830151604051636203b43b60e11b81526001600160a01b0384169263c40768769261141c92600401611e85565b600060405180830381600087803b15801561143657600080fd5b505af115801561144a573d6000803e3d6000fd5b50505060408084015160808501519151636203b43b60e11b81526001600160a01b038516935063c4076876926114839291600401611e85565b600060405180830381600087803b15801561149d57600080fd5b505af11580156114b1573d6000803e3d6000fd5b5050505060a0820151604051636203b43b60e11b81526001600160a01b0383169163c40768769161115091600091600401611e85565b600061150b565b62461bcd60e51b6000526020600452806024528160445260646000fd5b3d801561154a576020811461157b576115457f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f6114ee565b611588565b823b611572576115727311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b60146114ee565b60019150611588565b3d6000803e600051151591505b50919050565b604051806101000160405280600081526020016060815260200160008152602001600081526020016000815260200160608152602001606081526020016115d36115f2565b905290565b604051806040016040528060008152602001600081525090565b60405180606001604052806003905b6116096115d8565b8152602001906001900390816116015790505090565b80516103ea81612356565b600082601f83011261163a578081fd5b604080516060810181811067ffffffffffffffff8211171561165e5761165e612340565b8252808460c08101871015611671578485fd5b845b600381101561169a576116868883611770565b835260209092019190840190600101611673565b50919695505050505050565b600082601f8301126116b6578081fd5b8151602067ffffffffffffffff8211156116d2576116d2612340565b8082026116e0828201612223565b8381528281019086840183880185018910156116fa578687fd5b8693505b8584101561171c5780518352600193909301929184019184016116fe565b50979650505050505050565b600082601f830112611738578081fd5b815161174b6117468261226e565b612223565b81815284602083860101111561175f578283fd5b61034e8260208301602087016122ae565b600060408284031215611781578081fd5b6040516040810181811067ffffffffffffffff821117156117a4576117a4612340565b604052825181526020928301519281019290925250919050565b6000602082840312156117cf578081fd5b8135610f5881612356565b6000602082840312156117eb578081fd5b8151610f5881612356565b60008060408385031215611808578081fd5b825161181381612356565b602084015190925061182481612356565b809150509250929050565b600060208284031215611840578081fd5b81518015158114610f58578182fd5b600060208284031215611860578081fd5b5035919050565b60008060408385031215611879578182fd5b82359150602083013561182481612356565b60008060e0838503121561189d578182fd5b823567ffffffffffffffff808211156118b4578384fd5b818501915085601f8301126118c7578384fd5b813560206118d76117468361226e565b82815288828487010111156118ea578687fd5b8282860183830137808301820196909652603f87018813611909578485fd5b600393506119196117468561224d565b9150818188018960e08a01111561192e578687fd5b865b8681101561198257604080838d031215611948578889fd5b8051818101818110898211171561196157611961612340565b82528335815285840135868201528652948401949190910190600101611930565b5096999098509650505050505050565b6000606082840312156119a3578081fd5b6040516060810181811067ffffffffffffffff821117156119c6576119c6612340565b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000604082840312156119fe578081fd5b610f588383611770565b600060208284031215611a19578081fd5b815167ffffffffffffffff80821115611a30578283fd5b908301906101a08286031215611a44578283fd5b611a4f610100612223565b82518152602083015182811115611a64578485fd5b611a7087828601611728565b60208301525060408301516040820152606083015160608201526080830151608082015260a083015182811115611aa5578485fd5b611ab1878286016116a6565b60a08301525060c083015182811115611ac8578485fd5b611ad4878286016116a6565b60c083015250611ae78660e0850161162a565b60e082015295945050505050565b600060208284031215611b06578081fd5b5051919050565b600060208284031215611b1e578081fd5b815167ffffffffffffffff80821115611b35578283fd5b81840191506101e0808387031215611b4b578384fd5b611b5481612223565b9050825182811115611b64578485fd5b611b7087828601611728565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c0820152611bbb60e0840161161f565b60e08201526101008084015183811115611bd3578586fd5b611bdf888287016116a6565b8284015250506101208084015183811115611bf8578586fd5b611c04888287016116a6565b8284015250506101408084015183811115611c1d578586fd5b611c29888287016116a6565b8284015250506101608084015183811115611c42578586fd5b611c4e888287016116a6565b8284015250506101808084015183811115611c67578586fd5b611c73888287016116a6565b8284015250506101a08084015183811115611c8c578586fd5b611c98888287016116a6565b8284015250506101c08084015183811115611cb1578586fd5b611cbd888287016116a6565b918301919091525095945050505050565b600080600060608486031215611ce2578081fd5b83359250602084013591506040840135611cfb81612356565b809150509250925092565b600080600060608486031215611d1a578081fd5b505081359360208301359350604090920135919050565b6000815180845260208085019450808401835b83811015611d6057815187529582019590820190600101611d44565b509495945050505050565b60008151808452611d838160208601602086016122ae565b601f01601f19169290920160200192915050565b60006101a0825184526020808401518282870152611db783870182611d6b565b92505060408085015181870152606085015160608701526080850151608087015260a085015186840360a0880152611def8482611d31565b93505060c085015186840360c0880152611e098482611d31565b93505060e085015160e08701855b6003811015611e3b57611e2b828451611e48565b9184019190830190600101611e17565b5093979650505050505050565b80518252602090810151910152565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611ef157603f19888603018452611edf858351611d97565b94509285019290850190600101611ec3565b5092979650505050505050565b901515815260200190565b6000841515825260806020830152611f246080830185611d6b565b905061034e6040830184611e48565b90815260200190565b9182526001600160a01b0316602082015260400190565b600060208252610f586020830184611d6b565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b6020808252601490820152736661696c656420746f206372656174652067696760601b604082015260600190565b6020808252600f908201526e496e76616c6964205061636b61676560881b604082015260600190565b60208082526019908201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b602080825260409082018190527f5265717569726573206d73672e73656e6465722069732066726f6d20636f6e74908201527f726163742061646472657373207265676973746572656420746f205f6e616d65606082015260800190565b81518152602080830151908201526040918201519181019190915260600190565b600060208252610f586020830184611d97565b918252602082015260400190565b6000848252602084818401526040606081850152845160608501528185015160808501845b60038110156121fa576121ea828451611e48565b91840191908301906001016121d6565b5050508401516101006101408501529050612219610160840182611d6b565b9695505050505050565b60405181810167ffffffffffffffff8111828210171561224557612245612340565b604052919050565b600067ffffffffffffffff82111561226757612267612340565b5060200290565b600067ffffffffffffffff82111561228857612288612340565b50601f01601f191660200190565b600082198211156122a9576122a961232a565b500190565b60005b838110156122c95781810151838201526020016122b1565b8381111561102f5750506000910152565b6002810460018216806122ee57607f821691505b6020821081141561158857634e487b7160e01b600052602260045260246000fd5b60006000198214156123235761232361232a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461107257600080fdfea2646970667358221220e1b2e2dd5fff0387f99bf6b1f71fc7535f3092d119839b5a490a6dbce5e23d3164736f6c63430008000033";

type GigConstructorParams =
  | [linkLibraryAddresses: GigLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Gig__factory extends ContractFactory {
  constructor(...args: GigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Gig__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: GigLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1c13fa74a81089071ad74f3376e739188f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/GigLogic.sol:GigLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gig> {
    return super.deploy(provider, overrides || {}) as Promise<Gig>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Gig {
    return super.attach(address) as Gig;
  }
  override connect(signer: Signer): Gig__factory {
    return super.connect(signer) as Gig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GigInterface {
    return new utils.Interface(_abi) as GigInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gig {
    return new Contract(address, _abi, signerOrProvider) as Gig;
  }
}

export interface GigLibraryAddresses {
  ["contracts/protocol/libraries/logics/GigLogic.sol:GigLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
