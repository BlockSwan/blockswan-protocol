/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProviderContract,
  ProviderContractInterface,
} from "../../../protocol/configuration/ProviderContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6002553480156200003557600080fd5b5060405162001b0538038062001b0583398181016040528101906200005b9190620002e6565b6200007b6200006f6200021760201b60201c565b6200021f60201b60201c565b62000097678f85e8dcea5085a160c01b620002e360201b60201c565b620000b36784e9e6cd2fa1fc4060c01b620002e360201b60201c565b620000cf67f0cf44c7258bdc6760c01b620002e360201b60201c565b620000eb672ddbfe7d2d0bd8f060c01b620002e360201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600181526020017f35000000000000000000000000000000000000000000000000000000000000008152509062000196576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018d919062000318565b60405180910390fd5b50620001b367a8aa2dfd1d29d4e460c01b620002e360201b60201c565b620001cf67cc90c484db299ddb60c01b620002e360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000373565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600060208284031215620002f8578081fd5b815160018060a01b03811681146200030e578182fd5b8091505092915050565b6000602080835283518082850152825b81811015620003495782818701015160408287010152828101905062000328565b818111156200035b5783604083870101525b506040601f19601f8301168501019250505092915050565b61178280620003836000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063cfd8d6c011610066578063cfd8d6c01461024d578063daea85c514610269578063e5b5019a14610285578063f2fde38b146102a3576100ea565b80638da5cb5b146101cf578063985fadc8146101ed578063b817bcf71461021d576100ea565b806319872f76116100c857806319872f761461015b57806341c0e1b51461018b578063715018a61461019557806379a558e71461019f576100ea565b80630542975c146100ef57806311e0c07b1461010d5780631848effa1461013d575b600080fd5b6100f76102bf565b6040516101049190611543565b60405180910390f35b6101276004803603810190610122919061148e565b610325565b60405161013491906114ff565b60405180910390f35b6101456103f7565b6040516101529190611543565b60405180910390f35b6101756004803603810190610170919061125c565b61041d565b60405161018291906114c6565b60405180910390f35b61019361050d565b005b61019d610630565b005b6101b960048036038101906101b491906111e6565b610644565b6040516101c691906114ff565b60405180910390f35b6101d7610776565b6040516101e491906114c6565b60405180910390f35b61020760048036038101906102029190611277565b61079f565b60405161021491906114ff565b60405180910390f35b610237600480360381019061023291906111e6565b6108c6565b60405161024491906114ff565b60405180910390f35b610267600480360381019061026291906112a6565b6109f9565b005b610283600480360381019061027e91906111e6565b610c9f565b005b61028d610ed6565b60405161029a91906116c5565b60405180910390f35b6102bd60048036038101906102b891906111e6565b610edc565b005b60006102d567107e65360d069a5160c01b610f60565b6102e967f7d10d825b2d836760c01b610f60565b6102fd67cb748eabf5e123ca60c01b610f60565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061033b67fa129e5e8a800b9860c01b610f60565b61034f67b7a5fc1b6165991c60c01b610f60565b61036367e9825fdceed6b88e60c01b610f60565b8173ffffffffffffffffffffffffffffffffffffffff1663fbd2817f85856040518363ffffffff1660e01b815260040161039e9291906116d6565b60206040518083038186803b1580156103b657600080fd5b505afa1580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190611232565b90509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610433673e181b77e77b283860c01b610f60565b6104476737fd6fd310b0cc2c60c01b610f60565b61045b67604da97c0855a80660c01b610f60565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166319872f76836040518263ffffffff1660e01b81526004016104b69190611512565b60206040518083038186803b1580156104ce57600080fd5b505afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610506919061120c565b9050919050565b61052167a90884dfaf881a6460c01b610f60565b6105356793307662c14e204160c01b610f60565b6105496722706938b607e3ca60c01b610f60565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6105e167a5046c20a94c869760c01b610f60565b6105f567f636d63389ea077360c01b610f60565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610638610f63565b6106426000610fe1565b565b600061065a6745feaa637c41c69f60c01b610f60565b61066d661460427f6d6ffd60c01b610f60565b610681674cadd05136ac601d60c01b610f60565b6106ab7f42555945520000000000000000000000000000000000000000000000000000008361079f565b801561076f5750426106dc7f555345520000000000000000000000000000000000000000000000000000000061041d565b73ffffffffffffffffffffffffffffffffffffffff166369c212f6846040518263ffffffff1660e01b815260040161071491906114c6565b60006040518083038186803b15801561072c57600080fd5b505afa158015610740573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061076991906112cc565b60400151115b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006107b567c56cc548cfdc918b60c01b610f60565b6107c9677ff1672fb221afca60c01b610f60565b6107dd676ff1b418fb175ad660c01b610f60565b60006108087f41434c5f4d414e4147455200000000000000000000000000000000000000000061041d565b73ffffffffffffffffffffffffffffffffffffffff166391d1485485856040518363ffffffff1660e01b8152600401610842929190611523565b60206040518083038186803b15801561085a57600080fd5b505afa15801561086e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108929190611232565b90506108a8673c798a978621cde860c01b610f60565b6108bc6701d43cad0e2f3f7860c01b610f60565b8091505092915050565b60006108dc679f542bb44bce1b3b60c01b610f60565b6108f067dca979b4c9be225860c01b610f60565b61090467b23796e4ba7ccc4a60c01b610f60565b61092e7f53454c4c455200000000000000000000000000000000000000000000000000008361079f565b80156109f257504261095f7f555345520000000000000000000000000000000000000000000000000000000061041d565b73ffffffffffffffffffffffffffffffffffffffff166369c212f6846040518263ffffffff1660e01b815260040161099791906114c6565b60006040518083038186803b1580156109af57600080fd5b505afa1580156109c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109ec91906112cc565b60800151115b9050919050565b610a0d6777b0120f6d2b3a4860c01b610f60565b610a2167bff3c8e469dd91ba60c01b610f60565b610a3567b4328b746fd0e52460c01b610f60565b610a4967e3e79f6289d504f060c01b610f60565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148015610a955750610a94677fa7359ff2b5b70b60c01b6110a5565b5b80610b2557503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b085750610b0767b5acb09020e478e560c01b6110a5565b5b8015610b245750610b2367103495341a8acfba60c01b6110a5565b5b5b80610bf457503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b8857600080fd5b505afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc0919061120c565b73ffffffffffffffffffffffffffffffffffffffff16148015610bf35750610bf26733bbee5c7e7cf5f060c01b6110a5565b5b5b610c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2a906115c0565b60405180910390fd5b610c4767f0eb323e3300194c60c01b610f60565b610c5b6797458db4d4d9d8d260c01b610f60565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610cb367c679a13e543ffd1f60c01b610f60565b7f50524f544f434f4c5f41444d494e000000000000000000000000000000000000610ce867a0f9f7d9bc384d2a60c01b610f60565b610cfc677ce167db8b4269e760c01b610f60565b610d1067d66a0132b1273d3e60c01b610f60565b610d2467987b43e1fcc4409860c01b610f60565b610d3581610d306110b0565b61079f565b610d74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6b90611687565b60405180910390fd5b610d886722d46ed99cb3b60160c01b610f60565b610d9c67efbc26533f28c66260c01b610f60565b610db067413d3e25f58b559560c01b610f60565b610dc4670457386bc43dbc1360c01b610f60565b610dd867fbb7bb6ccff5dd9160c01b610f60565b610dec6762c9256cbcba7c0d60c01b610f60565b6000610e177f444154000000000000000000000000000000000000000000000000000000000061041d565b9050610e2d6768750d6f10f7b38d60c01b610f60565b610e41670fe2762e4b7f3e1e60c01b610f60565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3826002546040518363ffffffff1660e01b8152600401610e7e9291906114df565b602060405180830381600087803b158015610e9857600080fd5b505af1158015610eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed09190611232565b50505050565b60025481565b610ee4610f63565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4b9061155c565b60405180910390fd5b610f5d81610fe1565b50565b50565b610f6b6110b0565b73ffffffffffffffffffffffffffffffffffffffff16610f89610776565b73ffffffffffffffffffffffffffffffffffffffff1614610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd69061164a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019050919050565b600033905090565b6000815190506110c781611735565b919050565b600082601f8301126110dc578081fd5b8151602067ffffffffffffffff8211156110f9576110f861171f565b5b8082026111078282016116ee565b8084825283820191508387018885858a01011115611123578687fd5b8693505b85841015611148578051835284830192508481019050600184019350611127565b50809550505050505092915050565b600082601f830112611167578081fd5b815167ffffffffffffffff8111156111825761118161171f565b5b602061119681601f19601f850116016116ee565b82815285828487010111156111a9578384fd5b835b838110156111c95782818701015183828401015282810190506111ab565b838111156111d957848385840101525b5080935050505092915050565b6000602082840312156111f7578081fd5b813561120281611735565b8091505092915050565b60006020828403121561121d578081fd5b815161122881611735565b8091505092915050565b600060208284031215611243578081fd5b81518015158114611252578182fd5b8091505092915050565b60006020828403121561126d578081fd5b8135905092915050565b60008060408385031215611289578081fd5b82359150602083013561129b81611735565b809150509250929050565b6000602082840312156112b7578081fd5b81356112c281611735565b8091505092915050565b6000602082840312156112dd578081fd5b815167ffffffffffffffff808211156112f4578283fd5b81840191506101e080838703121561130a578384fd5b611313816116ee565b9050825182811115611323578485fd5b61132f87828601611157565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261137a60e084016110b8565b60e08201526101008084015183811115611392578586fd5b61139e888287016110cc565b82840152505061012080840151838111156113b7578586fd5b6113c3888287016110cc565b82840152505061014080840151838111156113dc578586fd5b6113e8888287016110cc565b8284015250506101608084015183811115611401578586fd5b61140d888287016110cc565b8284015250506101808084015183811115611426578586fd5b611432888287016110cc565b8284015250506101a0808401518381111561144b578586fd5b611457888287016110cc565b8284015250506101c08084015183811115611470578586fd5b61147c888287016110cc565b82840152505080935050505092915050565b6000806000606084860312156114a2578081fd5b833592506020840135915060408401356114bb81611735565b809150509250925092565b600060208201905060018060a01b038316825292915050565b600060408201905060018060a01b03841682528260208301529392505050565b6000602082019050821515825292915050565b600060208201905082825292915050565b600060408201905083825260018060a01b03831660208301529392505050565b600060208201905060018060a01b038316825292915050565b600060208252602660208301527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408301527f64647265737300000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208252604560208301527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408301527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608301527f6f776e6572000000000000000000000000000000000000000000000000000000608083015260a082019050919050565b6000602082526020808301527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040830152606082019050919050565b600060208252601c60208301527f5265717569726573206d73672e73656e6465722068617320726f6c65000000006040830152606082019050919050565b600060208201905082825292915050565b60006040820190508382528260208301529392505050565b6000604051905081810181811067ffffffffffffffff821117156117155761171461171f565b5b8060405250919050565b634e487b7160e01b600052604160045260246000fd5b60018060a01b038116811461174957600080fd5b5056fea264697066735822122065da6c2d39ee5d69430e036367206bc0be1abdafea6aa2854fc760f26ae1518864736f6c63430008000033";

type ProviderContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProviderContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProviderContract__factory extends ContractFactory {
  constructor(...args: ProviderContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProviderContract> {
    return super.deploy(provider, overrides || {}) as Promise<ProviderContract>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): ProviderContract {
    return super.attach(address) as ProviderContract;
  }
  override connect(signer: Signer): ProviderContract__factory {
    return super.connect(signer) as ProviderContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProviderContractInterface {
    return new utils.Interface(_abi) as ProviderContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProviderContract {
    return new Contract(address, _abi, signerOrProvider) as ProviderContract;
  }
}
