/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProviderContract,
  ProviderContractInterface,
} from "../../../protocol/configuration/ProviderContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACL_ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ACL_MANAGER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BLACKLIST_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BUYER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DATA_PROVIDER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JUDGE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORDER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_CONFIGURATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SELLER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WHITELIST_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "datCurrency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260001960025534801561001657600080fd5b50604051610ea1380380610ea183398101604081905261003591610107565b6100456100406100b3565b6100b7565b6040805180820190915260018152603560f81b60208201526001600160a01b03821661008d5760405162461bcd60e51b81526004016100849190610135565b60405180910390fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055610188565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610118578081fd5b81516001600160a01b038116811461012e578182fd5b9392505050565b6000602080835283518082850152825b8181101561016157858101830151858201604001528201610145565b818111156101725783604083870101525b50601f01601f1916929092016040019392505050565b610d0a806101976000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806381e167cf116100f9578063cfd8d6c011610097578063e0e4758811610071578063e0e47588146102cf578063e5b5019a146102d7578063f2fde38b146102df578063fbfb816b146102f2576101a9565b8063cfd8d6c0146102a1578063daea85c5146102b4578063dbe4613d146102c7576101a9565b8063985fadc8116100d3578063985fadc814610276578063a8a652eb14610289578063aee2bc8614610291578063c396cbf414610299576101a9565b806381e167cf1461025e5780638da5cb5b146102665780639359021b1461026e576101a9565b80634d5e07fb11610166578063742b128211610140578063742b12821461022657806379a558e71461022e5780637a01a1da1461024e5780637a997ab714610256576101a9565b80634d5e07fb1461020e5780635e20924914610216578063715018a61461021e576101a9565b80630542975c146101ae5780630ed0a661146101cc5780631848effa146101d457806319872f76146101dc57806319afe463146101ef57806341c0e1b514610204575b600080fd5b6101b66102fa565b6040516101c39190610b0a565b60405180910390f35b6101b6610309565b6101b6610399565b6101b66101ea3660046109b9565b6103a8565b6101f761042f565b6040516101c39190610b42565b61020c610444565b005b6101f761047a565b6101f7610486565b61020c610496565b6101f76104aa565b61024161023c36600461095a565b6104c6565b6040516101c39190610b37565b6101f761057c565b6101f7610588565b6101f761059d565b6101b66105a8565b6101f76105b7565b6102416102843660046109d1565b6105c1565b6101f7610660565b6101f7610672565b6101f7610687565b61020c6102af36600461095a565b61069b565b61020c6102c236600461095a565b61078e565b6101f7610864565b6101f7610871565b6101f761087d565b61020c6102ed36600461095a565b610883565b6101f76108bd565b6001546001600160a01b031690565b60008061031b6211105560ea1b6103a8565b90506000816001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561035a57600080fd5b505af115801561036e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610392919061097d565b9250505090565b6001546001600160a01b031681565b600154604051630cc397bb60e11b81526000916001600160a01b0316906319872f76906103d9908590600401610b42565b60206040518083038186803b1580156103f157600080fd5b505afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610429919061097d565b92915050565b6d424c41434b4c4953545f524f4c4560901b81565b6001546001600160a01b0316331461046c57634e487b7160e01b600052600160045260246000fd5b6001546001600160a01b0316ff5b6427a92222a960d91b81565b6820a1a62fa0a226a4a760b91b81565b61049e6108c7565b6104a86000610906565b565b74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b81565b60006104da64212aaca2a960d91b836105c1565b80156104295750426104f2632aa9a2a960e11b6103a8565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b815260040161051d9190610b0a565b60006040518083038186803b15801561053557600080fd5b505afa158015610549573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105719190810190610a00565b604001511192915050565b64212aaca2a960d91b81565b6d57484954454c4953545f524f4c4560901b81565b632aa9a2a960e11b81565b6000546001600160a01b031690565b6247494760e81b81565b6000806105db6a20a1a62fa6a0a720a3a2a960a91b6103a8565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b8152600401610608929190610b4b565b60206040518083038186803b15801561062057600080fd5b505afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190610999565b949350505050565b6a20a1a62fa6a0a720a3a2a960a91b81565b6d282927aa27a1a7a62fa0a226a4a760911b81565b6c2220aa20afa82927ab24a222a960991b81565b6001600160a01b03811615806106bb57506001546001600160a01b031633145b806107475750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561070457600080fd5b505afa158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c919061097d565b6001600160a01b0316145b61076c5760405162461bcd60e51b815260040161076390610ba8565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6d282927aa27a1a7a62fa0a226a4a760911b6107ac81610284610956565b6107c85760405162461bcd60e51b815260040161076390610c48565b60006107d96211105560ea1b6103a8565b60025460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b39161080c91859190600401610b1e565b602060405180830381600087803b15801561082657600080fd5b505af115801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e9190610999565b50505050565b6529a2a62622a960d11b81565b644a5544474560d81b81565b60025481565b61088b6108c7565b6001600160a01b0381166108b15760405162461bcd60e51b815260040161076390610b62565b6108ba81610906565b50565b6211105560ea1b81565b6108cf610956565b6001600160a01b03166108e06105a8565b6001600160a01b0316146104a85760405162461bcd60e51b815260040161076390610c13565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b60006020828403121561096b578081fd5b813561097681610cbf565b9392505050565b60006020828403121561098e578081fd5b815161097681610cbf565b6000602082840312156109aa578081fd5b81518015158114610976578182fd5b6000602082840312156109ca578081fd5b5035919050565b600080604083850312156109e3578081fd5b8235915060208301356109f581610cbf565b809150509250929050565b60006020808385031215610a12578182fd5b825167ffffffffffffffff80821115610a29578384fd5b9084019060808287031215610a3c578384fd5b604051608081018181108382111715610a5757610a57610ca9565b604052825182811115610a68578586fd5b8301601f81018813610a78578586fd5b805183811115610a8a57610a8a610ca9565b610a9c601f8201601f19168701610c7f565b93508084528886828401011115610ab1578687fd5b865b81811015610ace578281018701518582018801528601610ab3565b81811115610ade57878783870101525b505050908152818301519281019290925260408082015190830152606090810151908201529392505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b60405181810167ffffffffffffffff81118282101715610ca157610ca1610ca9565b604052919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146108ba57600080fdfea2646970667358221220e4812177d7c48b49240ec32aff7f855660f470e9c1b0a30dd578684b2d3226f664736f6c63430008000033";

type ProviderContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProviderContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProviderContract__factory extends ContractFactory {
  constructor(...args: ProviderContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProviderContract> {
    return super.deploy(provider, overrides || {}) as Promise<ProviderContract>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): ProviderContract {
    return super.attach(address) as ProviderContract;
  }
  override connect(signer: Signer): ProviderContract__factory {
    return super.connect(signer) as ProviderContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProviderContractInterface {
    return new utils.Interface(_abi) as ProviderContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProviderContract {
    return new Contract(address, _abi, signerOrProvider) as ProviderContract;
  }
}
