/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ACLManager,
  ACLManagerInterface,
} from "../../../protocol/configuration/ACLManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "adminRole",
        type: "bytes32",
      },
    ],
    name: "setRoleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196004553480156200001757600080fd5b5060405162001c0438038062001c048339810160408190526200003a9162000382565b806200004f620000496200019f565b620001a3565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b8152600401620000919190620003b1565b60405180910390fd5b50600380546001600160a01b0319166001600160a01b039283161790819055604051630cc397bb60e11b815260009291909116906319872f7690620000f0906820a1a62fa0a226a4a760b91b90600401620003a8565b60206040518083038186803b1580156200010957600080fd5b505afa1580156200011e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000144919062000382565b6040805180820190915260018152603560f81b60208201529091506001600160a01b038216620001895760405162461bcd60e51b8152600401620000919190620003b1565b5062000197600082620001f5565b505062000420565b3390565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62000201828262000205565b5050565b6200021c82826200024860201b620009871760201c565b60008281526001602090815260409091206200024391839062000a0c620002d2821b17901c565b505050565b620002548282620002f2565b62000201576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200028e6200019f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620002e9836001600160a01b0384166200031b565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006200032983836200036a565b6200036157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620002ec565b506000620002ec565b60009081526001919091016020526040902054151590565b60006020828403121562000394578081fd5b8151620003a18162000407565b9392505050565b90815260200190565b6000602080835283518082850152825b81811015620003df57858101830151858201604001528201620003c1565b81811115620003f15783604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146200041d57600080fd5b50565b6117d480620004306000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063ca15c8731161007c578063ca15c873146102a3578063cfd8d6c0146102b6578063d547741f146102c9578063daea85c5146102dc578063e5b5019a146102ef578063f2fde38b146102f757610158565b80638da5cb5b146102475780639010d07c1461024f57806391d1485414610262578063985fadc814610275578063a217fddf14610288578063b817bcf71461029057610158565b8063248a9ca311610115578063248a9ca3146101de5780632f2ff15d146101fe57806336568abe1461021157806341c0e1b514610224578063715018a61461022c57806379a558e71461023457610158565b806301ffc9a71461015d5780630542975c1461018657806311e0c07b1461019b5780631848effa146101ae57806319872f76146101b65780631e4e0091146101c9575b600080fd5b61017061016b3660046111d2565b61030a565b60405161017d9190611495565b60405180910390f35b61018e610337565b60405161017d9190611468565b6101706101a93660046113bb565b610346565b61018e6103cf565b61018e6101c436600461116a565b6103de565b6101dc6101d73660046111b1565b61045f565b005b6101f16101ec36600461116a565b610479565b60405161017d91906114a0565b6101dc61020c366004611182565b61048e565b6101dc61021f366004611182565b6104aa565b6101dc6104f9565b6101dc61052f565b610170610242366004611112565b610543565b61018e6105f9565b61018e61025d3660046111b1565b610608565b610170610270366004611182565b610629565b610170610283366004611182565b610652565b6101f1610699565b61017061029e366004611112565b61069e565b6101f16102b136600461116a565b610755565b6101dc6102c4366004611112565b61076c565b6101dc6102d7366004611182565b610856565b6101dc6102ea366004611112565b610872565b6101f1610947565b6101dc610305366004611112565b61094d565b60006001600160e01b03198216635a05180f60e01b148061032f575061032f82610a21565b90505b919050565b6003546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906103779087908790600401611694565b60206040518083038186803b15801561038f57600080fd5b505afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c7919061114a565b949350505050565b6003546001600160a01b031681565b600354604051630cc397bb60e11b81526000916001600160a01b0316906319872f769061040f9085906004016114a0565b60206040518083038186803b15801561042757600080fd5b505afa15801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032f919061112e565b600061046a81610a46565b6104748383610a57565b505050565b60009081526020819052604090206001015490565b61049782610479565b6104a081610a46565b6104748383610aaa565b6104b2610acc565b6001600160a01b0316816001600160a01b0316146104eb5760405162461bcd60e51b81526004016104e290611645565b60405180910390fd5b6104f58282610ad0565b5050565b6003546001600160a01b0316331461052157634e487b7160e01b600052600160045260246000fd5b6003546001600160a01b0316ff5b610537610af2565b6105416000610b31565b565b600061055764212aaca2a960d91b83610652565b801561032f57504261056f632aa9a2a960e11b6103de565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b815260040161059a9190611468565b60006040518083038186803b1580156105b257600080fd5b505afa1580156105c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ee91908101906111fa565b604001511192915050565b6002546001600160a01b031690565b60008281526001602052604081206106209083610b83565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008061066c6a20a1a62fa6a0a720a3a2a960a91b6103de565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b81526004016103779291906114a9565b600081565b60006106b36529a2a62622a960d11b83610652565b801561032f5750426106cb632aa9a2a960e11b6103de565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b81526004016106f69190611468565b60006040518083038186803b15801561070e57600080fd5b505afa158015610722573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074a91908101906111fa565b608001511192915050565b600081815260016020526040812061032f90610b8f565b6001600160a01b038116158061078c57506003546001600160a01b031633145b806108185750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107d557600080fd5b505afa1580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d919061112e565b6001600160a01b0316145b6108345760405162461bcd60e51b81526004016104e29061156e565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61085f82610479565b61086881610a46565b6104748383610ad0565b6d282927aa27a1a7a62fa0a226a4a760911b61089081610283610acc565b6108ac5760405162461bcd60e51b81526004016104e29061160e565b60006108bd6211105560ea1b6103de565b9050826001600160a01b031663095ea7b3826004546040518363ffffffff1660e01b81526004016108ef92919061147c565b602060405180830381600087803b15801561090957600080fd5b505af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610941919061114a565b50505050565b60045481565b610955610af2565b6001600160a01b03811661097b5760405162461bcd60e51b81526004016104e290611528565b61098481610b31565b50565b6109918282610629565b6104f5576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556109c8610acc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610620836001600160a01b038416610b9a565b60006001600160e01b03198216637965db0b60e01b148061032f575061032f82610be4565b61098481610a52610acc565b610bfd565b6000610a6283610479565b600084815260208190526040808220600101859055519192508391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b610ab48282610987565b60008281526001602052604090206104749082610a0c565b3390565b610ada8282610c56565b60008281526001602052604090206104749082610cd9565b610afa610acc565b6001600160a01b0316610b0b6105f9565b6001600160a01b0316146105415760405162461bcd60e51b81526004016104e2906115d9565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006106208383610cee565b600061032f82610d26565b6000610ba68383610d2a565b610bdc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610623565b506000610623565b6001600160e01b031981166301ffc9a760e01b14919050565b610c078282610629565b6104f557610c1481610d42565b610c1f836020610d54565b604051602001610c309291906113f3565b60408051601f198184030181529082905262461bcd60e51b82526104e2916004016114c0565b610c608282610629565b156104f5576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610c95610acc565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610620836001600160a01b038416610f06565b6000826000018281548110610d1357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b606061032f6001600160a01b03831660145b60606000610d638360026116e4565b610d6e9060026116cc565b67ffffffffffffffff811115610d9457634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610dbe576020820181803683370190505b509050600360fc1b81600081518110610de757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e2457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610e488460026116e4565b610e539060016116cc565b90505b6001811115610ee7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610e9557634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610eb957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610ee081611746565b9050610e56565b5083156106205760405162461bcd60e51b81526004016104e2906114f3565b60008181526001830160205260408120548015611019576000610f2a600183611703565b8554909150600090610f3e90600190611703565b9050818114610fbf576000866000018281548110610f6c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110610f9d57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610fde57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610623565b6000915050610623565b805161033281611789565b600082601f83011261103e578081fd5b8151602067ffffffffffffffff82111561105a5761105a611773565b8082026110688282016116a2565b838152828101908684018388018501891015611082578687fd5b8693505b858410156110a4578051835260019390930192918401918401611086565b50979650505050505050565b600082601f8301126110c0578081fd5b815167ffffffffffffffff8111156110da576110da611773565b6110ed601f8201601f19166020016116a2565b818152846020838601011115611101578283fd5b6103c782602083016020870161171a565b600060208284031215611123578081fd5b813561062081611789565b60006020828403121561113f578081fd5b815161062081611789565b60006020828403121561115b578081fd5b81518015158114610620578182fd5b60006020828403121561117b578081fd5b5035919050565b60008060408385031215611194578081fd5b8235915060208301356111a681611789565b809150509250929050565b600080604083850312156111c3578182fd5b50508035926020909101359150565b6000602082840312156111e3578081fd5b81356001600160e01b031981168114610620578182fd5b60006020828403121561120b578081fd5b815167ffffffffffffffff80821115611222578283fd5b81840191506101e0808387031215611238578384fd5b611241816116a2565b9050825182811115611251578485fd5b61125d878286016110b0565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526112a860e08401611023565b60e082015261010080840151838111156112c0578586fd5b6112cc8882870161102e565b82840152505061012080840151838111156112e5578586fd5b6112f18882870161102e565b828401525050610140808401518381111561130a578586fd5b6113168882870161102e565b828401525050610160808401518381111561132f578586fd5b61133b8882870161102e565b8284015250506101808084015183811115611354578586fd5b6113608882870161102e565b8284015250506101a08084015183811115611379578586fd5b6113858882870161102e565b8284015250506101c0808401518381111561139e578586fd5b6113aa8882870161102e565b918301919091525095945050505050565b6000806000606084860312156113cf578081fd5b833592506020840135915060408401356113e881611789565b809150509250925092565b60007f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008252835161142b81601785016020880161171a565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161145c81602884016020880161171a565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006020825282518060208401526114df81604085016020870161171a565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b918252602082015260400190565b60405181810167ffffffffffffffff811182821017156116c4576116c4611773565b604052919050565b600082198211156116df576116df61175d565b500190565b60008160001904831182151516156116fe576116fe61175d565b500290565b6000828210156117155761171561175d565b500390565b60005b8381101561173557818101518382015260200161171d565b838111156109415750506000910152565b6000816117555761175561175d565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461098457600080fdfea2646970667358221220a3a2514b7e2708b8ce98c0af8b640864852bdbd9c817cc3ed0297fc25e20b4f164736f6c63430008000033";

type ACLManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ACLManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ACLManager__factory extends ContractFactory {
  constructor(...args: ACLManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ACLManager> {
    return super.deploy(provider, overrides || {}) as Promise<ACLManager>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): ACLManager {
    return super.attach(address) as ACLManager;
  }
  override connect(signer: Signer): ACLManager__factory {
    return super.connect(signer) as ACLManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ACLManagerInterface {
    return new utils.Interface(_abi) as ACLManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ACLManager {
    return new Contract(address, _abi, signerOrProvider) as ACLManager;
  }
}
