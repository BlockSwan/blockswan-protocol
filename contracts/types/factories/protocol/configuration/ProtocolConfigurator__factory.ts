/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProtocolConfigurator,
  ProtocolConfiguratorInterface,
} from "../../../protocol/configuration/ProtocolConfigurator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getBuyerEntryParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "invitationEarned",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.EntryParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyerEntryParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "invitationEarned",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.EntryParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getDelayTimestamp",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "selfRefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "evidence",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "appeal",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DelayTimestamp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDelayTimestamp",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "selfRefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "evidence",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "appeal",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DelayTimestamp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getDisputeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "alpha",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feePerJuror",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DisputeParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisputeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "alpha",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feePerJuror",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DisputeParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGigCreationParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.CreationParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getGigCreationParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.CreationParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderCreationParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getOrderCreationParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getRetributionParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "affiliate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lvl0AffiliateShare",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.RetributionParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRetributionParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "affiliate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lvl0AffiliateShare",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.RetributionParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellerEntryParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "invitationEarned",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.EntryParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getSellerEntryParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "invitationEarned",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.EntryParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellerOrderFees",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getSellerOrderFees",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "invitationEarned",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.EntryParams",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateBuyerEntryParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "selfRefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "evidence",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "appeal",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DelayTimestamp",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateDelayTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "alpha",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feePerJuror",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DisputeParams",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateDisputeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.CreationParams",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateGigCreationParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateOrderCreationParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "affiliate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lvl0AffiliateShare",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.RetributionParams",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateRetributionParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xpEarned",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "invitationEarned",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.EntryParams",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateSellerEntryParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "flat",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.FeeParams",
        name: "newParams",
        type: "tuple",
      },
    ],
    name: "updateSellerOrderFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6002553480156200003557600080fd5b50604051620043883803806200438883398181016040528101906200005b919062000307565b806200007c620000706200023560201b60201c565b6200023d60201b60201c565b62000098678f85e8dcea5085a160c01b6200030160201b60201c565b620000b46784e9e6cd2fa1fc4060c01b6200030160201b60201c565b620000d067f0cf44c7258bdc6760c01b6200030160201b60201c565b620000ec672ddbfe7d2d0bd8f060c01b6200030160201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600181526020017f35000000000000000000000000000000000000000000000000000000000000008152509062000197576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018e919062000339565b60405180910390fd5b50620001b467a8aa2dfd1d29d4e460c01b6200030160201b60201c565b620001d067cc90c484db299ddb60c01b6200030160201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200022e67fc6e7cb549091f1d60c01b6200030460201b60201c565b5062000394565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b50565b60006020828403121562000319578081fd5b815160018060a01b03811681146200032f578182fd5b8091505092915050565b6000602080835283518082850152825b818110156200036a5782818701015160408287010152828101905062000349565b818111156200037c5783604083870101525b506040601f19601f8301168501019250505092915050565b613fe480620003a46000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c806372633f9811610130578063a92eaa75116100b8578063e5b5019a1161007c578063e5b5019a146106a1578063ea532d46146106bf578063ee203f11146106ef578063f2fde38b1461070b578063f73afd961461072757610232565b8063a92eaa75146105ff578063b817bcf71461061b578063cfd8d6c01461064b578063d618cc6414610667578063daea85c51461068557610232565b80638da5cb5b116100ff5780638da5cb5b1461054757806391af5b3414610565578063985fadc8146105955780639af1da48146105c55780639b7a220d146105e357610232565b806372633f98146104c157806379a558e7146104dd57806382db8b071461050d5780638504ce211461052b57610232565b80632c53f6c4116101be5780634169a7d3116101825780634169a7d31461042f57806341c0e1b51461045f57806357ddafd314610469578063688c4b2414610499578063715018a6146104b757610232565b80632c53f6c41461038957806333327472146103a75780633388aed9146103c55780633e8b9f19146103e357806340717f431461041357610232565b80631848effa116102055780631848effa146102e557806319872f761461030357806319d9603a146103335780631cb647051461034f578063247713021461036d57610232565b80630542975c146102375780630adf05d0146102555780630b3f0b541461028557806311e0c07b146102b5575b600080fd5b61023f610757565b60405161024c9190613ad5565b60405180910390f35b61026f600480360381019061026a9190613974565b6107bd565b60405161027c9190613c9f565b60405180910390f35b61029f600480360381019061029a9190613974565b610897565b6040516102ac9190613c6f565b60405180910390f35b6102cf60048036038101906102ca919061398f565b610971565b6040516102dc9190613a91565b60405180910390f35b6102ed610a43565b6040516102fa9190613ad5565b60405180910390f35b61031d600480360381019061031891906133e2565b610a69565b60405161032a9190613a58565b60405180910390f35b61034d60048036038101906103489190613452565b610b59565b005b610357610d19565b6040516103649190613c6f565b60405180910390f35b61038760048036038101906103829190613726565b610def565b005b610391610faf565b60405161039e9190613c9f565b60405180910390f35b6103af611085565b6040516103bc9190613c57565b60405180910390f35b6103cd61115a565b6040516103da9190613cb7565b60405180910390f35b6103fd60048036038101906103f89190613974565b61122f565b60405161040a9190613ccf565b60405180910390f35b61042d60048036038101906104289190613644565b611308565b005b61044960048036038101906104449190613974565b6114c8565b6040516104569190613c87565b60405180910390f35b6104676115a2565b005b610483600480360381019061047e9190613974565b6116c5565b6040516104909190613c57565b60405180910390f35b6104a161179e565b6040516104ae9190613c9f565b60405180910390f35b6104bf611874565b005b6104db60048036038101906104d69190613644565b611888565b005b6104f760048036038101906104f2919061336c565b611a48565b6040516105049190613a91565b60405180910390f35b610515611b7a565b6040516105229190613c87565b60405180910390f35b61054560048036038101906105409190613726565b611c50565b005b61054f611e10565b60405161055c9190613a58565b60405180910390f35b61057f600480360381019061057a9190613974565b611e39565b60405161058c9190613cb7565b60405180910390f35b6105af60048036038101906105aa91906133fd565b611f12565b6040516105bc9190613a91565b60405180910390f35b6105cd612039565b6040516105da9190613ccf565b60405180910390f35b6105fd60048036038101906105f8919061376c565b61210d565b005b61061960048036038101906106149190613578565b6122cd565b005b6106356004803603810190610630919061336c565b61248d565b6040516106429190613a91565b60405180910390f35b6106656004803603810190610660919061342c565b6125c0565b005b61066f612866565b60405161067c9190613cb7565b60405180910390f35b61069f600480360381019061069a919061336c565b61293b565b005b6106a9612b72565b6040516106b69190613f15565b60405180910390f35b6106d960048036038101906106d49190613974565b612b78565b6040516106e69190613c9f565b60405180910390f35b61070960048036038101906107049190613498565b612c52565b005b6107256004803603810190610720919061336c565b612e12565b005b610741600480360381019061073c9190613974565b612e96565b60405161074e9190613cb7565b60405180910390f35b600061076d67107e65360d069a5160c01b612f6f565b61078167f7d10d825b2d836760c01b612f6f565b61079567cb748eabf5e123ca60c01b612f6f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107c56130ca565b6107d9672229cfea16542c9e60c01b612f72565b6107ed6747c4030a929e35d160c01b612f72565b61080167af309aeb7b2da85b60c01b612f72565b600373__$60257ade2e9256c87b7577fd1b418be579$__63071a738290916005856040518463ffffffff1660e01b815260040161084093929190613e3c565b60806040518083038186803b15801561085857600080fd5b505af415801561086c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089091906136b5565b9050919050565b61089f6130f5565b6108b3673df4119f3813950060c01b612f72565b6108c767a0dd6e78dc7de05860c01b612f72565b6108db67281e7a73dfda93ca60c01b612f72565b601573__$60257ade2e9256c87b7577fd1b418be579$__63056190d890916017856040518463ffffffff1660e01b815260040161091a93929190613d82565b60a06040518083038186803b15801561093257600080fd5b505af4158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a9190613508565b9050919050565b600061098767fa129e5e8a800b9860c01b612f6f565b61099b67b7a5fc1b6165991c60c01b612f6f565b6109af67e9825fdceed6b88e60c01b612f6f565b8173ffffffffffffffffffffffffffffffffffffffff1663fbd2817f85856040518363ffffffff1660e01b81526004016109ea929190613f26565b60206040518083038186803b158015610a0257600080fd5b505afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a91906133b8565b90509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610a7f673e181b77e77b283860c01b612f6f565b610a936737fd6fd310b0cc2c60c01b612f6f565b610aa767604da97c0855a80660c01b612f6f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166319872f76836040518263ffffffff1660e01b8152600401610b029190613aa4565b60206040518083038186803b158015610b1a57600080fd5b505afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190613392565b9050919050565b610b6d67a4cbf7dcc01ac6d460c01b612f72565b7f50524f544f434f4c5f41444d494e000000000000000000000000000000000000610ba267a0f9f7d9bc384d2a60c01b612f6f565b610bb6677ce167db8b4269e760c01b612f6f565b610bca67d66a0132b1273d3e60c01b612f6f565b610bde67987b43e1fcc4409860c01b612f6f565b610bef81610bea612f75565b611f12565b610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2590613c19565b60405180910390fd5b610c426722d46ed99cb3b60160c01b612f6f565b610c5667efbc26533f28c66260c01b612f6f565b610c6a67fcc3c2c7c90886f160c01b612f72565b610c7e673509f13050d294be60c01b612f72565b610c9267f6bda8802054a4df60c01b612f72565b610ca667352d25a1ba1477bb60c01b612f72565b600c73__$60257ade2e9256c87b7577fd1b418be579$__635f000b399091600e856040518463ffffffff1660e01b8152600401610ce593929190613cff565b60006040518083038186803b158015610cfd57600080fd5b505af4158015610d11573d6000803e3d6000fd5b505050505050565b610d216130f5565b610d3567fffc45a40ef0055860c01b612f72565b610d4967056800b2923dc41360c01b612f72565b610d5d6757a556bddc893b3660c01b612f72565b601573__$60257ade2e9256c87b7577fd1b418be579$__632bb386ea909160176040518363ffffffff1660e01b8152600401610d9a929190613d44565b60a06040518083038186803b158015610db257600080fd5b505af4158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190613508565b905090565b610e036783fc8c4e6c1e2a2c60c01b612f72565b7f50524f544f434f4c5f41444d494e000000000000000000000000000000000000610e3867a0f9f7d9bc384d2a60c01b612f6f565b610e4c677ce167db8b4269e760c01b612f6f565b610e6067d66a0132b1273d3e60c01b612f6f565b610e7467987b43e1fcc4409860c01b612f6f565b610e8581610e80612f75565b611f12565b610ec4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebb90613c19565b60405180910390fd5b610ed86722d46ed99cb3b60160c01b612f6f565b610eec67efbc26533f28c66260c01b612f6f565b610f00677f82e233abfe993f60c01b612f72565b610f1467488be3ae5354712860c01b612f72565b610f2867fd9d0700dbf306ee60c01b612f72565b610f3c675ff3c50c1d2c401660c01b612f72565b600f73__$60257ade2e9256c87b7577fd1b418be579$__6328a1617890916011856040518463ffffffff1660e01b8152600401610f7b93929190613e73565b60006040518083038186803b158015610f9357600080fd5b505af4158015610fa7573d6000803e3d6000fd5b505050505050565b610fb76130ca565b610fcb67da38ae742bdf029b60c01b612f72565b610fdf67c2a3325ab1e0c58560c01b612f72565b610ff36766f5155b9336e65a60c01b612f72565b600373__$60257ade2e9256c87b7577fd1b418be579$__63a6b16b43909160056040518363ffffffff1660e01b8152600401611030929190613dfe565b60806040518083038186803b15801561104857600080fd5b505af415801561105c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108091906136b5565b905090565b61108d613124565b6110a1674e8fe63f2e86a1e860c01b612f72565b6110b567f6708af4de3535cb60c01b612f72565b6110c96758ad87c2295029b660c01b612f72565b600c73__$60257ade2e9256c87b7577fd1b418be579$__63bfdb03999091600e6040518363ffffffff1660e01b8152600401611106929190613ce7565b604080518083038186803b15801561111d57600080fd5b505af4158015611131573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111559190613475565b905090565b61116261313e565b61117667db85b54d58c73a8760c01b612f72565b61118a671c9ffa50f171772160c01b612f72565b61119e67949ac92767e68bb960c01b612f72565b601273__$60257ade2e9256c87b7577fd1b418be579$__63bb395b3d909160146040518363ffffffff1660e01b81526004016111db929190613e5b565b604080518083038186803b1580156111f257600080fd5b505af4158015611206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122a9190613749565b905090565b611237613158565b61124b670cf384ab0132a6ba60c01b612f72565b61125f67f48145216c48879760c01b612f72565b6112736770d4133b9c4b195360c01b612f72565b600973__$60257ade2e9256c87b7577fd1b418be579$__63907874e59091600b856040518463ffffffff1660e01b81526004016112b293929190613ef6565b604080518083038186803b1580156112c957600080fd5b505af41580156112dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611301919061378f565b9050919050565b61131c67de30cda2ed34522e60c01b612f72565b7f50524f544f434f4c5f41444d494e00000000000000000000000000000000000061135167a0f9f7d9bc384d2a60c01b612f6f565b611365677ce167db8b4269e760c01b612f6f565b61137967d66a0132b1273d3e60c01b612f6f565b61138d67987b43e1fcc4409860c01b612f6f565b61139e81611399612f75565b611f12565b6113dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d490613c19565b60405180910390fd5b6113f16722d46ed99cb3b60160c01b612f6f565b61140567efbc26533f28c66260c01b612f6f565b61141967c4f0f513e5ae0e9060c01b612f72565b61142d67c4c27b049820dfe360c01b612f72565b61144167b20b6838c55af5b160c01b612f72565b61145567274e0f2d2b67473860c01b612f72565b600373__$60257ade2e9256c87b7577fd1b418be579$__63eecd53b190916005856040518463ffffffff1660e01b815260040161149493929190613e16565b60006040518083038186803b1580156114ac57600080fd5b505af41580156114c0573d6000803e3d6000fd5b505050505050565b6114d0613172565b6114e4674ecd2c78ff2eb4b160c01b612f72565b6114f86737c7a6efad4c050860c01b612f72565b61150c6796dfcfc3fafa5d5460c01b612f72565b601873__$60257ade2e9256c87b7577fd1b418be579$__63bc57ade79091601a856040518463ffffffff1660e01b815260040161154b93929190613ddf565b60806040518083038186803b15801561156357600080fd5b505af4158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b91906135de565b9050919050565b6115b667a90884dfaf881a6460c01b612f6f565b6115ca6793307662c14e204160c01b612f6f565b6115de6722706938b607e3ca60c01b612f6f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611662577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b61167667a5046c20a94c869760c01b612f6f565b61168a67f636d63389ea077360c01b612f6f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6116cd613124565b6116e1673f035e36a4cbcffd60c01b612f72565b6116f5679c9af358ead29ca960c01b612f72565b61170967149b6ffa2739183160c01b612f72565b600c73__$60257ade2e9256c87b7577fd1b418be579$__639bb062d39091600e856040518463ffffffff1660e01b815260040161174893929190613d25565b604080518083038186803b15801561175f57600080fd5b505af4158015611773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117979190613475565b9050919050565b6117a66130ca565b6117ba672454c86b0af0fc7860c01b612f72565b6117ce67b02ba73294daa5f060c01b612f72565b6117e2673eef5003655317ca60c01b612f72565b600673__$60257ade2e9256c87b7577fd1b418be579$__63a6b16b43909160086040518363ffffffff1660e01b815260040161181f929190613dfe565b60806040518083038186803b15801561183757600080fd5b505af415801561184b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186f91906136b5565b905090565b61187c612f7d565b6118866000612ffb565b565b61189c67b5e2735b3433ad7460c01b612f72565b7f50524f544f434f4c5f41444d494e0000000000000000000000000000000000006118d167a0f9f7d9bc384d2a60c01b612f6f565b6118e5677ce167db8b4269e760c01b612f6f565b6118f967d66a0132b1273d3e60c01b612f6f565b61190d67987b43e1fcc4409860c01b612f6f565b61191e81611919612f75565b611f12565b61195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195490613c19565b60405180910390fd5b6119716722d46ed99cb3b60160c01b612f6f565b61198567efbc26533f28c66260c01b612f6f565b611999675499384683b193b760c01b612f72565b6119ad67ec7d08225582fbd060c01b612f72565b6119c167f68c2f9ba9e7cad960c01b612f72565b6119d5677fd42b45ef67502d60c01b612f72565b600673__$60257ade2e9256c87b7577fd1b418be579$__63eecd53b190916008856040518463ffffffff1660e01b8152600401611a1493929190613e16565b60006040518083038186803b158015611a2c57600080fd5b505af4158015611a40573d6000803e3d6000fd5b505050505050565b6000611a5e6745feaa637c41c69f60c01b612f6f565b611a71661460427f6d6ffd60c01b612f6f565b611a85674cadd05136ac601d60c01b612f6f565b611aaf7f425559455200000000000000000000000000000000000000000000000000000083611f12565b8015611b73575042611ae07f5553455200000000000000000000000000000000000000000000000000000000610a69565b73ffffffffffffffffffffffffffffffffffffffff166369c212f6846040518263ffffffff1660e01b8152600401611b189190613a58565b60006040518083038186803b158015611b3057600080fd5b505afa158015611b44573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611b6d91906137b2565b60400151115b9050919050565b611b82613172565b611b96679834781821ec5fb760c01b612f72565b611baa67219833aed98707c060c01b612f72565b611bbe67771ce7bbbcebced760c01b612f72565b601873__$60257ade2e9256c87b7577fd1b418be579$__63ee357ea89091601a6040518363ffffffff1660e01b8152600401611bfb929190613da1565b60806040518083038186803b158015611c1357600080fd5b505af4158015611c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4b91906135de565b905090565b611c6467ce14a69861f3162460c01b612f72565b7f50524f544f434f4c5f41444d494e000000000000000000000000000000000000611c9967a0f9f7d9bc384d2a60c01b612f6f565b611cad677ce167db8b4269e760c01b612f6f565b611cc167d66a0132b1273d3e60c01b612f6f565b611cd567987b43e1fcc4409860c01b612f6f565b611ce681611ce1612f75565b611f12565b611d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d1c90613c19565b60405180910390fd5b611d396722d46ed99cb3b60160c01b612f6f565b611d4d67efbc26533f28c66260c01b612f6f565b611d6167157b74d7d0cf8e1760c01b612f72565b611d75673d2f6ff7d00a1c3960c01b612f72565b611d8967b1f566193de664a660c01b612f72565b611d9d677bd13878ff40529160c01b612f72565b601273__$60257ade2e9256c87b7577fd1b418be579$__6328a1617890916014856040518463ffffffff1660e01b8152600401611ddc93929190613e73565b60006040518083038186803b158015611df457600080fd5b505af4158015611e08573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611e4161313e565b611e5567c12d813f8f8bbc3c60c01b612f72565b611e69674ceed028f868ca4560c01b612f72565b611e7d67c16c7058dfef971060c01b612f72565b601273__$60257ade2e9256c87b7577fd1b418be579$__63ee999bd590916014856040518463ffffffff1660e01b8152600401611ebc93929190613e99565b604080518083038186803b158015611ed357600080fd5b505af4158015611ee7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0b9190613749565b9050919050565b6000611f2867c56cc548cfdc918b60c01b612f6f565b611f3c677ff1672fb221afca60c01b612f6f565b611f50676ff1b418fb175ad660c01b612f6f565b6000611f7b7f41434c5f4d414e41474552000000000000000000000000000000000000000000610a69565b73ffffffffffffffffffffffffffffffffffffffff166391d1485485856040518363ffffffff1660e01b8152600401611fb5929190613ab5565b60206040518083038186803b158015611fcd57600080fd5b505afa158015611fe1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200591906133b8565b905061201b673c798a978621cde860c01b612f6f565b61202f6701d43cad0e2f3f7860c01b612f6f565b8091505092915050565b612041613158565b61205466a98cc58cfc241760c01b612f72565b61206867255ca617f1e2815f60c01b612f72565b61207c67280f63d674d60ac860c01b612f72565b600973__$60257ade2e9256c87b7577fd1b418be579$__632fe284819091600b6040518363ffffffff1660e01b81526004016120b9929190613eb8565b604080518083038186803b1580156120d057600080fd5b505af41580156120e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612108919061378f565b905090565b61212167453035a75576e7ab60c01b612f72565b7f50524f544f434f4c5f41444d494e00000000000000000000000000000000000061215667a0f9f7d9bc384d2a60c01b612f6f565b61216a677ce167db8b4269e760c01b612f6f565b61217e67d66a0132b1273d3e60c01b612f6f565b61219267987b43e1fcc4409860c01b612f6f565b6121a38161219e612f75565b611f12565b6121e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d990613c19565b60405180910390fd5b6121f66722d46ed99cb3b60160c01b612f6f565b61220a67efbc26533f28c66260c01b612f6f565b61221e67685bc4aa3b13fb2360c01b612f72565b61223267e4a79ecf8d80915c60c01b612f72565b61224667a1144497ee608d8c60c01b612f72565b61225a6744e0f360406071cd60c01b612f72565b600973__$60257ade2e9256c87b7577fd1b418be579$__63274d52f69091600b856040518463ffffffff1660e01b815260040161229993929190613ed0565b60006040518083038186803b1580156122b157600080fd5b505af41580156122c5573d6000803e3d6000fd5b505050505050565b6122e167e72bda2a9a7a5e8760c01b612f72565b7f50524f544f434f4c5f41444d494e00000000000000000000000000000000000061231667a0f9f7d9bc384d2a60c01b612f6f565b61232a677ce167db8b4269e760c01b612f6f565b61233e67d66a0132b1273d3e60c01b612f6f565b61235267987b43e1fcc4409860c01b612f6f565b6123638161235e612f75565b611f12565b6123a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239990613c19565b60405180910390fd5b6123b66722d46ed99cb3b60160c01b612f6f565b6123ca67efbc26533f28c66260c01b612f6f565b6123de67d04d955582e7322a60c01b612f72565b6123f267a4d97d3b448bef0060c01b612f72565b6124066704cd06b18b61ee3a60c01b612f72565b61241a6744f8bfeaac1a995a60c01b612f72565b601873__$60257ade2e9256c87b7577fd1b418be579$__63fda974d09091601a856040518463ffffffff1660e01b815260040161245993929190613db9565b60006040518083038186803b15801561247157600080fd5b505af4158015612485573d6000803e3d6000fd5b505050505050565b60006124a3679f542bb44bce1b3b60c01b612f6f565b6124b767dca979b4c9be225860c01b612f6f565b6124cb67b23796e4ba7ccc4a60c01b612f6f565b6124f57f53454c4c4552000000000000000000000000000000000000000000000000000083611f12565b80156125b95750426125267f5553455200000000000000000000000000000000000000000000000000000000610a69565b73ffffffffffffffffffffffffffffffffffffffff166369c212f6846040518263ffffffff1660e01b815260040161255e9190613a58565b60006040518083038186803b15801561257657600080fd5b505afa15801561258a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906125b391906137b2565b60800151115b9050919050565b6125d46777b0120f6d2b3a4860c01b612f6f565b6125e867bff3c8e469dd91ba60c01b612f6f565b6125fc67b4328b746fd0e52460c01b612f6f565b61261067e3e79f6289d504f060c01b612f6f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614801561265c575061265b677fa7359ff2b5b70b60c01b6130bf565b5b806126ec57503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156126cf57506126ce67b5acb09020e478e560c01b6130bf565b5b80156126eb57506126ea67103495341a8acfba60c01b6130bf565b5b5b806127bb57503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561274f57600080fd5b505afa158015612763573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127879190613392565b73ffffffffffffffffffffffffffffffffffffffff161480156127ba57506127b96733bbee5c7e7cf5f060c01b6130bf565b5b5b6127fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127f190613b52565b60405180910390fd5b61280e67f0eb323e3300194c60c01b612f6f565b6128226797458db4d4d9d8d260c01b612f6f565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61286e61313e565b61288267c090c6c61892a9c460c01b612f72565b61289667e22c09a548eb607560c01b612f72565b6128aa67c74624d3abf7e1f060c01b612f72565b600f73__$60257ade2e9256c87b7577fd1b418be579$__63bb395b3d909160116040518363ffffffff1660e01b81526004016128e7929190613e5b565b604080518083038186803b1580156128fe57600080fd5b505af4158015612912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129369190613749565b905090565b61294f67c679a13e543ffd1f60c01b612f6f565b7f50524f544f434f4c5f41444d494e00000000000000000000000000000000000061298467a0f9f7d9bc384d2a60c01b612f6f565b612998677ce167db8b4269e760c01b612f6f565b6129ac67d66a0132b1273d3e60c01b612f6f565b6129c067987b43e1fcc4409860c01b612f6f565b6129d1816129cc612f75565b611f12565b612a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0790613c19565b60405180910390fd5b612a246722d46ed99cb3b60160c01b612f6f565b612a3867efbc26533f28c66260c01b612f6f565b612a4c67413d3e25f58b559560c01b612f6f565b612a60670457386bc43dbc1360c01b612f6f565b612a7467fbb7bb6ccff5dd9160c01b612f6f565b612a886762c9256cbcba7c0d60c01b612f6f565b6000612ab37f4441540000000000000000000000000000000000000000000000000000000000610a69565b9050612ac96768750d6f10f7b38d60c01b612f6f565b612add670fe2762e4b7f3e1e60c01b612f6f565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3826002546040518363ffffffff1660e01b8152600401612b1a929190613a71565b602060405180830381600087803b158015612b3457600080fd5b505af1158015612b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b6c91906133b8565b50505050565b60025481565b612b806130ca565b612b9467d70eb0fda55bdc1160c01b612f72565b612ba867b8c25139de92b8d460c01b612f72565b612bbc6736df17324f9e51ce60c01b612f72565b600673__$60257ade2e9256c87b7577fd1b418be579$__63071a738290916008856040518463ffffffff1660e01b8152600401612bfb93929190613e3c565b60806040518083038186803b158015612c1357600080fd5b505af4158015612c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4b91906136b5565b9050919050565b612c6667bdcdcaf410a497db60c01b612f72565b7f50524f544f434f4c5f41444d494e000000000000000000000000000000000000612c9b67a0f9f7d9bc384d2a60c01b612f6f565b612caf677ce167db8b4269e760c01b612f6f565b612cc367d66a0132b1273d3e60c01b612f6f565b612cd767987b43e1fcc4409860c01b612f6f565b612ce881612ce3612f75565b611f12565b612d27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d1e90613c19565b60405180910390fd5b612d3b6722d46ed99cb3b60160c01b612f6f565b612d4f67efbc26533f28c66260c01b612f6f565b612d6367403490a71499a09d60c01b612f72565b612d7767c5c35f82950d236360c01b612f72565b612d8b67b2510203b67b3cd960c01b612f72565b612d9f679543c0a8885531e860c01b612f72565b601573__$60257ade2e9256c87b7577fd1b418be579$__63d93df20390916017856040518463ffffffff1660e01b8152600401612dde93929190613d5c565b60006040518083038186803b158015612df657600080fd5b505af4158015612e0a573d6000803e3d6000fd5b505050505050565b612e1a612f7d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612e8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e8190613aee565b60405180910390fd5b612e9381612ffb565b50565b612e9e61313e565b612eb267887b4a8b86ac58fb60c01b612f72565b612ec6674e34037b6277e29560c01b612f72565b612eda6717a50b5a7294604360c01b612f72565b600f73__$60257ade2e9256c87b7577fd1b418be579$__63ee999bd590916011856040518463ffffffff1660e01b8152600401612f1993929190613e99565b604080518083038186803b158015612f3057600080fd5b505af4158015612f44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f689190613749565b9050919050565b50565b50565b600033905090565b612f85612f75565b73ffffffffffffffffffffffffffffffffffffffff16612fa3611e10565b73ffffffffffffffffffffffffffffffffffffffff1614612ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ff090613bdc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019050919050565b6040518060800160405280600081526020016000815260200160008152602001600060ff1681525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000815190506131a981613f85565b919050565b600082601f8301126131be578081fd5b8151602067ffffffffffffffff8211156131db576131da613f6f565b5b8082026131e9828201613f3e565b8084825283820191508387018885858a01011115613205578687fd5b8693505b8584101561322a578051835284830192508481019050600184019350613209565b50809550505050505092915050565b600082601f830112613249578081fd5b815167ffffffffffffffff81111561326457613263613f6f565b5b602061327881601f19601f85011601613f3e565b828152858284870101111561328b578384fd5b835b838110156132ab57828187010151838284010152828101905061328d565b838111156132bb57848385840101525b5080935050505092915050565b6000604082840312156132d9578081fd5b6040516040810181811067ffffffffffffffff821117156132fd576132fc613f6f565b5b806040525080915082358152602083013560208201525092915050565b60006040828403121561332b578081fd5b6040516040810181811067ffffffffffffffff8211171561334f5761334e613f6f565b5b806040525080915082518152602083015160208201525092915050565b60006020828403121561337d578081fd5b813561338881613f85565b8091505092915050565b6000602082840312156133a3578081fd5b81516133ae81613f85565b8091505092915050565b6000602082840312156133c9578081fd5b815180151581146133d8578182fd5b8091505092915050565b6000602082840312156133f3578081fd5b8135905092915050565b6000806040838503121561340f578081fd5b82359150602083013561342181613f85565b809150509250929050565b60006020828403121561343d578081fd5b813561344881613f85565b8091505092915050565b600060408284031215613463578081fd5b61346d83836132c8565b905092915050565b600060408284031215613486578081fd5b613490838361331a565b905092915050565b600060a082840312156134a9578081fd5b60405160a0810181811067ffffffffffffffff821117156134cd576134cc613f6f565b5b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b600060a08284031215613519578081fd5b60405160a0810181811067ffffffffffffffff8211171561353d5761353c613f6f565b5b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600060808284031215613589578081fd5b6040516080810181811067ffffffffffffffff821117156135ad576135ac613f6f565b5b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b6000608082840312156135ef578081fd5b6040516080810181811067ffffffffffffffff8211171561361357613612613f6f565b5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b600060808284031215613655578081fd5b6040516080810181811067ffffffffffffffff8211171561367957613678613f6f565b5b806040525082358152602083013560208201526040830135604082015260608301356136a481613f9c565b806060830152508091505092915050565b6000608082840312156136c6578081fd5b6040516080810181811067ffffffffffffffff821117156136ea576136e9613f6f565b5b8060405250825181526020830151602082015260408301516040820152606083015161371581613f9c565b806060830152508091505092915050565b600060408284031215613737578081fd5b61374183836132c8565b905092915050565b60006040828403121561375a578081fd5b613764838361331a565b905092915050565b60006040828403121561377d578081fd5b61378783836132c8565b905092915050565b6000604082840312156137a0578081fd5b6137aa838361331a565b905092915050565b6000602082840312156137c3578081fd5b815167ffffffffffffffff808211156137da578283fd5b81840191506101e08083870312156137f0578384fd5b6137f981613f3e565b9050825182811115613809578485fd5b61381587828601613239565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261386060e0840161319a565b60e08201526101008084015183811115613878578586fd5b613884888287016131ae565b828401525050610120808401518381111561389d578586fd5b6138a9888287016131ae565b82840152505061014080840151838111156138c2578586fd5b6138ce888287016131ae565b82840152505061016080840151838111156138e7578586fd5b6138f3888287016131ae565b828401525050610180808401518381111561390c578586fd5b613918888287016131ae565b8284015250506101a08084015183811115613931578586fd5b61393d888287016131ae565b8284015250506101c08084015183811115613956578586fd5b613962888287016131ae565b82840152505080935050505092915050565b600060208284031215613985578081fd5b8135905092915050565b6000806000606084860312156139a3578081fd5b833592506020840135915060408401356139bc81613f85565b809150509250925092565b80518252602081015160208301525050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b805182526020810151602083015260408101516040830152606081015160608301525050565b80518252602081015160208301526040810151604083015260ff60608201511660608301525050565b600060208201905060018060a01b038316825292915050565b600060408201905060018060a01b03841682528260208301529392505050565b6000602082019050821515825292915050565b600060208201905082825292915050565b600060408201905083825260018060a01b03831660208301529392505050565b600060208201905060018060a01b038316825292915050565b600060208252602660208301527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408301527f64647265737300000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208252604560208301527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408301527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608301527f6f776e6572000000000000000000000000000000000000000000000000000000608083015260a082019050919050565b6000602082526020808301527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040830152606082019050919050565b600060208252601c60208301527f5265717569726573206d73672e73656e6465722068617320726f6c65000000006040830152606082019050919050565b6000604082019050613c6982846139c7565b92915050565b600060a082019050613c8182846139d9565b92915050565b6000608082019050613c998284613a09565b92915050565b6000608082019050613cb18284613a2f565b92915050565b6000604082019050613cc982846139c7565b92915050565b6000604082019050613ce182846139c7565b92915050565b60006040820190508382528260208301529392505050565b6000608082019050848252836020830152613d1d60408301846139c7565b949350505050565b6000606082019050848252836020830152826040830152949350505050565b60006040820190508382528260208301529392505050565b600060e082019050848252836020830152613d7a60408301846139d9565b949350505050565b6000606082019050848252836020830152826040830152949350505050565b60006040820190508382528260208301529392505050565b600060c082019050848252836020830152613dd76040830184613a09565b949350505050565b6000606082019050848252836020830152826040830152949350505050565b60006040820190508382528260208301529392505050565b600060c082019050848252836020830152613e346040830184613a2f565b949350505050565b6000606082019050848252836020830152826040830152949350505050565b60006040820190508382528260208301529392505050565b6000608082019050848252836020830152613e9160408301846139c7565b949350505050565b6000606082019050848252836020830152826040830152949350505050565b60006040820190508382528260208301529392505050565b6000608082019050848252836020830152613eee60408301846139c7565b949350505050565b6000606082019050848252836020830152826040830152949350505050565b600060208201905082825292915050565b60006040820190508382528260208301529392505050565b6000604051905081810181811067ffffffffffffffff82111715613f6557613f64613f6f565b5b8060405250919050565b634e487b7160e01b600052604160045260246000fd5b60018060a01b0381168114613f9957600080fd5b50565b60ff81168114613fab57600080fd5b5056fea264697066735822122072f69480f2fa8cea6624fd1d7e0bf6843b77590a83d5089b04c3f34f4c763a6764736f6c63430008000033";

type ProtocolConfiguratorConstructorParams =
  | [
      linkLibraryAddresses: ProtocolConfiguratorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolConfiguratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ProtocolConfigurator__factory extends ContractFactory {
  constructor(...args: ProtocolConfiguratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ProtocolConfigurator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ProtocolConfiguratorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$60257ade2e9256c87b7577fd1b418be579\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/ParamsLogic.sol:ParamsLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProtocolConfigurator> {
    return super.deploy(
      provider,
      overrides || {}
    ) as Promise<ProtocolConfigurator>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): ProtocolConfigurator {
    return super.attach(address) as ProtocolConfigurator;
  }
  override connect(signer: Signer): ProtocolConfigurator__factory {
    return super.connect(signer) as ProtocolConfigurator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolConfiguratorInterface {
    return new utils.Interface(_abi) as ProtocolConfiguratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolConfigurator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProtocolConfigurator;
  }
}

export interface ProtocolConfiguratorLibraryAddresses {
  ["contracts/protocol/libraries/logics/ParamsLogic.sol:ParamsLogic"]: string;
}
