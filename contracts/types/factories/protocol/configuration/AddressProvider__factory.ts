/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AddressProvider,
  AddressProviderInterface,
} from "../../../protocol/configuration/AddressProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "marketplaceId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "ContractAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "ContractRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_oldAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "ContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "oldMarketplaceId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "newMarketplaceId",
        type: "string",
      },
    ],
    name: "MarketplaceIdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "getContractVersionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketplaceId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "removeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMarketplaceId",
        type: "string",
      },
    ],
    name: "setMarketplaceId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "upgradeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200130538038062001305833981016040819052620000349162000329565b620000486200004262000066565b6200006a565b6200005382620000ba565b6200005e81620001c5565b50506200050a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060018054620000cb90620004b7565b80601f0160208091040260200160405190810160405280929190818152602001828054620000f990620004b7565b80156200014a5780601f106200011e576101008083540402835291602001916200014a565b820191906000526020600020905b8154815290600101906020018083116200012c57829003601f168201915b50508551939450620001689360019350602087019250905062000266565b5081604051620001799190620003eb565b604051809103902081604051620001919190620003eb565b604051908190038120907fc8a4db255dfa968e314eb5d064b4ded5d2454ba98dcb6e40a161964326b11ee590600090a35050565b620001cf6200020f565b6001600160a01b038116620002015760405162461bcd60e51b8152600401620001f89062000409565b60405180910390fd5b6200020c816200006a565b50565b6200021962000066565b6001600160a01b03166200022c62000257565b6001600160a01b031614620002555760405162461bcd60e51b8152600401620001f8906200044f565b565b6000546001600160a01b031690565b8280546200027490620004b7565b90600052602060002090601f016020900481019282620002985760008555620002e3565b82601f10620002b357805160ff1916838001178555620002e3565b82800160010185558215620002e3579182015b82811115620002e3578251825591602001919060010190620002c6565b50620002f1929150620002f5565b5090565b5b80821115620002f15760008155600101620002f6565b80516001600160a01b03811681146200032457600080fd5b919050565b600080604083850312156200033c578182fd5b82516001600160401b038082111562000353578384fd5b818501915085601f83011262000367578384fd5b8151818111156200037c576200037c620004f4565b604051601f8201601f191681016020018381118282101715620003a357620003a3620004f4565b604052818152838201602001881015620003bb578586fd5b620003ce82602083016020870162000484565b9450620003e292505050602084016200030c565b90509250929050565b60008251620003ff81846020870162000484565b9190910192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b83811015620004a157818101518382015260200162000487565b83811115620004b1576000848401525b50505050565b600281046001821680620004cc57607f821691505b60208210811415620004ee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610deb806200051a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063a43e04d811610066578063a43e04d814610183578063e16c7d9814610196578063efa6bc43146101a9578063f2fde38b146101c9576100cf565b80638da5cb5b1461015557806396f27b291461015d5780639c44d17a14610170576100cf565b806306a87c59146100d457806319872f76146100fd5780632ef3b9b6146101105780635188f996146101255780635fb0db5a14610138578063715018a61461014d575b600080fd5b6100e76100e2366004610b32565b6101dc565b6040516100f49190610c10565b60405180910390f35b6100e761010b366004610aef565b61023c565b61012361011e366004610b53565b610293565b005b610123610133366004610b07565b6102a7565b610140610411565b6040516100f49190610c5a565b6101236104a3565b6100e76104b7565b6100e761016b366004610b32565b6104c6565b61012361017e366004610b07565b610565565b610123610191366004610aef565b6106bc565b6100e76101a4366004610aef565b6107a7565b6101bc6101b7366004610aef565b6107c2565b6040516100f49190610d08565b6101236101d7366004610ace565b6107d4565b6000806101e984846104c6565b6040805180820190915260018152603560f81b60208201529091506001600160a01b0382166102345760405162461bcd60e51b815260040161022b9190610c5a565b60405180910390fd5b509392505050565b600080610248836107a7565b6040805180820190915260018152603560f81b60208201529091506001600160a01b03821661028a5760405162461bcd60e51b815260040161022b9190610c5a565b5090505b919050565b61029b61080b565b6102a48161084a565b50565b6102af61080b565b60008281526002602090815260409182902054825180840190935260018352600d60fa1b918301919091526001600160a01b0316156103015760405162461bcd60e51b815260040161022b9190610c5a565b506040805180820190915260018152603560f81b60208201526001600160a01b0382166103415760405162461bcd60e51b815260040161022b9190610c5a565b50610354816001600160a01b0316610947565b801561036657506211105560ea1b8214155b156103ca5760405163033f635b60e61b81526001600160a01b0382169063cfd8d6c090610397903090600401610c10565b600060405180830381600087803b1580156103b157600080fd5b505af11580156103c5573d6000803e3d6000fd5b505050505b6103d48282610978565b7f643cefa5894755d9e02f78cb384977d4ee3a06c8394b062a290e19176e9c69de8282604051610405929190610c24565b60405180910390a15050565b60606001805461042090610d64565b80601f016020809104026020016040519081016040528092919081815260200182805461044c90610d64565b80156104995780601f1061046e57610100808354040283529160200191610499565b820191906000526020600020905b81548152906001019060200180831161047c57829003601f168201915b5050505050905090565b6104ab61080b565b6104b560006109ca565b565b6000546001600160a01b031690565b600082815260036020908152604080832054815180830190925260018252601b60f91b92820192909252908311156105115760405162461bcd60e51b815260040161022b9190610c5a565b50600083815260036020526040902061052b600184610d11565b8154811061054957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03169392505050565b61056d61080b565b60008281526002602090815260409182902054825180840190935260018352603560f81b918301919091526001600160a01b031690816105c05760405162461bcd60e51b815260040161022b9190610c5a565b50806001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b505060405163033f635b60e61b81526001600160a01b038516925063cfd8d6c09150610640903090600401610c10565b600060405180830381600087803b15801561065a57600080fd5b505af115801561066e573d6000803e3d6000fd5b5050505061067c8383610978565b7f8b3c9342e23b53b74b0f760c251b1b6b5553d1c3d23239357405f70d5fe43d558382846040516106af93929190610c3b565b60405180910390a1505050565b6106c461080b565b60008181526002602090815260409182902054825180840190935260018352603560f81b918301919091526001600160a01b031690816107175760405162461bcd60e51b815260040161022b9190610c5a565b50806001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561075357600080fd5b505af1158015610767573d6000803e3d6000fd5b50505050610776826000610978565b7f266f45300baf5abcdb8653dcec68c843b20fb984df2fae4cd1e3fecaf46199528282604051610405929190610c24565b6000908152600260205260409020546001600160a01b031690565b60009081526003602052604090205490565b6107dc61080b565b6001600160a01b0381166108025760405162461bcd60e51b815260040161022b90610c8d565b6102a4816109ca565b610813610a1a565b6001600160a01b03166108246104b7565b6001600160a01b0316146104b55760405162461bcd60e51b815260040161022b90610cd3565b60006001805461085990610d64565b80601f016020809104026020016040519081016040528092919081815260200182805461088590610d64565b80156108d25780601f106108a7576101008083540402835291602001916108d2565b820191906000526020600020905b8154815290600101906020018083116108b557829003601f168201915b505085519394506108ee93600193506020870192509050610a1e565b50816040516108fd9190610bf4565b6040518091039020816040516109139190610bf4565b604051908190038120907fc8a4db255dfa968e314eb5d064b4ded5d2454ba98dcb6e40a161964326b11ee590600090a35050565b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511192915050565b600091825260026020908152604080842080546001600160a01b039094166001600160a01b03199485168117909155600383529084208054600181018255908552919093200180549091169091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b828054610a2a90610d64565b90600052602060002090601f016020900481019282610a4c5760008555610a92565b82601f10610a6557805160ff1916838001178555610a92565b82800160010185558215610a92579182015b82811115610a92578251825591602001919060010190610a77565b50610a9e929150610aa2565b5090565b5b80821115610a9e5760008155600101610aa3565b80356001600160a01b038116811461028e57600080fd5b600060208284031215610adf578081fd5b610ae882610ab7565b9392505050565b600060208284031215610b00578081fd5b5035919050565b60008060408385031215610b19578081fd5b82359150610b2960208401610ab7565b90509250929050565b60008060408385031215610b44578182fd5b50508035926020909101359150565b60006020808385031215610b65578182fd5b823567ffffffffffffffff80821115610b7c578384fd5b818501915085601f830112610b8f578384fd5b813581811115610ba157610ba1610d9f565b604051601f8201601f1916810185018381118282101715610bc457610bc4610d9f565b6040528181528382018501881015610bda578586fd5b818585018683013790810190930193909352509392505050565b60008251610c06818460208701610d34565b9190910192915050565b6001600160a01b0391909116815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b6000602082528251806020840152610c79816040850160208701610d34565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b600082821015610d2f57634e487b7160e01b81526011600452602481fd5b500390565b60005b83811015610d4f578181015183820152602001610d37565b83811115610d5e576000848401525b50505050565b600281046001821680610d7857607f821691505b60208210811415610d9957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122078b816f78a06546adeae079ef26fac83ce6e7d2e06a3e634b41cbe4b53864af764736f6c63430008000033";

type AddressProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressProvider__factory extends ContractFactory {
  constructor(...args: AddressProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    marketplaceId: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressProvider> {
    return super.deploy(
      marketplaceId,
      owner,
      overrides || {}
    ) as Promise<AddressProvider>;
  }
  override getDeployTransaction(
    marketplaceId: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(marketplaceId, owner, overrides || {});
  }
  override attach(address: string): AddressProvider {
    return super.attach(address) as AddressProvider;
  }
  override connect(signer: Signer): AddressProvider__factory {
    return super.connect(signer) as AddressProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressProviderInterface {
    return new utils.Interface(_abi) as AddressProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressProvider {
    return new Contract(address, _abi, signerOrProvider) as AddressProvider;
  }
}
