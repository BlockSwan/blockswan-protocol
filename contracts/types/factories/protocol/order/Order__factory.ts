/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Order, OrderInterface } from "../../../protocol/order/Order";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "autoRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
    ],
    name: "confirmOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "packageId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
        ],
        internalType: "struct InputTypes.CreateOrderInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "getInvitersByAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sellerFeesVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toTrial",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toProceed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package",
            name: "package",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sellerFeesVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toTrial",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toProceed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package",
            name: "package",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isCallerUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "payOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "refundOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b50604051620030e5380380620030e58339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b612f3780620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638da5cb5b116100de578063d2fbd0ed11610097578063e5b5019a11610071578063e5b5019a14610314578063f2fde38b1461031c578063f38aa74d1461032f578063fa1021c41461034257610173565b8063d2fbd0ed146102db578063daea85c5146102ee578063db46f68a1461030157610173565b80638da5cb5b14610274578063985fadc81461027c578063b817bcf71461028f578063bebf138f146102a2578063c9d5a94c146102b5578063cfd8d6c0146102c857610173565b80633a16c97d116101305780633a16c97d146101f957806341c0e1b51461021a57806342b50a7a14610224578063715018a61461024457806379a558e71461024c5780638d0a5fbb1461025f57610173565b80630542975c1461017857806311e0c07b14610196578063163dd8bb146101b65780631848effa146101cb57806318f38518146101d357806319872f76146101e6575b600080fd5b610180610355565b60405161018d9190612a86565b60405180910390f35b6101a96101a43660046127e2565b610364565b60405161018d9190612b2d565b6101be6103ed565b60405161018d9190612acd565b6101806104b9565b6101a96101e1366004612263565b6104c8565b6101806101f436600461231b565b610550565b61020c610207366004612236565b6105da565b60405161018d929190612a9a565b610222610663565b005b61023761023236600461231b565b610699565b60405161018d9190612cfc565b6102226107c5565b6101a961025a3660046121c5565b6107d9565b61026761088f565b60405161018d9190612b38565b6101806108a2565b6101a961028a366004612333565b6108b1565b6101a961029d3660046121c5565b610952565b61020c6102b036600461231b565b610a09565b6102226102c33660046127c1565b610a9f565b6102226102d63660046121c5565b610bc4565b6102226102e93660046127c1565b610cae565b6102226102fc3660046121c5565b610fb0565b61022261030f366004612372565b611086565b610267611381565b61022261032a3660046121c5565b611387565b61022261033d3660046127c1565b6113c1565b61022261035036600461280f565b611498565b6004546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906103959087908790600401612d2a565b60206040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e591906122a4565b949350505050565b606060006103f961088f565b905060008167ffffffffffffffff81111561042457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561045d57816020015b61044a611ec7565b8152602001906001900390816104425790505b50905060005b828110156104b25761047481610699565b82828151811061049457634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806104aa90612ea5565b915050610463565b5091505090565b6004546001600160a01b031681565b600082826001600160a01b031663dff3b497866040518263ffffffff1660e01b81526004016104f79190612a86565b60206040518083038186803b15801561050f57600080fd5b505afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906125a9565b14949350505050565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f769161058291869101612b38565b60206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d291906121e1565b90505b919050565b600080826001600160a01b031663dd06ef02856040518263ffffffff1660e01b81526004016106099190612a86565b604080518083038186803b15801561062057600080fd5b505afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065891906121fd565b915091509250929050565b6004546001600160a01b0316331461068b57634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b6106a1611ec7565b60405163b54a2e1960e01b815260009073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063b54a2e19906106de908690600290600401612d2a565b60206040518083038186803b1580156106f657600080fd5b505af415801561070a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072e91906125a9565b6040516302738e1760e61b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__90639ce385c09061076a9084908790600401612d2a565b60006040518083038186803b15801561078257600080fd5b505af4158015610796573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107be919081019061241b565b9392505050565b6107cd61161c565b6107d7600061165b565b565b60006107ed64212aaca2a960d91b836108b1565b80156105d2575042610805632aa9a2a960e11b610550565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b81526004016108309190612a86565b60006040518083038186803b15801561084857600080fd5b505afa15801561085c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088491908101906125dc565b604001511192915050565b60008061089c60006116ad565b91505090565b6003546001600160a01b031690565b6000806108cb6a20a1a62fa6a0a720a3a2a960a91b610550565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b81526004016108f8929190612b41565b60206040518083038186803b15801561091057600080fd5b505afa158015610924573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094891906122a4565b9150505b92915050565b60006109676529a2a62622a960d11b836108b1565b80156105d257504261097f632aa9a2a960e11b610550565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b81526004016109aa9190612a86565b60006040518083038186803b1580156109c257600080fd5b505afa1580156109d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109fe91908101906125dc565b608001511192915050565b600080610a1c632aa9a2a960e11b610550565b6001600160a01b031663bebf138f846040518263ffffffff1660e01b8152600401610a479190612b38565b604080518083038186803b158015610a5e57600080fd5b505afa158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9691906121fd565b91509150915091565b6000610aa96116b8565b90506000610abd632aa9a2a960e11b610550565b9050610aca8284836104c8565b60405180604001604052806002815260200161032360f41b81525090610b0c5760405162461bcd60e51b8152600401610b039190612b58565b60405180910390fd5b506000610b176116bc565b805160405163937bb08360e01b8152919250600091829173__$1e813abb9dfd13063c9f915940bdcd3e67$__9163937bb08391610b5d918b918b91600290600401612df5565b604080518083038186803b158015610b7457600080fd5b505af4158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac919061279d565b91509150610bbb82868361175a565b50505050505050565b6001600160a01b0381161580610be457506004546001600160a01b031633145b80610c705750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2d57600080fd5b505afa158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6591906121e1565b6001600160a01b0316145b610c8c5760405162461bcd60e51b8152600401610b0390612bb1565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610cb86116b8565b90506000610ccc632aa9a2a960e11b610550565b9050610cd98284836104c8565b60405180604001604052806002815260200161032360f41b81525090610d125760405162461bcd60e51b8152600401610b039190612b58565b5060008060008060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63679173cc8b8b60026040518463ffffffff1660e01b8152600401610d5893929190612ddf565b60c06040518083038186803b158015610d7057600080fd5b505af4158015610d84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da89190612867565b955095509550955095509550610dbf85898361175a565b6000610dc9611773565b9050610dd7858a838b61180b565b600073__$1e813abb9dfd13063c9f915940bdcd3e67$__6327d016be610e1474282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610550565b6001600160a01b03166391af5b34876040518263ffffffff1660e01b8152600401610e3f9190612b38565b60806040518083038186803b158015610e5757600080fd5b505afa158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f9190612562565b8a6040518363ffffffff1660e01b8152600401610ead929190612d0f565b60606040518083038186803b158015610ec557600080fd5b505af4158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd919061283a565b509150506000896001600160a01b0316638d80c922876040518263ffffffff1660e01b8152600401610f2f9190612b38565b60206040518083038186803b158015610f4757600080fd5b505afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f91906121e1565b9050610f95610f8e838b612e62565b828661175a565b610fa18282858d61180b565b50505050505050505050505050565b6d282927aa27a1a7a62fa0a226a4a760911b610fce8161028a6116b8565b610fea5760405162461bcd60e51b8152600401610b0390612cb7565b6000610ffb6211105560ea1b610550565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b39161102e91859190600401612ab4565b602060405180830381600087803b15801561104857600080fd5b505af115801561105c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108091906122a4565b50505050565b61109161025a6116b8565b60405180604001604052806002815260200161313760f01b815250906110ca5760405162461bcd60e51b8152600401610b039190612b58565b5060006110dd632aa9a2a960e11b610550565b90506110f28260000151836040015183610364565b60405180604001604052806002815260200161062760f31b8152509061112b5760405162461bcd60e51b8152600401610b039190612b58565b5081516040516346c0649160e11b81526111ac916001600160a01b03841691638d80c9229161115c91600401612b38565b60206040518083038186803b15801561117457600080fd5b505afa158015611188573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029d91906121e1565b60405180604001604052806002815260200161189b60f11b815250906111e55760405162461bcd60e51b8152600401610b039190612b58565b5060006111f06116b8565b905060006111fc61088f565b90506000806112106247494760e81b610550565b6001600160a01b031663a1ba444d84886040015189606001516040518463ffffffff1660e01b815260040161124793929190612ddf565b600060405180830381600087803b15801561126157600080fd5b505af1158015611275573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261129d91908101906122be565b9250925050846001600160a01b031663982714b68760200151856040518363ffffffff1660e01b81526004016112d4929190612d2a565b602060405180830381600087803b1580156112ee57600080fd5b505af1158015611302573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132691906122a4565b5061136084838360405180608001604052808881526020018b6020015181526020018b6000015181526020018b604001518152508a611a1b565b6113796b21a922a0aa22afa7a92222a960a11b85611cc9565b505050505050565b60055481565b61138f61161c565b6001600160a01b0381166113b55760405162461bcd60e51b8152600401610b0390612b6b565b6113be8161165b565b50565b60006113cb6116b8565b905060006113df632aa9a2a960e11b610550565b90506113ec8284836104c8565b60405180604001604052806002815260200161313960f01b815250906114255760405162461bcd60e51b8152600401610b039190612b58565b50604051634d52915760e01b815273__$1e813abb9dfd13063c9f915940bdcd3e67$__90634d529157906114629087908790600290600401612ddf565b60006040518083038186803b15801561147a57600080fd5b505af415801561148e573d6000803e3d6000fd5b5050505050505050565b60006114a26116b8565b905060006114b6632aa9a2a960e11b610550565b90506000816001600160a01b0316638d80c922856040518263ffffffff1660e01b81526004016114e69190612b38565b60206040518083038186803b1580156114fe57600080fd5b505afa158015611512573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153691906121e1565b90506115438386846104c8565b60405180604001604052806002815260200161313960f01b8152509061157c5760405162461bcd60e51b8152600401610b039190612b58565b5060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63146cc32c89898960026040518563ffffffff1660e01b81526004016115be9493929190612df5565b604080518083038186803b1580156115d557600080fd5b505af41580156115e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160d919061279d565b9150915061148e82848361175a565b6116246116b8565b6001600160a01b03166116356108a2565b6001600160a01b0316146107d75760405162461bcd60e51b8152600401610b0390612c53565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006105d282611d32565b3390565b6116c4611f3c565b6116e574282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610550565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160606040518083038186803b15801561171d57600080fd5b505afa158015611731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117559190612357565b905090565b61176e6001600160a01b0382168385611d36565b505050565b61177b611f5d565b61179c74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610550565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b1580156117d357600080fd5b505afa1580156117e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175591906125c1565b60008061181885846105da565b91509150600073__$30e2c0763bc74e29ca837c0a99f7d1b333$__63013a9d5b60405180606001604052808a81526020018860000151815260200188602001518152506040518263ffffffff1660e01b81526004016118779190612cee565b60606040518083038186803b15801561188f57600080fd5b505af41580156118a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c79190612357565b905060006118da6211105560ea1b610550565b8251604051636203b43b60e11b81529192506001600160a01b0383169163c40768769161190c91889190600401612ab4565b600060405180830381600087803b15801561192657600080fd5b505af115801561193a573d6000803e3d6000fd5b505050506020820151604051636203b43b60e11b81526001600160a01b0383169163c40768769161196f918791600401612ab4565b600060405180830381600087803b15801561198957600080fd5b505af115801561199d573d6000803e3d6000fd5b505050506040828101519051636203b43b60e11b81526001600160a01b0383169163c4076876916119d391600091600401612ab4565b600060405180830381600087803b1580156119ed57600080fd5b505af1158015611a01573d6000803e3d6000fd5b5050505061148e682820acafa7a92222a960b91b88611cc9565b600080611a3f74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610550565b6001600160a01b031663d618cc646040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a7757600080fd5b505afa158015611a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaf919061257d565b91509150600080600073__$1e813abb9dfd13063c9f915940bdcd3e67$__6327d016be868a600001516040518363ffffffff1660e01b8152600401611af5929190612d0f565b60606040518083038186803b158015611b0d57600080fd5b505af4158015611b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b45919061283a565b9250925092506000611b5c6211105560ea1b610550565b6001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611b9657600080fd5b505af1158015611baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bce91906121e1565b905073__$1e813abb9dfd13063c9f915940bdcd3e67$";

type OrderConstructorParams =
  | [linkLibraryAddresses: OrderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Order__factory extends ContractFactory {
  constructor(...args: OrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Order__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: OrderLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1e813abb9dfd13063c9f915940bdcd3e67\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Order> {
    return super.deploy(provider, overrides || {}) as Promise<Order>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Order {
    return super.attach(address) as Order;
  }
  override connect(signer: Signer): Order__factory {
    return super.connect(signer) as Order__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderInterface {
    return new utils.Interface(_abi) as OrderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Order {
    return new Contract(address, _abi, signerOrProvider) as Order;
  }
}

export interface OrderLibraryAddresses {
  ["contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
