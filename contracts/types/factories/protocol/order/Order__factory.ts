/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Order, OrderInterface } from "../../../protocol/order/Order";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "autoRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
    ],
    name: "confirmOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "packageId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
        ],
        internalType: "struct InputTypes.CreateOrderInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Evidence",
        name: "evidence",
        type: "tuple",
      },
    ],
    name: "dispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "getInvitersByAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disputed",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buyerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sellerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.Invoice",
            name: "invoice",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disputed",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buyerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sellerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.Invoice",
            name: "invoice",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "getUserIdByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isCallerUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "payOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "refundOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "winningChoice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "procecutorId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defendantId",
        type: "uint256",
      },
    ],
    name: "rule",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b50604051620036a4380380620036a48339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b6134f680620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063d2fbd0ed11610097578063e5b5019a11610071578063e5b5019a1461039e578063f2fde38b146103a6578063f38aa74d146103b9578063fa1021c4146103cc576101c4565b8063d2fbd0ed14610365578063daea85c514610378578063db46f68a1461038b576101c4565b8063bebf138f116100d3578063bebf138f14610319578063c83518821461032c578063c9d5a94c1461033f578063cfd8d6c014610352576101c4565b80638da5cb5b146102eb578063985fadc8146102f3578063b817bcf714610306576101c4565b806341c0e1b511610166578063715018a611610140578063715018a6146102b557806379a558e7146102bd57806387d51276146102d05780638d0a5fbb146102e3576101c4565b806341c0e1b51461026b57806342b50a7a1461027557806366e5e0b314610295576101c4565b80631848effa116101a25780631848effa1461021c57806318f385181461022457806319872f76146102375780633a16c97d1461024a576101c4565b80630542975c146101c957806311e0c07b146101e7578063163dd8bb14610207575b600080fd5b6101d16103df565b6040516101de9190612fb0565b60405180910390f35b6101fa6101f5366004612cd1565b6103ee565b6040516101de9190613057565b61020f610477565b6040516101de9190612ff7565b6101d1610542565b6101fa610232366004612693565b610551565b6101d1610245366004612775565b6105d9565b61025d610258366004612666565b610663565b6040516101de929190612fc4565b6102736106ec565b005b610288610283366004612775565b610722565b6040516101de9190613239565b6102a86102a3366004612666565b61084e565b6040516101de9190613062565b6102736108cd565b6101fa6102cb3660046125f5565b6108e1565b6102736102de366004612d29565b610997565b6102a8610bda565b6101d1610bed565b6101fa61030136600461278d565b610bfc565b6101fa6103143660046125f5565b610c43565b61025d610327366004612775565b610cfa565b6101fa61033a366004612dda565b610d90565b61027361034d366004612c8d565b611020565b6102736103603660046125f5565b61113c565b610273610373366004612c8d565b611226565b6102736103863660046125f5565b6113e8565b61027361039936600461280b565b6114be565b6102a86117bd565b6102736103b43660046125f5565b6117c3565b6102736103c7366004612c8d565b6117fd565b6102736103da366004612cfe565b6118d4565b6004546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f9061041f908790879060040161324c565b60206040518083038186803b15801561043757600080fd5b505afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f91906126d4565b949350505050565b60606000610483610bda565b90506000816001600160401b038111156104ad57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104e657816020015b6104d361230f565b8152602001906001900390816104cb5790505b50905060005b8281101561053b576104fd81610722565b82828151811061051d57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061053390613464565b9150506104ec565b5091505090565b6004546001600160a01b031681565b600082826001600160a01b031663dff3b497866040518263ffffffff1660e01b81526004016105809190612fb0565b60206040518083038186803b15801561059857600080fd5b505afa1580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190612a91565b14949350505050565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f769161060b91869101613062565b60206040518083038186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190612611565b90505b919050565b600080826001600160a01b031663dd06ef02856040518263ffffffff1660e01b81526004016106929190612fb0565b604080518083038186803b1580156106a957600080fd5b505afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e1919061262d565b915091509250929050565b6004546001600160a01b0316331461071457634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b61072a61230f565b60405163b54a2e1960e01b815260009073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063b54a2e199061076790869060029060040161324c565b60206040518083038186803b15801561077f57600080fd5b505af4158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190612a91565b6040516302738e1760e61b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__90639ce385c0906107f3908490879060040161324c565b60006040518083038186803b15801561080b57600080fd5b505af415801561081f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108479190810190612971565b9392505050565b60405163dff3b49760e01b81526000906001600160a01b0383169063dff3b4979061087d908690600401612fb0565b60206040518083038186803b15801561089557600080fd5b505afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190612a91565b6108d5611a58565b6108df6000611a97565b565b60006108f564212aaca2a960d91b83610bfc565b801561065b57504261090d632aa9a2a960e11b6105d9565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b81526004016109389190612fb0565b60006040518083038186803b15801561095057600080fd5b505afa158015610964573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261098c9190810190612aa9565b604001511192915050565b60006109a1611ae9565b905060006109b5632aa9a2a960e11b6105d9565b905060006109cc664449535055544560c81b6105d9565b90506000826001600160a01b031663dff3b497856040518263ffffffff1660e01b81526004016109fc9190612fb0565b60206040518083038186803b158015610a1457600080fd5b505afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190612a91565b90506000878214610a5d5787610a5f565b865b905087821480610a6e57508682145b60405180604001604052806002815260200161323560f01b81525090610ab05760405162461bcd60e51b8152600401610aa79190613082565b60405180910390fd5b50604051630639c40960e31b81526000906001600160a01b038516906331ce204890610ae8908d90879087908c908e90600401613336565b602060405180830381600087803b158015610b0257600080fd5b505af1158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a9190612a91565b60405163681caa2160e01b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063681caa2190610b7d908d908c908e9087906002906004016133ae565b60206040518083038186803b158015610b9557600080fd5b505af4158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcd91906126d4565b5050505050505050505050565b600080610be76000611aed565b91505090565b6003546001600160a01b031690565b600080610c166a20a1a62fa6a0a720a3a2a960a91b6105d9565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b815260040161041f92919061306b565b6000610c586529a2a62622a960d11b83610bfc565b801561065b575042610c70632aa9a2a960e11b6105d9565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610c9b9190612fb0565b60006040518083038186803b158015610cb357600080fd5b505afa158015610cc7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cef9190810190612aa9565b608001511192915050565b600080610d0d632aa9a2a960e11b6105d9565b6001600160a01b031663bebf138f846040518263ffffffff1660e01b8152600401610d389190613062565b604080518083038186803b158015610d4f57600080fd5b505afa158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d87919061262d565b91509150915091565b6000664449535055544560c81b610da6816105d9565b6001600160a01b0316610db7611ae9565b6001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610dfa5760405162461bcd60e51b8152600401610aa79190613082565b506000610e0d632aa9a2a960e11b6105d9565b90506000610e1a87610722565b610120015190506000610e2b611af8565b90506000836001600160a01b0316638d80c922886040518263ffffffff1660e01b8152600401610e5b9190613062565b60206040518083038186803b158015610e7357600080fd5b505afa158015610e87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eab9190612611565b90506000846001600160a01b0316638d80c9228a6040518263ffffffff1660e01b8152600401610edb9190613062565b60206040518083038186803b158015610ef357600080fd5b505afa158015610f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2b9190612611565b905060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63843234578e88604001518960000151610f5f9190613421565b6040518363ffffffff1660e01b8152600401610f7c92919061324c565b604080518083038186803b158015610f9357600080fd5b505af4158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb9190612cae565b91509150610fde82848860800151611b95565b610fed81858860800151611b95565b610ffd866040015184878a611bae565b61100d866020015184878a611bae565b5060019c9b505050505050505050505050565b600061102a611ae9565b9050600061103e632aa9a2a960e11b6105d9565b905061104b828483610551565b60405180604001604052806002815260200161032360f41b815250906110845760405162461bcd60e51b8152600401610aa79190613082565b50600061108f611cf2565b805160405163937bb08360e01b8152919250600091829173__$1e813abb9dfd13063c9f915940bdcd3e67$__9163937bb083916110d5918b918b91600290600401613393565b604080518083038186803b1580156110ec57600080fd5b505af4158015611100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111249190612c69565b91509150611133828683611b95565b50505050505050565b6001600160a01b038116158061115c57506004546001600160a01b031633145b806111e85750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190612611565b6001600160a01b0316145b6112045760405162461bcd60e51b8152600401610aa7906130db565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000611230611ae9565b90506000611244632aa9a2a960e11b6105d9565b9050611251828483610551565b60405180604001604052806002815260200161032360f41b8152509061128a5760405162461bcd60e51b8152600401610aa79190613082565b50600080600073__$1e813abb9dfd13063c9f915940bdcd3e67$__63679173cc888860026040518463ffffffff1660e01b81526004016112cc93929190613320565b60e06040518083038186803b1580156112e457600080fd5b505af41580156112f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131c919061293c565b9250925092506000846001600160a01b0316638d80c922846040518263ffffffff1660e01b81526004016113509190613062565b60206040518083038186803b15801561136857600080fd5b505afa15801561137c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a09190612611565b905060006113ac611af8565b90506113be8560200151888389611bae565b6113ce8560400151838389611bae565b6113dd83838760800151611b95565b505050505050505050565b6d282927aa27a1a7a62fa0a226a4a760911b61140681610301611ae9565b6114225760405162461bcd60e51b8152600401610aa7906131e1565b60006114336211105560ea1b6105d9565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b39161146691859190600401612fde565b602060405180830381600087803b15801561148057600080fd5b505af1158015611494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b891906126d4565b50505050565b6114c96102cb611ae9565b60405180604001604052806002815260200161313760f01b815250906115025760405162461bcd60e51b8152600401610aa79190613082565b506000611515632aa9a2a960e11b6105d9565b905061152a82600001518360400151836103ee565b60405180604001604052806002815260200161062760f31b815250906115635760405162461bcd60e51b8152600401610aa79190613082565b5081516040516346c0649160e11b81526115e4916001600160a01b03841691638d80c9229161159491600401613062565b60206040518083038186803b1580156115ac57600080fd5b505afa1580156115c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103149190612611565b60405180604001604052806002815260200161189b60f11b8152509061161d5760405162461bcd60e51b8152600401610aa79190613082565b506000611628611ae9565b90506000611634610bda565b90506000806116486247494760e81b6105d9565b6001600160a01b031663a1ba444d84886040015189606001516040518463ffffffff1660e01b815260040161167f93929190613320565b600060405180830381600087803b15801561169957600080fd5b505af11580156116ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116d591908101906126ee565b9250925050846001600160a01b031663982714b68760200151856040518363ffffffff1660e01b815260040161170c92919061324c565b602060405180830381600087803b15801561172657600080fd5b505af115801561173a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175e91906126d4565b5061179c8483836000015160405180608001604052808881526020018b6020015181526020018b6000015181526020018b604001518152508a611d8b565b6117b56b21a922a0aa22afa7a92222a960a11b85612012565b505050505050565b60055481565b6117cb611a58565b6001600160a01b0381166117f15760405162461bcd60e51b8152600401610aa790613095565b6117fa81611a97565b50565b6000611807611ae9565b9050600061181b632aa9a2a960e11b6105d9565b9050611828828483610551565b60405180604001604052806002815260200161313960f01b815250906118615760405162461bcd60e51b8152600401610aa79190613082565b50604051634d52915760e01b815273__$1e813abb9dfd13063c9f915940bdcd3e67$__90634d5291579061189e9087908790600290600401613320565b60006040518083038186803b1580156118b657600080fd5b505af41580156118ca573d6000803e3d6000fd5b5050505050505050565b60006118de611ae9565b905060006118f2632aa9a2a960e11b6105d9565b90506000816001600160a01b0316638d80c922856040518263ffffffff1660e01b81526004016119229190613062565b60206040518083038186803b15801561193a57600080fd5b505afa15801561194e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119729190612611565b905061197f838684610551565b60405180604001604052806002815260200161313960f01b815250906119b85760405162461bcd60e51b8152600401610aa79190613082565b5060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63146cc32c89898960026040518563ffffffff1660e01b81526004016119fa9493929190613393565b604080518083038186803b158015611a1157600080fd5b505af4158015611a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a499190612c69565b915091506118ca828483611b95565b611a60611ae9565b6001600160a01b0316611a71610bed565b6001600160a01b0316146108df5760405162461bcd60e51b8152600401610aa79061317d565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b3390565b600061065b8261207b565b611b00612370565b611b2174282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6105d9565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b158015611b5857600080fd5b505afa158015611b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b909190612921565b905090565b611ba96001600160a01b038216838561207f565b505050565b600080611bbb8584610663565b91509150600073__$30e2c0763bc74e29ca837c0a99f7d1b333$__63013a9d5b60405180606001604052808a81526020018860000151815260200188602001518152506040518263ffffffff1660e01b8152600401611c1a9190613218565b60606040518083038186803b158015611c3257600080fd5b505af4158015611c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6a91906127b1565b90506000611c7d6211105560ea1b6105d9565b9050611cdc6040518060c00160405280306001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b0316815260200184600001518152602001846020015181526020018460400151815250826120e2565b6118ca682820acafa7a92222a960b91b88612012565b611cfa61238a565b611d1b74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6105d9565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b158015611d5357600080fd5b505afa158015611d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9091906128b3565b6000611dae74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6105d9565b90506000816001600160a01b031663d618cc646040518163ffffffff1660e01b8152600401604080518083038186803b158015611dea57600080fd5b505afa158015611dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e229190612921565b90506000826001600160a01b0316633388aed96040518163ffffffff1660e01b8152600401604080518083038186803b158015611e5e57600080fd5b505afa158015611e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e969190612921565b90506000611ea96211105560ea1b6105d9565b6001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ee357600080fd5b505af1158015611ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1b9190612611565b9050600073__$1e813abb9dfd13063c9f915940bdcd3e67$";

type OrderConstructorParams =
  | [linkLibraryAddresses: OrderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Order__factory extends ContractFactory {
  constructor(...args: OrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Order__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: OrderLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1e813abb9dfd13063c9f915940bdcd3e67\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Order> {
    return super.deploy(provider, overrides || {}) as Promise<Order>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Order {
    return super.attach(address) as Order;
  }
  override connect(signer: Signer): Order__factory {
    return super.connect(signer) as Order__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderInterface {
    return new utils.Interface(_abi) as OrderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Order {
    return new Contract(address, _abi, signerOrProvider) as Order;
  }
}

export interface OrderLibraryAddresses {
  ["contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
