/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Order, OrderInterface } from "../../../protocol/order/Order";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "autoRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
    ],
    name: "confirmOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "packageId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
        ],
        internalType: "struct InputTypes.CreateOrderInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "getInvitersByAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sellerFeesVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toTrial",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toProceed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package",
            name: "package",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sellerFeesVersion",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toTrial",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toProceed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeDelivery",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.Package",
            name: "package",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isCallerUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "payOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b5060405162003035380380620030358339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b612e8780620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063d2fbd0ed1161007c578063d2fbd0ed146102c0578063daea85c5146102d3578063db46f68a146102e6578063e5b5019a146102f9578063f2fde38b14610301578063f38aa74d1461031457610158565b80638da5cb5b14610259578063985fadc814610261578063b817bcf714610274578063bebf138f14610287578063c9d5a94c1461029a578063cfd8d6c0146102ad57610158565b80633a16c97d116101155780633a16c97d146101de57806341c0e1b5146101ff57806342b50a7a14610209578063715018a61461022957806379a558e7146102315780638d0a5fbb1461024457610158565b80630542975c1461015d57806311e0c07b1461017b578063163dd8bb1461019b5780631848effa146101b057806318f38518146101b857806319872f76146101cb575b600080fd5b610165610327565b60405161017291906129be565b60405180910390f35b61018e610189366004612745565b610336565b6040516101729190612a65565b6101a36103bf565b6040516101729190612a05565b61016561048b565b61018e6101c63660046121c6565b61049a565b6101656101d936600461227e565b610522565b6101f16101ec366004612199565b6105ac565b6040516101729291906129d2565b610207610635565b005b61021c61021736600461227e565b61066b565b6040516101729190612c34565b610207610797565b61018e61023f366004612128565b6107ab565b61024c610861565b6040516101729190612a70565b610165610874565b61018e61026f366004612296565b610883565b61018e610282366004612128565b610924565b6101f161029536600461227e565b6109db565b6102076102a8366004612724565b610a71565b6102076102bb366004612128565b610b96565b6102076102ce366004612724565b610c80565b6102076102e1366004612128565b610f82565b6102076102f43660046122d5565b611058565b61024c611353565b61020761030f366004612128565b611359565b610207610322366004612724565b611393565b6004546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906103679087908790600401612c62565b60206040518083038186803b15801561037f57600080fd5b505afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190612207565b949350505050565b606060006103cb610861565b905060008167ffffffffffffffff8111156103f657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561042f57816020015b61041c611e2a565b8152602001906001900390816104145790505b50905060005b82811015610484576104468161066b565b82828151811061046657634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061047c90612df5565b915050610435565b5091505090565b6004546001600160a01b031681565b600082826001600160a01b031663dff3b497866040518263ffffffff1660e01b81526004016104c991906129be565b60206040518083038186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610519919061250c565b14949350505050565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f769161055491869101612a70565b60206040518083038186803b15801561056c57600080fd5b505afa158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a49190612144565b90505b919050565b600080826001600160a01b031663dd06ef02856040518263ffffffff1660e01b81526004016105db91906129be565b604080518083038186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190612160565b915091509250929050565b6004546001600160a01b0316331461065d57634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b610673611e2a565b60405163b54a2e1960e01b815260009073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063b54a2e19906106b0908690600290600401612c62565b60206040518083038186803b1580156106c857600080fd5b505af41580156106dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610700919061250c565b6040516302738e1760e61b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__90639ce385c09061073c9084908790600401612c62565b60006040518083038186803b15801561075457600080fd5b505af4158015610768573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610790919081019061237e565b9392505050565b61079f61146a565b6107a960006114a9565b565b60006107bf64212aaca2a960d91b83610883565b80156105a45750426107d7632aa9a2a960e11b610522565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b815260040161080291906129be565b60006040518083038186803b15801561081a57600080fd5b505afa15801561082e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610856919081019061253f565b604001511192915050565b60008061086e60006114fb565b91505090565b6003546001600160a01b031690565b60008061089d6a20a1a62fa6a0a720a3a2a960a91b610522565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b81526004016108ca929190612a79565b60206040518083038186803b1580156108e257600080fd5b505afa1580156108f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091a9190612207565b9150505b92915050565b60006109396529a2a62622a960d11b83610883565b80156105a4575042610951632aa9a2a960e11b610522565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b815260040161097c91906129be565b60006040518083038186803b15801561099457600080fd5b505afa1580156109a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109d0919081019061253f565b608001511192915050565b6000806109ee632aa9a2a960e11b610522565b6001600160a01b031663bebf138f846040518263ffffffff1660e01b8152600401610a199190612a70565b604080518083038186803b158015610a3057600080fd5b505afa158015610a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a689190612160565b91509150915091565b6000610a7b611506565b90506000610a8f632aa9a2a960e11b610522565b9050610a9c82848361049a565b60405180604001604052806002815260200161032360f41b81525090610ade5760405162461bcd60e51b8152600401610ad59190612a90565b60405180910390fd5b506000610ae961150a565b805160405163937bb08360e01b8152919250600091829173__$1e813abb9dfd13063c9f915940bdcd3e67$__9163937bb08391610b2f918b918b91600290600401612d2d565b604080518083038186803b158015610b4657600080fd5b505af4158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190612700565b91509150610b8d8286836115a8565b50505050505050565b6001600160a01b0381161580610bb657506004546001600160a01b031633145b80610c425750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bff57600080fd5b505afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c379190612144565b6001600160a01b0316145b610c5e5760405162461bcd60e51b8152600401610ad590612ae9565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610c8a611506565b90506000610c9e632aa9a2a960e11b610522565b9050610cab82848361049a565b60405180604001604052806002815260200161032360f41b81525090610ce45760405162461bcd60e51b8152600401610ad59190612a90565b5060008060008060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63679173cc8b8b60026040518463ffffffff1660e01b8152600401610d2a93929190612d17565b60c06040518083038186803b158015610d4257600080fd5b505af4158015610d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7a919061279f565b955095509550955095509550610d918589836115a8565b6000610d9b6115c1565b9050610da9858a838b611659565b600073__$1e813abb9dfd13063c9f915940bdcd3e67$__6327d016be610de674282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610522565b6001600160a01b03166391af5b34876040518263ffffffff1660e01b8152600401610e119190612a70565b60806040518083038186803b158015610e2957600080fd5b505afa158015610e3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6191906124c5565b8a6040518363ffffffff1660e01b8152600401610e7f929190612c47565b60606040518083038186803b158015610e9757600080fd5b505af4158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf9190612772565b509150506000896001600160a01b0316638d80c922876040518263ffffffff1660e01b8152600401610f019190612a70565b60206040518083038186803b158015610f1957600080fd5b505afa158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f519190612144565b9050610f67610f60838b612db2565b82866115a8565b610f738282858d611659565b50505050505050505050505050565b6d282927aa27a1a7a62fa0a226a4a760911b610fa08161026f611506565b610fbc5760405162461bcd60e51b8152600401610ad590612bef565b6000610fcd6211105560ea1b610522565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b391611000918591906004016129ec565b602060405180830381600087803b15801561101a57600080fd5b505af115801561102e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110529190612207565b50505050565b61106361023f611506565b60405180604001604052806002815260200161313760f01b8152509061109c5760405162461bcd60e51b8152600401610ad59190612a90565b5060006110af632aa9a2a960e11b610522565b90506110c48260000151836040015183610336565b60405180604001604052806002815260200161062760f31b815250906110fd5760405162461bcd60e51b8152600401610ad59190612a90565b5081516040516346c0649160e11b815261117e916001600160a01b03841691638d80c9229161112e91600401612a70565b60206040518083038186803b15801561114657600080fd5b505afa15801561115a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102829190612144565b60405180604001604052806002815260200161189b60f11b815250906111b75760405162461bcd60e51b8152600401610ad59190612a90565b5060006111c2611506565b905060006111ce610861565b90506000806111e26247494760e81b610522565b6001600160a01b031663a1ba444d84886040015189606001516040518463ffffffff1660e01b815260040161121993929190612d17565b600060405180830381600087803b15801561123357600080fd5b505af1158015611247573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261126f9190810190612221565b9250925050846001600160a01b031663982714b68760200151856040518363ffffffff1660e01b81526004016112a6929190612c62565b602060405180830381600087803b1580156112c057600080fd5b505af11580156112d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f89190612207565b5061133284838360405180608001604052808881526020018b6020015181526020018b6000015181526020018b604001518152508a611789565b61134b6b21a922a0aa22afa7a92222a960a11b85611a37565b505050505050565b60055481565b61136161146a565b6001600160a01b0381166113875760405162461bcd60e51b8152600401610ad590612aa3565b611390816114a9565b50565b600061139d611506565b905060006113b1632aa9a2a960e11b610522565b90506113be82848361049a565b60405180604001604052806002815260200161313960f01b815250906113f75760405162461bcd60e51b8152600401610ad59190612a90565b50604051634d52915760e01b815273__$1e813abb9dfd13063c9f915940bdcd3e67$__90634d529157906114349087908790600290600401612d17565b60006040518083038186803b15801561144c57600080fd5b505af4158015611460573d6000803e3d6000fd5b5050505050505050565b611472611506565b6001600160a01b0316611483610874565b6001600160a01b0316146107a95760405162461bcd60e51b8152600401610ad590612b8b565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006105a482611aa0565b3390565b611512611e9f565b61153374282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610522565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160606040518083038186803b15801561156b57600080fd5b505afa15801561157f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a391906122ba565b905090565b6115bc6001600160a01b0382168385611aa4565b505050565b6115c9611ec0565b6115ea74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610522565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561162157600080fd5b505afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a39190612524565b60008061166685846105ac565b91509150600073__$30e2c0763bc74e29ca837c0a99f7d1b333$__63013a9d5b60405180606001604052808a81526020018860000151815260200188602001518152506040518263ffffffff1660e01b81526004016116c59190612c26565b60606040518083038186803b1580156116dd57600080fd5b505af41580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171591906122ba565b90506117736040518060c00160405280306001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b0316815260200183600001518152602001836020015181526020018360400151815250611b07565b610b8d682820acafa7a92222a960b91b87611a37565b6000806117ad74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610522565b6001600160a01b031663d618cc646040518163ffffffff1660e01b815260040160a06040518083038186803b1580156117e557600080fd5b505afa1580156117f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181d91906124e0565b91509150600080600073__$1e813abb9dfd13063c9f915940bdcd3e67$__6327d016be868a600001516040518363ffffffff1660e01b8152600401611863929190612c47565b60606040518083038186803b15801561187b57600080fd5b505af415801561188f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b39190612772565b92509250925060006118ca6211105560ea1b610522565b6001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561190457600080fd5b505af1158015611918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193c9190612144565b905073__$1e813abb9dfd13063c9f915940bdcd3e67$__6334d61bae600060026040518060c001604052808f81526020018c60800151815260200160405180606001604052808c81526020018b81526020018a81525081526020018d81526020018e8152602001866001600160a01b03168152506040518463ffffffff1660e01b81526004016119ce93929190612c70565b60206040518083038186803b1580156119e657600080fd5b505af41580156119fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1e9190612207565b50611a2a828c83611cfc565b5050505050505050505050565b611a4561058560f41b610522565b6001600160a01b031663293c6a3a83836040518363ffffffff1660e01b8152600401611a72929190612a79565b600060405180830381600087803b158015611a8c57600080fd5b505af115801561134b573d6000803e3d6000fd5b5490565b60405163a9059cbb60e01b8082526001600160a01b0384166004830152602482018390529060008060448382895af1611ae1573d6000803e3d6000fd5b50611aeb84611d11565b6110525760405162461bcd60e51b8152600401610ad590612bc0565b6000611b186211105560ea1b610522565b905060008260a0015183608001518460600151611b359190612d9a565b611b3f9190612d9a565b9050611bcf83600001513083856001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611b8657600080fd5b505af1158015611b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbe9190612144565b6001600160a01b0316929190611db8565b60208301516060840151604051636203b43b60e11b81526001600160a01b0385169263c407687692611c03926004016129ec565b600060405180830381600087803b158015611c1d57600080fd5b505af1158015611c31573d6000803e3d6000fd5b50505060408085015160808601519151636203b43b60e11b81526001600160a01b038616935063c407687692611c6a92916004016129ec565b600060405180830381600087803b158015611c8457600080fd5b505af1158015611c98573d6000803e3d6000fd5b5050505060a0830151604051636203b43b60e11b81526001600160a01b0384169163c407687691611cce916000916004016129ec565b600060405180830381600087803b158015611ce857600080fd5b505af1158015610b8d573d6000803e3d6000fd5b6115bc6001600160a01b038216833086611db8565b6000611d35565b62461bcd60e51b6000526020600452806024528160445260646000fd5b3d8015611d745760208114611da557611d6f7f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f611d18565b611db2565b823b611d9c57611d9c7311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014611d18565b60019150611db2565b3d6000803e600051151591505b50919050565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1611dfd573d6000803e3d6000fd5b50611e0785611d11565b611e235760405162461bcd60e51b8152600401610ad590612b54565b5050505050565b604051806101c001604052806060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001611e8b611ec0565b815260200160008152600060209091015290565b60405180606001604052806000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b80516105a781612e3c565b600082601f830112611ef5578081fd5b8151602067ffffffffffffffff821115611f1157611f11612e26565b808202611f1f828201612d48565b838152828101908684018388018501891015611f39578687fd5b8693505b85841015611f5b578051835260019390930192918401918401611f3d565b50979650505050505050565b805180151581146105a757600080fd5b8051600581106105a757600080fd5b600082601f830112611f96578081fd5b8135611fa9611fa482612d72565b612d48565b818152846020838601011115611fbd578283fd5b816020850160208301379081016020019190915292915050565b600082601f830112611fe7578081fd5b8151611ff5611fa482612d72565b818152846020838601011115612009578283fd5b6103b7826020830160208701612dc9565b60006060828403121561202b578081fd5b6040516060810181811067ffffffffffffffff8211171561204e5761204e612e26565b80604052508091508251815260208301516020820152604083015160408201525092915050565b600060808284031215612086578081fd5b6040516080810181811067ffffffffffffffff821117156120a9576120a9612e26565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b6000604082840312156120eb578081fd5b6040516040810181811067ffffffffffffffff8211171561210e5761210e612e26565b604052825181526020928301519281019290925250919050565b600060208284031215612139578081fd5b813561079081612e3c565b600060208284031215612155578081fd5b815161079081612e3c565b60008060408385031215612172578081fd5b825161217d81612e3c565b602084015190925061218e81612e3c565b809150509250929050565b600080604083850312156121ab578182fd5b82356121b681612e3c565b9150602083013561218e81612e3c565b6000806000606084860312156121da578081fd5b83356121e581612e3c565b92506020840135915060408401356121fc81612e3c565b809150509250925092565b600060208284031215612218578081fd5b61079082611f67565b600080600060808486031215612235578081fd5b61223e84611f67565b9250602084015167ffffffffffffffff811115612259578182fd5b61226586828701611fd7565b92505061227585604086016120da565b90509250925092565b60006020828403121561228f578081fd5b5035919050565b600080604083850312156122a8578182fd5b82359150602083013561218e81612e3c565b6000606082840312156122cb578081fd5b610790838361201a565b6000602082840312156122e6578081fd5b813567ffffffffffffffff808211156122fd578283fd5b9083019060a08286031215612310578283fd5b60405160a08101818110838211171561232b5761232b612e26565b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013582811115612363578485fd5b61236f87828601611f86565b60808301525095945050505050565b60006020828403121561238f578081fd5b815167ffffffffffffffff808211156123a6578283fd5b908301906101e082860312156123ba578283fd5b6101c06123c681612d48565b8351838111156123d4578586fd5b6123e088828701611fd7565b8252506020840151838111156123f4578586fd5b61240088828701611fd7565b60208301525060408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152610100808501518183015250610120808501518183015250610140808501518481111561246d578687fd5b61247989828801611ee5565b8284015250506101609250612490878486016120da565b838201526101a092506124a4838501611f77565b6101808201526124b5828501611eda565b9281019290925250949350505050565b6000608082840312156124d6578081fd5b6107908383612075565b60008060a083850312156124f2578182fd5b6124fc8484612075565b9150608083015190509250929050565b60006020828403121561251d578081fd5b5051919050565b600060408284031215612535578081fd5b61079083836120da565b600060208284031215612550578081fd5b815167ffffffffffffffff80821115612567578283fd5b81840191506101e080838703121561257d578384fd5b61258681612d48565b9050825182811115612596578485fd5b6125a287828601611fd7565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526125ed60e08401611eda565b60e08201526101008084015183811115612605578586fd5b61261188828701611ee5565b828401525050610120808401518381111561262a578586fd5b61263688828701611ee5565b828401525050610140808401518381111561264f578586fd5b61265b88828701611ee5565b8284015250506101608084015183811115612674578586fd5b61268088828701611ee5565b8284015250506101808084015183811115612699578586fd5b6126a588828701611ee5565b8284015250506101a080840151838111156126be578586fd5b6126ca88828701611ee5565b8284015250506101c080840151838111156126e3578586fd5b6126ef88828701611ee5565b918301919091525095945050505050565b60008060408385031215612712578182fd5b82519150602083015161218e81612e3c565b60008060408385031215612736578182fd5b50508035926020909101359150565b600080600060608486031215612759578081fd5b833592506020840135915060408401356121fc81612e3c565b600080600060608486031215612786578081fd5b8351925060208401519150604084015190509250925092565b60008060008060008060c087890312156127b7578384fd5b865195506020870151945060408701519350606087015192506080870151915060a08701516127e581612e3c565b809150509295509295509295565b6000815180845260208085019450808401835b8381101561282257815187529582019590820190600101612806565b509495945050505050565b6001600160a01b03169052565b6005811061285857634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452612874816020860160208601612dc9565b601f01601f19169290920160200192915050565b8051825260208082015190830152604090810151910152565b60006101e082518185526128b78286018261285c565b915050602083015184820360208601526128d1828261285c565b91505060408301516040850152606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401518583038287015261294083826127f3565b9250505061016080840151612957828701826129af565b50506101808301516101a061296e8187018361283a565b84015190506129816101c086018261282d565b509392505050565b805182526020810151602083015260408101516040830152606081015160608301525050565b80518252602090810151910152565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612a5857603f19888603018452612a468583516128a1565b94509285019290850190600101612a2a565b5092979650505050505050565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b600060208252610790602083018461285c565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b60208082526019908201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526015908201527423a83b191d103330b4b632b2103a3930b739b332b960591b604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b6060810161091e8284612888565b60006020825261079060208301846128a1565b60a08101612c558285612989565b8260808301529392505050565b918252602082015260400190565b6000848252836020830152606060408301528251610180806060850152612c9b6101e085018361285c565b91506020850151605f19858403016080860152612cb8838261285c565b9250506040850151612ccd60a0860182612888565b506060850151612ce1610100860182612989565b506080850151612cf3828601826129af565b505060a093909301516001600160a01b03166101c092909201919091525092915050565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715612d6a57612d6a612e26565b604052919050565b600067ffffffffffffffff821115612d8c57612d8c612e26565b50601f01601f191660200190565b60008219821115612dad57612dad612e10565b500190565b600082821015612dc457612dc4612e10565b500390565b60005b83811015612de4578181015183820152602001612dcc565b838111156110525750506000910152565b6000600019821415612e0957612e09612e10565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461139057600080fdfea26469706673582212208fe3c36c9c45777e91ce62445b727a1a1db459f5db3fb6217b37f660fd36d08c64736f6c63430008000033";

type OrderConstructorParams =
  | [linkLibraryAddresses: OrderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Order__factory extends ContractFactory {
  constructor(...args: OrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Order__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: OrderLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1e813abb9dfd13063c9f915940bdcd3e67\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Order> {
    return super.deploy(provider, overrides || {}) as Promise<Order>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Order {
    return super.attach(address) as Order;
  }
  override connect(signer: Signer): Order__factory {
    return super.connect(signer) as Order__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderInterface {
    return new utils.Interface(_abi) as OrderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Order {
    return new Contract(address, _abi, signerOrProvider) as Order;
  }
}

export interface OrderLibraryAddresses {
  ["contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
