/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Order, OrderInterface } from "../../../protocol/order/Order";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "autoRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
    ],
    name: "confirmOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "packageId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
        ],
        internalType: "struct InputTypes.CreateOrderInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "dispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "getInvitersByAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disputed",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buyerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sellerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.Invoice",
            name: "invoice",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disputed",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buyerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sellerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.Invoice",
            name: "invoice",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isCallerUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "payOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "refundOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b5060405162003129380380620031298339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b612f7b80620001ae6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063d2fbd0ed11610097578063e5b5019a11610071578063e5b5019a14610342578063f2fde38b1461034a578063f38aa74d1461035d578063fa1021c4146103705761018e565b8063d2fbd0ed14610309578063daea85c51461031c578063db46f68a1461032f5761018e565b80638da5cb5b146102a2578063985fadc8146102aa578063b817bcf7146102bd578063bebf138f146102d0578063c9d5a94c146102e3578063cfd8d6c0146102f65761018e565b806319872f761161014b57806342b50a7a1161012557806342b50a7a14610252578063715018a61461027257806379a558e71461027a5780638d0a5fbb1461028d5761018e565b806319872f76146102165780633a16c97d1461022957806341c0e1b51461024a5761018e565b80630542975c146101935780630a2f497a146101b157806311e0c07b146101c6578063163dd8bb146101e65780631848effa146101fb57806318f3851814610203575b600080fd5b61019b610383565b6040516101a89190612ab1565b60405180910390f35b6101c46101bf3660046128e1565b610392565b005b6101d96101d43660046128b4565b610546565b6040516101a89190612b58565b6101ee6105cf565b6040516101a89190612af8565b61019b61069b565b6101d9610211366004612293565b6106aa565b61019b610224366004612376565b610732565b61023c610237366004612266565b6107bc565b6040516101a8929190612ac5565b6101c4610845565b610265610260366004612376565b61087b565b6040516101a89190612d3a565b6101c46109a7565b6101d96102883660046121f5565b6109bb565b610295610a71565b6040516101a89190612b63565b61019b610a84565b6101d96102b836600461238e565b610a93565b6101d96102cb3660046121f5565b610ada565b61023c6102de366004612376565b610b91565b6101c46102f1366004612893565b610c27565b6101c46103043660046121f5565b610d43565b6101c4610317366004612893565b610e2d565b6101c461032a3660046121f5565b610fef565b6101c461033d36600461240d565b6110c5565b6102956113c4565b6101c46103583660046121f5565b6113ca565b6101c461036b366004612893565b611404565b6101c461037e3660046128e1565b6114d1565b6004546001600160a01b031690565b600061039c611655565b905060006103b0632aa9a2a960e11b610732565b905060006103c7664449535055544560c81b610732565b90506103d48386846106aa565b806103e557506103e58385846106aa565b60405180604001604052806002815260200161323560f01b815250906104275760405162461bcd60e51b815260040161041e9190612b83565b60405180910390fd5b50604051634ac8a52960e01b81526000906001600160a01b03831690634ac8a52990610457908a90600401612b63565b602060405180830381600087803b15801561047157600080fd5b505af1158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190612696565b60405163681caa2160e01b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063681caa21906104ec908a9089908b908790600290600401612e52565b60206040518083038186803b15801561050457600080fd5b505af4158015610518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053c91906122d4565b5050505050505050565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906105779087908790600401612d4d565b60206040518083038186803b15801561058f57600080fd5b505afa1580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c791906122d4565b949350505050565b606060006105db610a71565b905060008167ffffffffffffffff81111561060657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561063f57816020015b61062c611f0c565b8152602001906001900390816106245790505b50905060005b82811015610694576106568161087b565b82828151811061067657634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061068c90612ef3565b915050610645565b5091505090565b6004546001600160a01b031681565b600082826001600160a01b031663dff3b497866040518263ffffffff1660e01b81526004016106d99190612ab1565b60206040518083038186803b1580156106f157600080fd5b505afa158015610705573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107299190612696565b14949350505050565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f769161076491869101612b63565b60206040518083038186803b15801561077c57600080fd5b505afa158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b49190612211565b90505b919050565b600080826001600160a01b031663dd06ef02856040518263ffffffff1660e01b81526004016107eb9190612ab1565b604080518083038186803b15801561080257600080fd5b505afa158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a919061222d565b915091509250929050565b6004546001600160a01b0316331461086d57634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b610883611f0c565b60405163b54a2e1960e01b815260009073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063b54a2e19906108c0908690600290600401612d4d565b60206040518083038186803b1580156108d857600080fd5b505af41580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190612696565b6040516302738e1760e61b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__90639ce385c09061094c9084908790600401612d4d565b60006040518083038186803b15801561096457600080fd5b505af4158015610978573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109a09190810190612575565b9392505050565b6109af611659565b6109b96000611698565b565b60006109cf64212aaca2a960d91b83610a93565b80156107b45750426109e7632aa9a2a960e11b610732565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610a129190612ab1565b60006040518083038186803b158015610a2a57600080fd5b505afa158015610a3e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a6691908101906126ae565b604001511192915050565b600080610a7e60006116ea565b91505090565b6003546001600160a01b031690565b600080610aad6a20a1a62fa6a0a720a3a2a960a91b610732565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b8152600401610577929190612b6c565b6000610aef6529a2a62622a960d11b83610a93565b80156107b4575042610b07632aa9a2a960e11b610732565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610b329190612ab1565b60006040518083038186803b158015610b4a57600080fd5b505afa158015610b5e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b8691908101906126ae565b608001511192915050565b600080610ba4632aa9a2a960e11b610732565b6001600160a01b031663bebf138f846040518263ffffffff1660e01b8152600401610bcf9190612b63565b604080518083038186803b158015610be657600080fd5b505afa158015610bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1e919061222d565b91509150915091565b6000610c31611655565b90506000610c45632aa9a2a960e11b610732565b9050610c528284836106aa565b60405180604001604052806002815260200161032360f41b81525090610c8b5760405162461bcd60e51b815260040161041e9190612b83565b506000610c966116f5565b805160405163937bb08360e01b8152919250600091829173__$1e813abb9dfd13063c9f915940bdcd3e67$__9163937bb08391610cdc918b918b91600290600401612e37565b604080518083038186803b158015610cf357600080fd5b505af4158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b919061286f565b91509150610d3a828683611793565b50505050505050565b6001600160a01b0381161580610d6357506004546001600160a01b031633145b80610def5750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dac57600080fd5b505afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de49190612211565b6001600160a01b0316145b610e0b5760405162461bcd60e51b815260040161041e90612bdc565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610e37611655565b90506000610e4b632aa9a2a960e11b610732565b9050610e588284836106aa565b60405180604001604052806002815260200161032360f41b81525090610e915760405162461bcd60e51b815260040161041e9190612b83565b50600080600073__$1e813abb9dfd13063c9f915940bdcd3e67$__63679173cc888860026040518463ffffffff1660e01b8152600401610ed393929190612e21565b60e06040518083038186803b158015610eeb57600080fd5b505af4158015610eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f239190612540565b9250925092506000846001600160a01b0316638d80c922846040518263ffffffff1660e01b8152600401610f579190612b63565b60206040518083038186803b158015610f6f57600080fd5b505afa158015610f83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa79190612211565b90506000610fb36117ac565b9050610fc58560200151888389611844565b610fd58560400151838389611844565b610fe483838760800151611793565b505050505050505050565b6d282927aa27a1a7a62fa0a226a4a760911b61100d816102b8611655565b6110295760405162461bcd60e51b815260040161041e90612ce2565b600061103a6211105560ea1b610732565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b39161106d91859190600401612adf565b602060405180830381600087803b15801561108757600080fd5b505af115801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bf91906122d4565b50505050565b6110d0610288611655565b60405180604001604052806002815260200161313760f01b815250906111095760405162461bcd60e51b815260040161041e9190612b83565b50600061111c632aa9a2a960e11b610732565b90506111318260000151836040015183610546565b60405180604001604052806002815260200161062760f31b8152509061116a5760405162461bcd60e51b815260040161041e9190612b83565b5081516040516346c0649160e11b81526111eb916001600160a01b03841691638d80c9229161119b91600401612b63565b60206040518083038186803b1580156111b357600080fd5b505afa1580156111c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190612211565b60405180604001604052806002815260200161189b60f11b815250906112245760405162461bcd60e51b815260040161041e9190612b83565b50600061122f611655565b9050600061123b610a71565b905060008061124f6247494760e81b610732565b6001600160a01b031663a1ba444d84886040015189606001516040518463ffffffff1660e01b815260040161128693929190612e21565b600060405180830381600087803b1580156112a057600080fd5b505af11580156112b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112dc91908101906122ee565b9250925050846001600160a01b031663982714b68760200151856040518363ffffffff1660e01b8152600401611313929190612d4d565b602060405180830381600087803b15801561132d57600080fd5b505af1158015611341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136591906122d4565b506113a38483836000015160405180608001604052808881526020018b6020015181526020018b6000015181526020018b604001518152508a611988565b6113bc6b21a922a0aa22afa7a92222a960a11b85611c0f565b505050505050565b60055481565b6113d2611659565b6001600160a01b0381166113f85760405162461bcd60e51b815260040161041e90612b96565b61140181611698565b50565b600061140e611655565b90506000611422632aa9a2a960e11b610732565b905061142f8284836106aa565b60405180604001604052806002815260200161313960f01b815250906114685760405162461bcd60e51b815260040161041e9190612b83565b50604051634d52915760e01b815273__$1e813abb9dfd13063c9f915940bdcd3e67$__90634d529157906114a59087908790600290600401612e21565b60006040518083038186803b1580156114bd57600080fd5b505af415801561053c573d6000803e3d6000fd5b60006114db611655565b905060006114ef632aa9a2a960e11b610732565b90506000816001600160a01b0316638d80c922856040518263ffffffff1660e01b815260040161151f9190612b63565b60206040518083038186803b15801561153757600080fd5b505afa15801561154b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156f9190612211565b905061157c8386846106aa565b60405180604001604052806002815260200161313960f01b815250906115b55760405162461bcd60e51b815260040161041e9190612b83565b5060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63146cc32c89898960026040518563ffffffff1660e01b81526004016115f79493929190612e37565b604080518083038186803b15801561160e57600080fd5b505af4158015611622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611646919061286f565b9150915061053c828483611793565b3390565b611661611655565b6001600160a01b0316611672610a84565b6001600160a01b0316146109b95760405162461bcd60e51b815260040161041e90612c7e565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006107b482611c78565b6116fd611f6d565b61171e74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610732565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b15801561175657600080fd5b505afa15801561176a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178e91906124b6565b905090565b6117a76001600160a01b0382168385611c7c565b505050565b6117b4611f9c565b6117d574282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610732565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561180c57600080fd5b505afa158015611820573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178e9190612525565b60008061185185846107bc565b91509150600073__$30e2c0763bc74e29ca837c0a99f7d1b333$__63013a9d5b60405180606001604052808a81526020018860000151815260200188602001518152506040518263ffffffff1660e01b81526004016118b09190612d19565b60606040518083038186803b1580156118c857600080fd5b505af41580156118dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190091906123b2565b905060006119136211105560ea1b610732565b90506119726040518060c00160405280306001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020018460000151815260200184602001518152602001846040015181525082611cdf565b61053c682820acafa7a92222a960b91b88611c0f565b60006119ab74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610732565b90506000816001600160a01b031663d618cc646040518163ffffffff1660e01b8152600401604080518083038186803b1580156119e757600080fd5b505afa1580156119fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1f9190612525565b90506000826001600160a01b0316633388aed96040518163ffffffff1660e01b8152600401604080518083038186803b158015611a5b57600080fd5b505afa158015611a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a939190612525565b90506000611aa66211105560ea1b610732565b6001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ae057600080fd5b505af1158015611af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b189190612211565b9050600073__$1e813abb9dfd13063c9f915940bdcd3e67$";

type OrderConstructorParams =
  | [linkLibraryAddresses: OrderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Order__factory extends ContractFactory {
  constructor(...args: OrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Order__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: OrderLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1e813abb9dfd13063c9f915940bdcd3e67\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Order> {
    return super.deploy(provider, overrides || {}) as Promise<Order>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Order {
    return super.attach(address) as Order;
  }
  override connect(signer: Signer): Order__factory {
    return super.connect(signer) as Order__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderInterface {
    return new utils.Interface(_abi) as OrderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Order {
    return new Contract(address, _abi, signerOrProvider) as Order;
  }
}

export interface OrderLibraryAddresses {
  ["contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
