/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Order, OrderInterface } from "../../../protocol/order/Order";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "autoRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
    ],
    name: "confirmOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "packageId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
        ],
        internalType: "struct InputTypes.CreateOrderInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "dispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "getInvitersByAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disputed",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buyerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sellerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.Invoice",
            name: "invoice",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "brief",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gigId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "reviewIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disputed",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buyerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sellerFees",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.Invoice",
            name: "invoice",
            type: "tuple",
          },
          {
            internalType: "enum DataTypes.OrderState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OutputTypes.OrderOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "getUserIdByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isCallerUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "payOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
    ],
    name: "refundOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b5060405162003258380380620032588339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b6130aa80620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80638d0a5fbb116100f9578063d2fbd0ed11610097578063e5b5019a11610071578063e5b5019a14610370578063f2fde38b14610378578063f38aa74d1461038b578063fa1021c41461039e576101a9565b8063d2fbd0ed14610337578063daea85c51461034a578063db46f68a1461035d576101a9565b8063b817bcf7116100d3578063b817bcf7146102eb578063bebf138f146102fe578063c9d5a94c14610311578063cfd8d6c014610324576101a9565b80638d0a5fbb146102c85780638da5cb5b146102d0578063985fadc8146102d8576101a9565b806319872f761161016657806342b50a7a1161014057806342b50a7a1461026d57806366e5e0b31461028d578063715018a6146102ad57806379a558e7146102b5576101a9565b806319872f76146102315780633a16c97d1461024457806341c0e1b514610265576101a9565b80630542975c146101ae5780630a2f497a146101cc57806311e0c07b146101e1578063163dd8bb146102015780631848effa1461021657806318f385181461021e575b600080fd5b6101b66103b1565b6040516101c39190612be0565b60405180910390f35b6101df6101da366004612a10565b6103c0565b005b6101f46101ef3660046129e3565b6105f7565b6040516101c39190612c87565b610209610680565b6040516101c39190612c27565b6101b661074c565b6101f461022c3660046123c2565b61075b565b6101b661023f3660046124a5565b6107e3565b610257610252366004612395565b61086d565b6040516101c3929190612bf4565b6101df6108f6565b61028061027b3660046124a5565b61092c565b6040516101c39190612e69565b6102a061029b366004612395565b610a58565b6040516101c39190612c92565b6101df610ad7565b6101f46102c3366004612324565b610aeb565b6102a0610ba1565b6101b6610bb4565b6101f46102e63660046124bd565b610bc3565b6101f46102f9366004612324565b610c0a565b61025761030c3660046124a5565b610cc1565b6101df61031f3660046129c2565b610d57565b6101df610332366004612324565b610e73565b6101df6103453660046129c2565b610f5d565b6101df610358366004612324565b611114565b6101df61036b36600461253c565b6111ea565b6102a06114e9565b6101df610386366004612324565b6114ef565b6101df6103993660046129c2565b611529565b6101df6103ac366004612a10565b611600565b6004546001600160a01b031690565b60006103ca611784565b905060006103de632aa9a2a960e11b6107e3565b905060006103f5664449535055544560c81b6107e3565b90506000826001600160a01b031663dff3b497856040518263ffffffff1660e01b81526004016104259190612be0565b60206040518083038186803b15801561043d57600080fd5b505afa158015610451573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047591906127c5565b90508581148061048457508481145b60405180604001604052806002815260200161323560f01b815250906104c65760405162461bcd60e51b81526004016104bd9190612cb2565b60405180910390fd5b506000826001600160a01b031663c7fb42bb89848a86146104e7578a6104e9565b895b6040518463ffffffff1660e01b815260040161050793929190612f50565b602060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055991906127c5565b60405163681caa2160e01b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063681caa219061059c908b908a908c908790600290600401612f81565b60206040518083038186803b1580156105b457600080fd5b505af41580156105c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ec9190612403565b505050505050505050565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906106289087908790600401612e7c565b60206040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190612403565b949350505050565b6060600061068c610ba1565b905060008167ffffffffffffffff8111156106b757634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106f057816020015b6106dd61203b565b8152602001906001900390816106d55790505b50905060005b82811015610745576107078161092c565b82828151811061072757634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061073d90613022565b9150506106f6565b5091505090565b6004546001600160a01b031681565b600082826001600160a01b031663dff3b497866040518263ffffffff1660e01b815260040161078a9190612be0565b60206040518083038186803b1580156107a257600080fd5b505afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107da91906127c5565b14949350505050565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f769161081591869101612c92565b60206040518083038186803b15801561082d57600080fd5b505afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190612340565b90505b919050565b600080826001600160a01b031663dd06ef02856040518263ffffffff1660e01b815260040161089c9190612be0565b604080518083038186803b1580156108b357600080fd5b505afa1580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb919061235c565b915091509250929050565b6004546001600160a01b0316331461091e57634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b61093461203b565b60405163b54a2e1960e01b815260009073__$1e813abb9dfd13063c9f915940bdcd3e67$__9063b54a2e1990610971908690600290600401612e7c565b60206040518083038186803b15801561098957600080fd5b505af415801561099d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c191906127c5565b6040516302738e1760e61b815290915073__$1e813abb9dfd13063c9f915940bdcd3e67$__90639ce385c0906109fd9084908790600401612e7c565b60006040518083038186803b158015610a1557600080fd5b505af4158015610a29573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a5191908101906126a4565b9392505050565b60405163dff3b49760e01b81526000906001600160a01b0383169063dff3b49790610a87908690600401612be0565b60206040518083038186803b158015610a9f57600080fd5b505afa158015610ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5191906127c5565b610adf611788565b610ae960006117c7565b565b6000610aff64212aaca2a960d91b83610bc3565b8015610865575042610b17632aa9a2a960e11b6107e3565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610b429190612be0565b60006040518083038186803b158015610b5a57600080fd5b505afa158015610b6e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b9691908101906127dd565b604001511192915050565b600080610bae6000611819565b91505090565b6003546001600160a01b031690565b600080610bdd6a20a1a62fa6a0a720a3a2a960a91b6107e3565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b8152600401610628929190612c9b565b6000610c1f6529a2a62622a960d11b83610bc3565b8015610865575042610c37632aa9a2a960e11b6107e3565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610c629190612be0565b60006040518083038186803b158015610c7a57600080fd5b505afa158015610c8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb691908101906127dd565b608001511192915050565b600080610cd4632aa9a2a960e11b6107e3565b6001600160a01b031663bebf138f846040518263ffffffff1660e01b8152600401610cff9190612c92565b604080518083038186803b158015610d1657600080fd5b505afa158015610d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4e919061235c565b91509150915091565b6000610d61611784565b90506000610d75632aa9a2a960e11b6107e3565b9050610d8282848361075b565b60405180604001604052806002815260200161032360f41b81525090610dbb5760405162461bcd60e51b81526004016104bd9190612cb2565b506000610dc6611824565b805160405163937bb08360e01b8152919250600091829173__$1e813abb9dfd13063c9f915940bdcd3e67$__9163937bb08391610e0c918b918b91600290600401612f66565b604080518083038186803b158015610e2357600080fd5b505af4158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b919061299e565b91509150610e6a8286836118c2565b50505050505050565b6001600160a01b0381161580610e9357506004546001600160a01b031633145b80610f1f5750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610edc57600080fd5b505afa158015610ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f149190612340565b6001600160a01b0316145b610f3b5760405162461bcd60e51b81526004016104bd90612d0b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610f67611784565b90506000610f7b632aa9a2a960e11b6107e3565b9050610f8882848361075b565b60405180604001604052806002815260200161032360f41b81525090610fc15760405162461bcd60e51b81526004016104bd9190612cb2565b50600080600073__$1e813abb9dfd13063c9f915940bdcd3e67$__63679173cc888860026040518463ffffffff1660e01b815260040161100393929190612f50565b60e06040518083038186803b15801561101b57600080fd5b505af415801561102f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611053919061266f565b9250925092506000846001600160a01b0316638d80c922846040518263ffffffff1660e01b81526004016110879190612c92565b60206040518083038186803b15801561109f57600080fd5b505afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190612340565b905060006110e36118db565b90506110f58560200151888389611973565b6111058560400151838389611973565b6105ec838387608001516118c2565b6d282927aa27a1a7a62fa0a226a4a760911b611132816102e6611784565b61114e5760405162461bcd60e51b81526004016104bd90612e11565b600061115f6211105560ea1b6107e3565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b39161119291859190600401612c0e565b602060405180830381600087803b1580156111ac57600080fd5b505af11580156111c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e49190612403565b50505050565b6111f56102c3611784565b60405180604001604052806002815260200161313760f01b8152509061122e5760405162461bcd60e51b81526004016104bd9190612cb2565b506000611241632aa9a2a960e11b6107e3565b905061125682600001518360400151836105f7565b60405180604001604052806002815260200161062760f31b8152509061128f5760405162461bcd60e51b81526004016104bd9190612cb2565b5081516040516346c0649160e11b8152611310916001600160a01b03841691638d80c922916112c091600401612c92565b60206040518083038186803b1580156112d857600080fd5b505afa1580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190612340565b60405180604001604052806002815260200161189b60f11b815250906113495760405162461bcd60e51b81526004016104bd9190612cb2565b506000611354611784565b90506000611360610ba1565b90506000806113746247494760e81b6107e3565b6001600160a01b031663a1ba444d84886040015189606001516040518463ffffffff1660e01b81526004016113ab93929190612f50565b600060405180830381600087803b1580156113c557600080fd5b505af11580156113d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611401919081019061241d565b9250925050846001600160a01b031663982714b68760200151856040518363ffffffff1660e01b8152600401611438929190612e7c565b602060405180830381600087803b15801561145257600080fd5b505af1158015611466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148a9190612403565b506114c88483836000015160405180608001604052808881526020018b6020015181526020018b6000015181526020018b604001518152508a611ab7565b6114e16b21a922a0aa22afa7a92222a960a11b85611d3e565b505050505050565b60055481565b6114f7611788565b6001600160a01b03811661151d5760405162461bcd60e51b81526004016104bd90612cc5565b611526816117c7565b50565b6000611533611784565b90506000611547632aa9a2a960e11b6107e3565b905061155482848361075b565b60405180604001604052806002815260200161313960f01b8152509061158d5760405162461bcd60e51b81526004016104bd9190612cb2565b50604051634d52915760e01b815273__$1e813abb9dfd13063c9f915940bdcd3e67$__90634d529157906115ca9087908790600290600401612f50565b60006040518083038186803b1580156115e257600080fd5b505af41580156115f6573d6000803e3d6000fd5b5050505050505050565b600061160a611784565b9050600061161e632aa9a2a960e11b6107e3565b90506000816001600160a01b0316638d80c922856040518263ffffffff1660e01b815260040161164e9190612c92565b60206040518083038186803b15801561166657600080fd5b505afa15801561167a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169e9190612340565b90506116ab83868461075b565b60405180604001604052806002815260200161313960f01b815250906116e45760405162461bcd60e51b81526004016104bd9190612cb2565b5060008073__$1e813abb9dfd13063c9f915940bdcd3e67$__63146cc32c89898960026040518563ffffffff1660e01b81526004016117269493929190612f66565b604080518083038186803b15801561173d57600080fd5b505af4158015611751573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611775919061299e565b915091506115f68284836118c2565b3390565b611790611784565b6001600160a01b03166117a1610bb4565b6001600160a01b031614610ae95760405162461bcd60e51b81526004016104bd90612dad565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061086582611da7565b61182c61209c565b61184d74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6107e3565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b15801561188557600080fd5b505afa158015611899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bd91906125e5565b905090565b6118d66001600160a01b0382168385611dab565b505050565b6118e36120cb565b61190474282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6107e3565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561193b57600080fd5b505afa15801561194f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bd9190612654565b600080611980858461086d565b91509150600073__$30e2c0763bc74e29ca837c0a99f7d1b333$__63013a9d5b60405180606001604052808a81526020018860000151815260200188602001518152506040518263ffffffff1660e01b81526004016119df9190612e48565b60606040518083038186803b1580156119f757600080fd5b505af4158015611a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2f91906124e1565b90506000611a426211105560ea1b6107e3565b9050611aa16040518060c00160405280306001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020018460000151815260200184602001518152602001846040015181525082611e0e565b6115f6682820acafa7a92222a960b91b88611d3e565b6000611ada74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6107e3565b90506000816001600160a01b031663d618cc646040518163ffffffff1660e01b8152600401604080518083038186803b158015611b1657600080fd5b505afa158015611b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b4e9190612654565b90506000826001600160a01b0316633388aed96040518163ffffffff1660e01b8152600401604080518083038186803b158015611b8a57600080fd5b505afa158015611b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc29190612654565b90506000611bd56211105560ea1b6107e3565b6001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611c0f57600080fd5b505af1158015611c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c479190612340565b9050600073__$1e813abb9dfd13063c9f915940bdcd3e67$";

type OrderConstructorParams =
  | [linkLibraryAddresses: OrderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Order__factory extends ContractFactory {
  constructor(...args: OrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Order__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: OrderLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1e813abb9dfd13063c9f915940bdcd3e67\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Order> {
    return super.deploy(provider, overrides || {}) as Promise<Order>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Order {
    return super.attach(address) as Order;
  }
  override connect(signer: Signer): Order__factory {
    return super.connect(signer) as Order__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderInterface {
    return new utils.Interface(_abi) as OrderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Order {
    return new Contract(address, _abi, signerOrProvider) as Order;
  }
}

export interface OrderLibraryAddresses {
  ["contracts/protocol/libraries/logics/OrderLogic.sol:OrderLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
