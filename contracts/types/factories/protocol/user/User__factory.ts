/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { User, UserInterface } from "../../../protocol/user/User";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DataTypes.User",
        name: "userData",
        type: "tuple",
      },
    ],
    name: "UserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DataTypes.User",
        name: "userData",
        type: "tuple",
      },
    ],
    name: "UserEdited",
    type: "event",
  },
  {
    inputs: [],
    name: "ACL_ADMIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ACL_MANAGER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BLACKLIST_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BUYER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DATA_PROVIDER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JUDGE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORDER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_CONFIGURATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SELLER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WHITELIST_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "inviterId",
        type: "uint256",
      },
    ],
    name: "createUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "datCurrency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getAddressById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getInvitersByUserAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pubKey",
        type: "address",
      },
    ],
    name: "getUserByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getUserById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.User[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196008553480156200001757600080fd5b506040516200215f3803806200215f8339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600780546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b611fb180620001ae6000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80638d80c92211610125578063c396cbf4116100ad578063dd06ef021161007c578063dd06ef02146103e1578063e0e47588146103f4578063e5b5019a146103fc578063f2fde38b14610404578063fbfb816b146104175761021c565b8063c396cbf4146103ab578063cfd8d6c0146103b3578063daea85c5146103c6578063dbe4613d146103d95761021c565b8063a4a1e263116100f4578063a4a1e2631461035d578063a8a652eb14610365578063aee2bc861461036d578063b852204314610375578063bebf138f1461038a5761021c565b80638d80c922146103275780638da5cb5b1461033a5780639359021b14610342578063985fadc81461034a5761021c565b80635e209249116101a8578063742b128211610177578063742b1282146102e757806379a558e7146102ef5780637a01a1da1461030f5780637a997ab71461031757806381e167cf1461031f5761021c565b80635e209249146102a457806369c212f6146102ac5780636ed6da9e146102cc578063715018a6146102df5761021c565b80631848effa116101ef5780631848effa1461026457806319872f761461026c57806319afe4631461027f57806341c0e1b5146102945780634d5e07fb1461029c5761021c565b80630542975c146102215780630ed0a6611461023f578063121ef24314610247578063128fdb481461025c575b600080fd5b61022961041f565b6040516102369190611a27565b60405180910390f35b61022961042e565b61025a61025536600461174e565b6104be565b005b61025a6106ba565b6102296108b9565b61022961027a366004611712565b6108c8565b61028761094f565b6040516102369190611afd565b61025a610964565b61028761099a565b6102876109a6565b6102bf6102ba366004611681565b6109b6565b6040516102369190611d11565b6102bf6102da366004611712565b610a97565b61025a610ae8565b610287610afc565b6103026102fd366004611681565b610b18565b6040516102369190611af2565b610287610bce565b610287610bda565b610287610bef565b610229610335366004611712565b610bfa565b610229610c0e565b610287610c1d565b61030261035836600461172a565b610c27565b610287610cc6565b610287610cd9565b610287610ceb565b61037d610d00565b6040516102369190611a92565b61039d610398366004611712565b610dcc565b604051610236929190611a3b565b610287610e73565b61025a6103c1366004611681565b610e87565b61025a6103d4366004611681565b610f71565b610287611041565b61039d6103ef366004611681565b61104e565b61028761105c565b610287611068565b61025a610412366004611681565b61106e565b6102876110a8565b6007546001600160a01b031690565b6000806104406211105560ea1b6108c8565b90506000816001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561047f57600080fd5b505af1158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b7919061169d565b9250505090565b60006104c8610cc6565b905080156104d8578082106104db565b81155b60405180604001604052806002815260200161031360f41b8152509061051d5760405162461bcd60e51b81526004016105149190611b1d565b60405180910390fd5b506000819050600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__63e53bfb9a60006002600560405180608001604052808881526020018b81526020018a815260200161056a6110b2565b6001600160a01b03168152506040518563ffffffff1660e01b81526004016105959493929190611c4d565b60206040518083038186803b1580156105ad57600080fd5b505af41580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e591906116f2565b9050808015610606575060016105f9610cc6565b6106039190611ea1565b82145b604051806040016040528060018152602001600760fb1b8152509061063e5760405162461bcd60e51b81526004016105149190611b1d565b506106476110b2565b6001600160a01b0316827f69be636c889bf05d3e7b66504b29856d5fbbabcf921949244bd228b4477e6c9e6005600061067e6110b2565b6001600160a01b03166001600160a01b031681526020019081526020016000206040516106ab9190611d74565b60405180910390a35050505050565b60006106c46110b2565b905060006106da64212aaca2a960d91b83610c27565b90508015604051806040016040528060018152602001603960f81b815250906107165760405162461bcd60e51b81526004016105149190611b1d565b50600061072b64212aaca2a960d91b846110b6565b905061073f64212aaca2a960d91b846111e2565b60408051606080820183526001600160a01b038616825283830180516020908101519084015251015160ff16818301529051633bb7b3f960e01b815260009173__$2fdc6bd74422c331d4350e08f48e4d7efc$__91633bb7b3f9916107af91600291600591879190600401611cb2565b60206040518083038186803b1580156107c757600080fd5b505af41580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff91906116f2565b90508060405180604001604052806002815260200161313160f01b8152509061083b5760405162461bcd60e51b81526004016105149190611b1d565b506108b36040518060c001604052806108526110b2565b6001600160a01b0316815260200184600001516001600160a01b0316815260200184602001516001600160a01b031681526020018460800151600001518152602001846080015160200151815260200184608001516040015181525061125c565b50505050565b6007546001600160a01b031681565b600754604051630cc397bb60e11b81526000916001600160a01b0316906319872f76906108f9908590600401611afd565b60206040518083038186803b15801561091157600080fd5b505afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610949919061169d565b92915050565b6d424c41434b4c4953545f524f4c4560901b81565b6007546001600160a01b0316331461098c57634e487b7160e01b600052600160045260246000fd5b6007546001600160a01b0316ff5b6427a92222a960d91b81565b6820a1a62fa0a226a4a760b91b81565b6109be6115b5565b6001600160a01b038216600090815260056020526040908190208151608081019092528054829082906109f090611ee4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1c90611ee4565b8015610a695780601f10610a3e57610100808354040283529160200191610a69565b820191906000526020600020905b815481529060010190602001808311610a4c57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815250509050919050565b610a9f6115b5565b60056000610aad818561129e565b6001600160a01b03166001600160a01b031681526020019081526020016000206040518060800160405290816000820180546109f090611ee4565b610af06112aa565b610afa60006112e9565b565b74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b81565b6000610b2c64212aaca2a960d91b83610c27565b8015610949575042610b44632aa9a2a960e11b6108c8565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610b6f9190611a27565b60006040518083038186803b158015610b8757600080fd5b505afa158015610b9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bc391908101906118e8565b604001511192915050565b64212aaca2a960d91b81565b6d57484954454c4953545f524f4c4560901b81565b632aa9a2a960e11b81565b600080610c07818461129e565b9392505050565b6006546001600160a01b031690565b6247494760e81b81565b600080610c416a20a1a62fa6a0a720a3a2a960a91b6108c8565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b8152600401610c6e929190611b06565b60206040518083038186803b158015610c8657600080fd5b505afa158015610c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbe91906116f2565b949350505050565b600080610cd3600061133b565b91505090565b6a20a1a62fa6a0a720a3a2a960a91b81565b6d282927aa27a1a7a62fa0a226a4a760911b81565b60606000610d0c610cc6565b905060008167ffffffffffffffff811115610d3757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610d7057816020015b610d5d6115b5565b815260200190600190039081610d555790505b50905060005b82811015610dc557610d8781610a97565b828281518110610da757634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080610dbd90611f1f565b915050610d76565b5091505090565b6000806000610dda84610a97565b604051635f4f36bd60e01b815290915073__$30e2c0763bc74e29ca837c0a99f7d1b333$__90635f4f36bd90610e1a908490600090600590600401611d24565b604080518083038186803b158015610e3157600080fd5b505af4158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6991906116b9565b9250925050915091565b6c2220aa20afa82927ab24a222a960991b81565b6001600160a01b0381161580610ea757506007546001600160a01b031633145b80610f335750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef057600080fd5b505afa158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f28919061169d565b6001600160a01b0316145b610f4f5760405162461bcd60e51b815260040161051490611b76565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6d282927aa27a1a7a62fa0a226a4a760911b610f8f816103586110b2565b610fab5760405162461bcd60e51b815260040161051490611c16565b6000610fbc6211105560ea1b6108c8565b60085460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b391610fef91859190600401611a79565b602060405180830381600087803b15801561100957600080fd5b505af115801561101d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906116f2565b6529a2a62622a960d11b81565b6000806000610dda846109b6565b644a5544474560d81b81565b60085481565b6110766112aa565b6001600160a01b03811661109c5760405162461bcd60e51b815260040161051490611b30565b6110a5816112e9565b50565b6211105560ea1b81565b3390565b6110be6115dd565b6110c661161b565b64212aaca2a960d91b8414156110e1576110de611346565b90505b6000806110ed8561104e565b9150915060006110fb6113e4565b6040805160608101825286518152825160208083019190915283015181830152905163013a9d5b60e01b815291925060009173__$30e2c0763bc74e29ca837c0a99f7d1b333$__9163013a9d5b916111569190600401611cf0565b60606040518083038186803b15801561116e57600080fd5b505af4158015611182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a691906117cf565b6040805160a0810182526001600160a01b0396871681529490951660208501529383019490945260608201526080810191909152949350505050565b6111f96a20a1a62fa6a0a720a3a2a960a91b6108c8565b6001600160a01b0316632f2ff15d83836040518363ffffffff1660e01b8152600401611226929190611b06565b600060405180830381600087803b15801561124057600080fd5b505af1158015611254573d6000803e3d6000fd5b505050505050565b61127381600001518260200151836060015161147c565b61128a81600001518260400151836080015161147c565b6110a5816000015160008360a0015161147c565b6000610c078383611579565b6112b26110b2565b6001600160a01b03166112c3610c0e565b6001600160a01b031614610afa5760405162461bcd60e51b815260040161051490611be1565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610949826115b1565b61134e61161b565b61136f74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6108c8565b6001600160a01b0316632c53f6c46040518163ffffffff1660e01b815260040160806040518083038186803b1580156113a757600080fd5b505afa1580156113bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113df919061182a565b905090565b6113ec611646565b61140d74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6108c8565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561144457600080fd5b505afa158015611458573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113df919061189a565b61148461042e565b6001600160a01b03166323b872dd8430846040518463ffffffff1660e01b81526004016114b393929190611a55565b602060405180830381600087803b1580156114cd57600080fd5b505af11580156114e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150591906116f2565b506115156211105560ea1b6108c8565b6001600160a01b031663c407687683836040518363ffffffff1660e01b8152600401611542929190611a79565b600060405180830381600087803b15801561155c57600080fd5b505af1158015611570573d6000803e3d6000fd5b50505050505050565b600082600001828154811061159e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b6040518060800160405280606081526020016000815260200160008152602001600081525090565b6040805160a081018252600080825260208201529081016115fc61161b565b8152602001611609611646565b8152602001611616611660565b905290565b6040518060800160405280600081526020016000815260200160008152602001600060ff1681525090565b604051806040016040528060008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b600060208284031215611692578081fd5b8135610c0781611f66565b6000602082840312156116ae578081fd5b8151610c0781611f66565b600080604083850312156116cb578081fd5b82516116d681611f66565b60208401519092506116e781611f66565b809150509250929050565b600060208284031215611703578081fd5b81518015158114610c07578182fd5b600060208284031215611723578081fd5b5035919050565b6000806040838503121561173c578182fd5b8235915060208301356116e781611f66565b60008060408385031215611760578182fd5b823567ffffffffffffffff811115611776578283fd5b8301601f81018513611786578283fd5b803561179961179482611e6d565b611e43565b8181528660208385010111156117ad578485fd5b8160208401602083013790810160209081019490945295939092013593505050565b6000606082840312156117e0578081fd5b6040516060810181811067ffffffffffffffff8211171561180357611803611f50565b80604052508251815260208301516020820152604083015160408201528091505092915050565b60006080828403121561183b578081fd5b6040516080810181811067ffffffffffffffff8211171561185e5761185e611f50565b8060405250825181526020830151602082015260408301516040820152606083015160ff8116811461188e578283fd5b60608201529392505050565b6000604082840312156118ab578081fd5b6040516040810181811067ffffffffffffffff821117156118ce576118ce611f50565b604052825181526020928301519281019290925250919050565b600060208083850312156118fa578182fd5b825167ffffffffffffffff80821115611911578384fd5b9084019060808287031215611924578384fd5b60405160808101818110838211171561193f5761193f611f50565b604052825182811115611950578586fd5b83019150601f82018713611962578485fd5b815161197061179482611e6d565b8181528886838601011115611983578687fd5b61199282878301888701611eb8565b82525082840151938101939093525060408082015190830152606090810151908201529392505050565b600081518084526119d4816020860160208601611eb8565b601f01601f19169290920160200192915050565b60008151608084526119fd60808501826119bc565b90506020830151602085015260408301516040850152606083015160608501528091505092915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611ae557603f19888603018452611ad38583516119e8565b94509285019290850190600101611ab7565b5092979650505050505050565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b600060208252610c0760208301846119bc565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b600085825284602083015283604083015260806060830152825160808301526020830151608060a0840152611c866101008401826119bc565b604085015160c08501526060909401516001600160a01b031660e0909301929092525090949350505050565b93845260208085019390935260408085019290925280516001600160a01b03166060850152918201516080840152015160ff1660a082015260c00190565b81518152602080830151908201526040918201519181019190915260600190565b600060208252610c0760208301846119e8565b600060608252845160806060840152611d4060e08401826119bc565b602087810151608086015260408089015160a087015260609098015160c08601528401959095525050929092019190915290565b6000602080835260808184015281845483600282049050600180831680611d9c57607f831692505b858310811415611dba57634e487b7160e01b87526022600452602487fd5b611dc78360a08a01611afd565b818015611ddb5760018114611dec57611e16565b60ff19861682528782019650611e16565b611df58b611e95565b895b86811015611e1057815484820152908501908901611df7565b83019750505b50505087015460408701525050600285015460608501526003909401546080909301929092525090919050565b60405181810167ffffffffffffffff81118282101715611e6557611e65611f50565b604052919050565b600067ffffffffffffffff821115611e8757611e87611f50565b50601f01601f191660200190565b60009081526020902090565b600082821015611eb357611eb3611f3a565b500390565b60005b83811015611ed3578181015183820152602001611ebb565b838111156108b35750506000910152565b600281046001821680611ef857607f821691505b60208210811415611f1957634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611f3357611f33611f3a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146110a557600080fdfea2646970667358221220c072e399fb55a6e23768cad478e57488d06b82e3fe92efd3933e9f21cf3cfa8664736f6c63430008000033";

type UserConstructorParams =
  | [linkLibraryAddresses: UserLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class User__factory extends ContractFactory {
  constructor(...args: UserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, User__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: UserLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2fdc6bd74422c331d4350e08f48e4d7efc\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/UserLogic.sol:UserLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<User> {
    return super.deploy(provider, overrides || {}) as Promise<User>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): User {
    return super.attach(address) as User;
  }
  override connect(signer: Signer): User__factory {
    return super.connect(signer) as User__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserInterface {
    return new utils.Interface(_abi) as UserInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): User {
    return new Contract(address, _abi, signerOrProvider) as User;
  }
}

export interface UserLibraryAddresses {
  ["contracts/protocol/libraries/logics/UserLogic.sol:UserLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
