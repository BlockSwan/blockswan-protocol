/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { User, UserInterface } from "../../../protocol/user/User";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "newId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct InputTypes.CreateUserInput",
        name: "userData",
        type: "tuple",
      },
    ],
    name: "UserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct OutputTypes.UserOutput",
        name: "userData",
        type: "tuple",
      },
    ],
    name: "UserEdited",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newOrderId",
        type: "uint256",
      },
    ],
    name: "createBuyerOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newGigId",
        type: "uint256",
      },
    ],
    name: "createGig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "inviterId",
        type: "uint256",
      },
    ],
    name: "createUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getAddressById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getIdByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getInvitersByUserAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pubKey",
        type: "address",
      },
    ],
    name: "getUserByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OutputTypes.UserOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getUserById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OutputTypes.UserOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OutputTypes.UserOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196008553480156200001757600080fd5b5060405162002bab38038062002bab8339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600780546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b6129fd80620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063982714b6116100f9578063cfd8d6c011610097578063dff3b49711610071578063dff3b49714610388578063e5b5019a1461039b578063f2fde38b146103a3578063fbd2817f146103b6576101c4565b8063cfd8d6c01461034f578063daea85c514610362578063dd06ef0214610375576101c4565b8063adcd2d21116100d3578063adcd2d21146102f3578063b817bcf714610306578063b852204314610319578063bebf138f1461032e576101c4565b8063982714b6146102b8578063985fadc8146102cb578063a4a1e263146102de576101c4565b806369c212f61161016657806379a558e71161014057806379a558e7146102825780638d80c922146102955780638da5cb5b146102a85780638f299b1e146102b0576101c4565b806369c212f6146102475780636ed6da9e14610267578063715018a61461027a576101c4565b8063128fdb48116101a2578063128fdb481461021c5780631848effa1461022457806319872f761461022c57806341c0e1b51461023f576101c4565b80630542975c146101c957806311e0c07b146101e7578063121ef24314610207575b600080fd5b6101d16103c9565b6040516101de91906124be565b60405180910390f35b6101fa6101f53660046122bc565b6103d8565b6040516101de919061258b565b61021a610215366004611f2d565b610461565b005b61021a610638565b6101d1610849565b6101d161023a366004611ef1565b610858565b61021a6108e1565b61025a610255366004611e35565b610917565b6040516101de919061284d565b61025a610275366004611ef1565b6109d7565b61021a610a4c565b6101fa610290366004611e35565b610a60565b6101d16102a3366004611ef1565b610b16565b6101d1610b23565b61021a610b32565b6101fa6102c636600461229b565b610cd2565b6101fa6102d9366004611f09565b610dd5565b6102e6610e1c565b6040516101de9190612596565b6101fa610301366004611ea6565b610e2f565b6101fa610314366004611e35565b610edf565b610321610f96565b6040516101de919061252b565b61034161033c366004611ef1565b611062565b6040516101de9291906124d2565b61021a61035d366004611e35565b61118d565b61021a610370366004611e35565b611277565b610341610383366004611e35565b611347565b6102e6610396366004611e35565b61138c565b6102e6611399565b61021a6103b1366004611e35565b61139f565b6101fa6103c436600461229b565b6113d9565b6007546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906104099087908790600401612895565b60206040518083038186803b15801561042157600080fd5b505afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190611ed1565b949350505050565b600061046b610e1c565b9050801561047b5780821061047e565b81155b60405180604001604052806002815260200161031360f41b815250906104c05760405162461bcd60e51b81526004016104b791906125b6565b60405180910390fd5b506000819050600060405180608001604052808381526020018681526020018581526020016104ed61146a565b6001600160a01b0316905260405163729dfdcd60e11b815290915060009073__$2fdc6bd74422c331d4350e08f48e4d7efc$__9063e53bfb9a9061053d9084906002906005908890600401612754565b60206040518083038186803b15801561055557600080fd5b505af4158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190611ed1565b90508080156105ae575060016105a1610e1c565b6105ab9190612928565b83145b604051806040016040528060018152602001600760fb1b815250906105e65760405162461bcd60e51b81526004016104b791906125b6565b506105ef61146a565b6001600160a01b0316837fbee9c5c7ffbde119e3d12f30b5b584a6b78652a5ce90278f90c9c98c0f3178db8460405161062891906127fc565b60405180910390a3505050505050565b600061064261146a565b9050600061065864212aaca2a960d91b83610dd5565b90508015604051806040016040528060018152602001603960f81b815250906106945760405162461bcd60e51b81526004016104b791906125b6565b5060006106a964212aaca2a960d91b8461146e565b90506106bd64212aaca2a960d91b846115a9565b60408051606080820183526001600160a01b038616825283830180516020908101519084015251015160ff16818301529051633bb7b3f960e01b815260009173__$2fdc6bd74422c331d4350e08f48e4d7efc$__91633bb7b3f99161072d916002916005918791906004016127b9565b60206040518083038186803b15801561074557600080fd5b505af4158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d9190611ed1565b90508060405180604001604052806002815260200161313160f01b815250906107b95760405162461bcd60e51b81526004016104b791906125b6565b506107d36b2122a1a7a6a2afa12aaca2a960a11b85611623565b6108436040518060c00160405280866001600160a01b0316815260200184600001516001600160a01b0316815260200184602001516001600160a01b031681526020018460800151600001518152602001846080015160200151815260200184608001516040015181525061165e565b50505050565b6007546001600160a01b031681565b600754604051630cc397bb60e11b81526000916001600160a01b0316906319872f7690610889908590600401612596565b60206040518083038186803b1580156108a157600080fd5b505afa1580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190611e51565b90505b919050565b6007546001600160a01b0316331461090957634e487b7160e01b600052600160045260246000fd5b6007546001600160a01b0316ff5b61091f611c3d565b6001600160a01b038216600090815260056020526040902073__$2fdc6bd74422c331d4350e08f48e4d7efc$__632aa8eb808261095d600287611735565b866040518463ffffffff1660e01b815260040161097c93929190612876565b60006040518083038186803b15801561099457600080fd5b505af41580156109a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109d091908101906120c2565b9392505050565b6109df611c3d565b60006005816109ee818661174a565b6001600160a01b031681526020810191909152604001600020905073__$2fdc6bd74422c331d4350e08f48e4d7efc$__632aa8eb808285610a2e81610b16565b6040518463ffffffff1660e01b815260040161097c93929190612876565b610a54611756565b610a5e6000611795565b565b6000610a7464212aaca2a960d91b83610dd5565b80156108d9575042610a8c632aa9a2a960e11b610858565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610ab791906124be565b60006040518083038186803b158015610acf57600080fd5b505afa158015610ae3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b0b91908101906120c2565b604001511192915050565b6000806109d0818461174a565b6006546001600160a01b031690565b6000610b3c61146a565b90506000610b536529a2a62622a960d11b83610dd5565b9050801560405180604001604052806002815260200161189960f11b81525090610b905760405162461bcd60e51b81526004016104b791906125b6565b506000610ba66529a2a62622a960d11b8461146e565b9050610bbb6529a2a62622a960d11b846115a9565b60408051606080820183526001600160a01b038616825283830180516020908101519084015251015160ff16818301529051633ea5a5a360e11b815260009173__$2fdc6bd74422c331d4350e08f48e4d7efc$__91637d4b4b4691610c2b916002916005918791906004016127b9565b60206040518083038186803b158015610c4357600080fd5b505af4158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190611ed1565b90508060405180604001604052806002815260200161313360f01b81525090610cb75760405162461bcd60e51b81526004016104b791906125b6565b506107d36c2122a1a7a6a2afa9a2a62622a960991b85611623565b60006427a92222a960d91b610ce681610858565b6001600160a01b0316610cf761146a565b6001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610d3a5760405162461bcd60e51b81526004016104b791906125b6565b5060405163a292a61360e01b815260009073__$2fdc6bd74422c331d4350e08f48e4d7efc$__9063a292a61390610d7c908790899086906005906004016128a3565b60206040518083038186803b158015610d9457600080fd5b505af4158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc9190611ed1565b95945050505050565b600080610def6a20a1a62fa6a0a720a3a2a960a91b610858565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b815260040161040992919061259f565b600080610e2960006117e7565b91505090565b60006247494760e81b610e4181610858565b6001600160a01b0316610e5261146a565b6001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610e955760405162461bcd60e51b81526004016104b791906125b6565b50600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__63a2caedd685610ebc8861138c565b600060056040518563ffffffff1660e01b8152600401610d7c94939291906128a3565b6000610ef46529a2a62622a960d11b83610dd5565b80156108d9575042610f0c632aa9a2a960e11b610858565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610f3791906124be565b60006040518083038186803b158015610f4f57600080fd5b505afa158015610f63573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f8b91908101906120c2565b608001511192915050565b60606000610fa2610e1c565b905060008167ffffffffffffffff811115610fcd57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561100657816020015b610ff3611c3d565b815260200190600190039081610feb5790505b50905060005b8281101561105b5761101d816109d7565b82828151811061103d57634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806110539061296b565b91505061100c565b5091505090565b600080600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__63f1193ae985600060056040518463ffffffff1660e01b81526004016110a493929190612860565b60206040518083038186803b1580156110bc57600080fd5b505af41580156110d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f49190612283565b604051631900f20b60e21b815290915073__$30e2c0763bc74e29ca837c0a99f7d1b333$__90636403c82c90611134908490600090600590600401612860565b604080518083038186803b15801561114b57600080fd5b505af415801561115f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111839190611e6d565b9250925050915091565b6001600160a01b03811615806111ad57506007546001600160a01b031633145b806112395750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111f657600080fd5b505afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e9190611e51565b6001600160a01b0316145b6112555760405162461bcd60e51b81526004016104b79061260f565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6d282927aa27a1a7a62fa0a226a4a760911b611295816102d961146a565b6112b15760405162461bcd60e51b81526004016104b79061271d565b60006112c26211105560ea1b610858565b60085460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b3916112f591859190600401612512565b602060405180830381600087803b15801561130f57600080fd5b505af1158015611323573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190611ed1565b600080600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__635e80e951856002600060056040518563ffffffff1660e01b81526004016110a494939291906124ec565b60006108d9600283611735565b60085481565b6113a7611756565b6001600160a01b0381166113cd5760405162461bcd60e51b81526004016104b7906125c9565b6113d681611795565b50565b604051630dde020f60e01b815260009073__$2fdc6bd74422c331d4350e08f48e4d7efc$__90630dde020f9061141a908690869086906005906004016128a3565b60206040518083038186803b15801561143257600080fd5b505af4158015611446573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d09190611ed1565b3390565b611476611cbc565b61147e611cfa565b64212aaca2a960d91b84141561149d576114966117f2565b90506114a8565b6114a5611890565b90505b6000806114b485611347565b9150915060006114c26118f1565b6040805160608101825286518152825160208083019190915283015181830152905163013a9d5b60e01b815291925060009173__$30e2c0763bc74e29ca837c0a99f7d1b333$__9163013a9d5b9161151d91906004016127db565b60606040518083038186803b15801561153557600080fd5b505af4158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d9190611fa9565b6040805160a0810182526001600160a01b0396871681529490951660208501529383019490945260608201526080810191909152949350505050565b6115c06a20a1a62fa6a0a720a3a2a960a91b610858565b6001600160a01b0316632f2ff15d83836040518363ffffffff1660e01b81526004016115ed92919061259f565b600060405180830381600087803b15801561160757600080fd5b505af115801561161b573d6000803e3d6000fd5b505050505050565b61163161058560f41b610858565b6001600160a01b031663293c6a3a83836040518363ffffffff1660e01b81526004016115ed92919061259f565b600061166f6211105560ea1b610858565b905060008260a001518360800151846060015161168c9190612910565b6116969190612910565b905061172683600001513083856001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117159190611e51565b6001600160a01b0316929190611989565b61173083836119fb565b505050565b60006109d0836001600160a01b038416611afa565b60006109d08383611b3a565b61175e61146a565b6001600160a01b031661176f610b23565b6001600160a01b031614610a5e5760405162461bcd60e51b81526004016104b7906126b1565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006108d982611b72565b6117fa611cfa565b61181b74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610858565b6001600160a01b0316632c53f6c46040518163ffffffff1660e01b815260040160806040518083038186803b15801561185357600080fd5b505afa158015611867573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188b9190612004565b905090565b611898611cfa565b6118b974282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610858565b6001600160a01b031663688c4b246040518163ffffffff1660e01b815260040160806040518083038186803b15801561185357600080fd5b6118f9611d25565b61191a74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610858565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561195157600080fd5b505afa158015611965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188b9190612074565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af16119ce573d6000803e3d6000fd5b506119d885611b76565b6119f45760405162461bcd60e51b81526004016104b79061267a565b5050505050565b60208201516060830151604051636203b43b60e11b81526001600160a01b0384169263c407687692611a2f92600401612512565b600060405180830381600087803b158015611a4957600080fd5b505af1158015611a5d573d6000803e3d6000fd5b50505060408084015160808501519151636203b43b60e11b81526001600160a01b038516935063c407687692611a969291600401612512565b600060405180830381600087803b158015611ab057600080fd5b505af1158015611ac4573d6000803e3d6000fd5b5050505060a0820151604051636203b43b60e11b81526001600160a01b0383169163c4076876916115ed91600091600401612512565b600081815260028301602052604081205480151580611b1e5750611b1e8484611c1d565b6109d05760405162461bcd60e51b81526004016104b7906126e6565b6000826000018281548110611b5f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b6000611b9a565b62461bcd60e51b6000526020600452806024528160445260646000fd5b3d8015611bd95760208114611c0a57611bd47f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f611b7d565b611c17565b823b611c0157611c017311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014611b7d565b60019150611c17565b3d6000803e600051151591505b50919050565b60008181526001830160205260408120546109d090849084908490151584565b604051806101e001604052806060815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040805160a08101825260008082526020820152908101611cdb611cfa565b8152602001611ce8611d25565b8152602001611cf5611d3f565b905290565b6040518060800160405280600081526020016000815260200160008152602001600060ff1681525090565b604051806040016040528060008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b80516108dc816129b2565b600082601f830112611d7b578081fd5b8151602067ffffffffffffffff821115611d9757611d9761299c565b808202611da58282016128be565b838152828101908684018388018501891015611dbf578687fd5b8693505b85841015611de1578051835260019390930192918401918401611dc3565b50979650505050505050565b600082601f830112611dfd578081fd5b8151611e10611e0b826128e8565b6128be565b818152846020838601011115611e24578283fd5b61045982602083016020870161293f565b600060208284031215611e46578081fd5b81356109d0816129b2565b600060208284031215611e62578081fd5b81516109d0816129b2565b60008060408385031215611e7f578081fd5b8251611e8a816129b2565b6020840151909250611e9b816129b2565b809150509250929050565b60008060408385031215611eb8578182fd5b8235611ec3816129b2565b946020939093013593505050565b600060208284031215611ee2578081fd5b815180151581146109d0578182fd5b600060208284031215611f02578081fd5b5035919050565b60008060408385031215611f1b578182fd5b823591506020830135611e9b816129b2565b60008060408385031215611f3f578182fd5b823567ffffffffffffffff811115611f55578283fd5b8301601f81018513611f65578283fd5b8035611f73611e0b826128e8565b818152866020838501011115611f87578485fd5b8160208401602083013790810160209081019490945295939092013593505050565b600060608284031215611fba578081fd5b6040516060810181811067ffffffffffffffff82111715611fdd57611fdd61299c565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600060808284031215612015578081fd5b6040516080810181811067ffffffffffffffff821117156120385761203861299c565b8060405250825181526020830151602082015260408301516040820152606083015160ff81168114612068578283fd5b60608201529392505050565b600060408284031215612085578081fd5b6040516040810181811067ffffffffffffffff821117156120a8576120a861299c565b604052825181526020928301519281019290925250919050565b6000602082840312156120d3578081fd5b815167ffffffffffffffff808211156120ea578283fd5b81840191506101e0808387031215612100578384fd5b612109816128be565b9050825182811115612119578485fd5b61212587828601611ded565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261217060e08401611d60565b60e08201526101008084015183811115612188578586fd5b61219488828701611d6b565b82840152505061012080840151838111156121ad578586fd5b6121b988828701611d6b565b82840152505061014080840151838111156121d2578586fd5b6121de88828701611d6b565b82840152505061016080840151838111156121f7578586fd5b61220388828701611d6b565b828401525050610180808401518381111561221c578586fd5b61222888828701611d6b565b8284015250506101a08084015183811115612241578586fd5b61224d88828701611d6b565b8284015250506101c08084015183811115612266578586fd5b61227288828701611d6b565b918301919091525095945050505050565b600060208284031215612294578081fd5b5051919050565b600080604083850312156122ad578182fd5b50508035926020909101359150565b6000806000606084860312156122d0578081fd5b833592506020840135915060408401356122e9816129b2565b809150509250925092565b6001600160a01b03169052565b6000815180845260208085019450808401835b8381101561233057815187529582019590820190600101612314565b509495945050505050565b6000815180845261235381602086016020860161293f565b601f01601f19169290920160200192915050565b80516001600160a01b031682526020808201519083015260409081015160ff16910152565b60006101e082518185526123a28286018261233b565b9150506020830151602085015260408301516040850152606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e08301516123f360e08601826122f4565b50610100808401518583038287015261240c8382612301565b9250505061012080840151858303828701526124288382612301565b9250505061014080840151858303828701526124448382612301565b9250505061016080840151858303828701526124608382612301565b92505050610180808401518583038287015261247c8382612301565b925050506101a080840151858303828701526124988382612301565b925050506101c080840151858303828701526124b48382612301565b9695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561257e57603f1988860301845261256c85835161238c565b94509285019290850190600101612550565b5092979650505050505050565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b6000602082526109d0602083018461233b565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b60208082526019908201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b600085825284602083015283604083015260806060830152825160808301526020830151608060a084015261278d61010084018261233b565b604085015160c08501526060909401516001600160a01b031660e0909301929092525090949350505050565b848152602081018490526040810183905260c08101610dcc6060830184612367565b81518152602080830151908201526040918201519181019190915260600190565b6000602082528251602083015260208301516080604084015261282260a084018261233b565b6040850151606085810191909152909401516001600160a01b03166080909301929092525090919050565b6000602082526109d0602083018461238c565b9283526020830191909152604082015260600190565b92835260208301919091526001600160a01b0316604082015260600190565b918252602082015260400190565b93845260208401929092526040830152606082015260800190565b60405181810167ffffffffffffffff811182821017156128e0576128e061299c565b604052919050565b600067ffffffffffffffff8211156129025761290261299c565b50601f01601f191660200190565b6000821982111561292357612923612986565b500190565b60008282101561293a5761293a612986565b500390565b60005b8381101561295a578181015183820152602001612942565b838111156108435750506000910152565b600060001982141561297f5761297f612986565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146113d657600080fdfea26469706673582212208f9692c4663cbad06a2d783c33c5ba362cb6494876c25da71596c9165dfe66e264736f6c63430008000033";

type UserConstructorParams =
  | [linkLibraryAddresses: UserLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class User__factory extends ContractFactory {
  constructor(...args: UserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, User__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: UserLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2fdc6bd74422c331d4350e08f48e4d7efc\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/UserLogic.sol:UserLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<User> {
    return super.deploy(provider, overrides || {}) as Promise<User>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): User {
    return super.attach(address) as User;
  }
  override connect(signer: Signer): User__factory {
    return super.connect(signer) as User__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserInterface {
    return new utils.Interface(_abi) as UserInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): User {
    return new Contract(address, _abi, signerOrProvider) as User;
  }
}

export interface UserLibraryAddresses {
  ["contracts/protocol/libraries/logics/UserLogic.sol:UserLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
