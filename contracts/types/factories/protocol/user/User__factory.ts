/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { User, UserInterface } from "../../../protocol/user/User";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "newId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct InputTypes.CreateUserInput",
        name: "userData",
        type: "tuple",
      },
    ],
    name: "UserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct OutputTypes.UserOutput",
        name: "userData",
        type: "tuple",
      },
    ],
    name: "UserEdited",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeBuyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeSeller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newOrderId",
        type: "uint256",
      },
    ],
    name: "createBuyerOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newGigId",
        type: "uint256",
      },
    ],
    name: "createGig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "inviterId",
        type: "uint256",
      },
    ],
    name: "createUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getAddressById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getIdByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getInvitersById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getInvitersByUserAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pubKey",
        type: "address",
      },
    ],
    name: "getUserByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OutputTypes.UserOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getUserById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OutputTypes.UserOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "inviterId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellerInvites",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "gigIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "offerIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "bidIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "buyerOrderIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "gigReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "userReviewsIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reviewsIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OutputTypes.UserOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196008553480156200001757600080fd5b5060405162002bcd38038062002bcd8339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600780546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b612a1f80620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063982714b6116100f9578063cfd8d6c011610097578063dff3b49711610071578063dff3b49714610388578063e5b5019a1461039b578063f2fde38b146103a3578063fbd2817f146103b6576101c4565b8063cfd8d6c01461034f578063daea85c514610362578063dd06ef0214610375576101c4565b8063adcd2d21116100d3578063adcd2d21146102f3578063b817bcf714610306578063b852204314610319578063bebf138f1461032e576101c4565b8063982714b6146102b8578063985fadc8146102cb578063a4a1e263146102de576101c4565b806369c212f61161016657806379a558e71161014057806379a558e7146102825780638d80c922146102955780638da5cb5b146102a85780638f299b1e146102b0576101c4565b806369c212f6146102475780636ed6da9e14610267578063715018a61461027a576101c4565b8063128fdb48116101a2578063128fdb481461021c5780631848effa1461022457806319872f761461022c57806341c0e1b51461023f576101c4565b80630542975c146101c957806311e0c07b146101e7578063121ef24314610207575b600080fd5b6101d16103c9565b6040516101de9190612482565b60405180910390f35b6101fa6101f5366004612280565b6103d8565b6040516101de919061254f565b61021a610215366004611ef1565b610461565b005b61021a610638565b6101d1610849565b6101d161023a366004611eb5565b610858565b61021a6108e1565b61025a610255366004611df9565b610917565b6040516101de919061286f565b61025a610275366004611eb5565b6109d7565b61021a610a4c565b6101fa610290366004611df9565b610a60565b6101d16102a3366004611eb5565b610b16565b6101d1610b23565b61021a610b32565b6101fa6102c636600461225f565b610cd2565b6101fa6102d9366004611ecd565b610db7565b6102e6610dfe565b6040516101de919061255a565b6101fa610301366004611e6a565b610e11565b6101fa610314366004611df9565b610ea3565b610321610f5a565b6040516101de91906124ef565b61034161033c366004611eb5565b611026565b6040516101de929190612496565b61021a61035d366004611df9565b611151565b61021a610370366004611df9565b61123b565b610341610383366004611df9565b61130b565b6102e6610396366004611df9565b611350565b6102e661135d565b61021a6103b1366004611df9565b611363565b6101fa6103c436600461225f565b61139d565b6007546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f9061040990879087906004016128b7565b60206040518083038186803b15801561042157600080fd5b505afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190611e95565b949350505050565b600061046b610dfe565b9050801561047b5780821061047e565b81155b60405180604001604052806002815260200161031360f41b815250906104c05760405162461bcd60e51b81526004016104b7919061257a565b60405180910390fd5b506000819050600060405180608001604052808381526020018681526020018581526020016104ed61142e565b6001600160a01b0316905260405163729dfdcd60e11b815290915060009073__$2fdc6bd74422c331d4350e08f48e4d7efc$__9063e53bfb9a9061053d9084906002906005908890600401612776565b60206040518083038186803b15801561055557600080fd5b505af4158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190611e95565b90508080156105ae575060016105a1610dfe565b6105ab919061294a565b83145b604051806040016040528060018152602001600760fb1b815250906105e65760405162461bcd60e51b81526004016104b7919061257a565b506105ef61142e565b6001600160a01b0316837fbee9c5c7ffbde119e3d12f30b5b584a6b78652a5ce90278f90c9c98c0f3178db84604051610628919061281e565b60405180910390a3505050505050565b600061064261142e565b9050600061065864212aaca2a960d91b83610db7565b90508015604051806040016040528060018152602001603960f81b815250906106945760405162461bcd60e51b81526004016104b7919061257a565b5060006106a964212aaca2a960d91b84611432565b90506106bd64212aaca2a960d91b8461156d565b60408051606080820183526001600160a01b038616825283830180516020908101519084015251015160ff16818301529051633bb7b3f960e01b815260009173__$2fdc6bd74422c331d4350e08f48e4d7efc$__91633bb7b3f99161072d916002916005918791906004016127db565b60206040518083038186803b15801561074557600080fd5b505af4158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d9190611e95565b90508060405180604001604052806002815260200161313160f01b815250906107b95760405162461bcd60e51b81526004016104b7919061257a565b506107d36b2122a1a7a6a2afa12aaca2a960a11b856115e7565b6108436040518060c00160405280866001600160a01b0316815260200184600001516001600160a01b0316815260200184602001516001600160a01b0316815260200184608001516000015181526020018460800151602001518152602001846080015160400151815250611622565b50505050565b6007546001600160a01b031681565b600754604051630cc397bb60e11b81526000916001600160a01b0316906319872f769061088990859060040161255a565b60206040518083038186803b1580156108a157600080fd5b505afa1580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190611e15565b90505b919050565b6007546001600160a01b0316331461090957634e487b7160e01b600052600160045260246000fd5b6007546001600160a01b0316ff5b61091f611c01565b6001600160a01b038216600090815260056020526040902073__$2fdc6bd74422c331d4350e08f48e4d7efc$__632aa8eb808261095d6002876116f9565b866040518463ffffffff1660e01b815260040161097c93929190612898565b60006040518083038186803b15801561099457600080fd5b505af41580156109a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109d09190810190612086565b9392505050565b6109df611c01565b60006005816109ee818661170e565b6001600160a01b031681526020810191909152604001600020905073__$2fdc6bd74422c331d4350e08f48e4d7efc$__632aa8eb808285610a2e81610b16565b6040518463ffffffff1660e01b815260040161097c93929190612898565b610a5461171a565b610a5e6000611759565b565b6000610a7464212aaca2a960d91b83610db7565b80156108d9575042610a8c632aa9a2a960e11b610858565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610ab79190612482565b60006040518083038186803b158015610acf57600080fd5b505afa158015610ae3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b0b9190810190612086565b604001511192915050565b6000806109d0818461170e565b6006546001600160a01b031690565b6000610b3c61142e565b90506000610b536529a2a62622a960d11b83610db7565b9050801560405180604001604052806002815260200161189960f11b81525090610b905760405162461bcd60e51b81526004016104b7919061257a565b506000610ba66529a2a62622a960d11b84611432565b9050610bbb6529a2a62622a960d11b8461156d565b60408051606080820183526001600160a01b038616825283830180516020908101519084015251015160ff16818301529051633ea5a5a360e11b815260009173__$2fdc6bd74422c331d4350e08f48e4d7efc$__91637d4b4b4691610c2b916002916005918791906004016127db565b60206040518083038186803b158015610c4357600080fd5b505af4158015610c57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190611e95565b90508060405180604001604052806002815260200161313360f01b81525090610cb75760405162461bcd60e51b81526004016104b7919061257a565b506107d36c2122a1a7a6a2afa9a2a62622a960991b856115e7565b60006427a92222a960d91b610ce681610858565b6001600160a01b0316610cf761142e565b6001600160a01b031614610d1d5760405162461bcd60e51b81526004016104b790612718565b60405163a292a61360e01b815260009073__$2fdc6bd74422c331d4350e08f48e4d7efc$__9063a292a61390610d5e908790899086906005906004016128c5565b60206040518083038186803b158015610d7657600080fd5b505af4158015610d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dae9190611e95565b95945050505050565b600080610dd16a20a1a62fa6a0a720a3a2a960a91b610858565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b8152600401610409929190612563565b600080610e0b60006117ab565b91505090565b60006247494760e81b610e2381610858565b6001600160a01b0316610e3461142e565b6001600160a01b031614610e5a5760405162461bcd60e51b81526004016104b790612718565b600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__63a2caedd685610e8088611350565b600060056040518563ffffffff1660e01b8152600401610d5e94939291906128c5565b6000610eb86529a2a62622a960d11b83610db7565b80156108d9575042610ed0632aa9a2a960e11b610858565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401610efb9190612482565b60006040518083038186803b158015610f1357600080fd5b505afa158015610f27573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f4f9190810190612086565b608001511192915050565b60606000610f66610dfe565b905060008167ffffffffffffffff811115610f9157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610fca57816020015b610fb7611c01565b815260200190600190039081610faf5790505b50905060005b8281101561101f57610fe1816109d7565b82828151811061100157634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806110179061298d565b915050610fd0565b5091505090565b600080600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__63f1193ae985600060056040518463ffffffff1660e01b815260040161106893929190612882565b60206040518083038186803b15801561108057600080fd5b505af4158015611094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b89190612247565b604051631900f20b60e21b815290915073__$30e2c0763bc74e29ca837c0a99f7d1b333$__90636403c82c906110f8908490600090600590600401612882565b604080518083038186803b15801561110f57600080fd5b505af4158015611123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111479190611e31565b9250925050915091565b6001600160a01b038116158061117157506007546001600160a01b031633145b806111fd5750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ba57600080fd5b505afa1580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f29190611e15565b6001600160a01b0316145b6112195760405162461bcd60e51b81526004016104b7906125d3565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6d282927aa27a1a7a62fa0a226a4a760911b611259816102d961142e565b6112755760405162461bcd60e51b81526004016104b7906126e1565b60006112866211105560ea1b610858565b60085460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b3916112b9918591906004016124d6565b602060405180830381600087803b1580156112d357600080fd5b505af11580156112e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190611e95565b600080600073__$2fdc6bd74422c331d4350e08f48e4d7efc$__635e80e951856002600060056040518563ffffffff1660e01b815260040161106894939291906124b0565b60006108d96002836116f9565b60085481565b61136b61171a565b6001600160a01b0381166113915760405162461bcd60e51b81526004016104b79061258d565b61139a81611759565b50565b604051630dde020f60e01b815260009073__$2fdc6bd74422c331d4350e08f48e4d7efc$__90630dde020f906113de908690869086906005906004016128c5565b60206040518083038186803b1580156113f657600080fd5b505af415801561140a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d09190611e95565b3390565b61143a611c80565b611442611cbe565b64212aaca2a960d91b8414156114615761145a6117b6565b905061146c565b611469611854565b90505b6000806114788561130b565b9150915060006114866118b5565b6040805160608101825286518152825160208083019190915283015181830152905163013a9d5b60e01b815291925060009173__$30e2c0763bc74e29ca837c0a99f7d1b333$__9163013a9d5b916114e191906004016127fd565b60606040518083038186803b1580156114f957600080fd5b505af415801561150d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115319190611f6d565b6040805160a0810182526001600160a01b0396871681529490951660208501529383019490945260608201526080810191909152949350505050565b6115846a20a1a62fa6a0a720a3a2a960a91b610858565b6001600160a01b0316632f2ff15d83836040518363ffffffff1660e01b81526004016115b1929190612563565b600060405180830381600087803b1580156115cb57600080fd5b505af11580156115df573d6000803e3d6000fd5b505050505050565b6115f561058560f41b610858565b6001600160a01b031663293c6a3a83836040518363ffffffff1660e01b81526004016115b1929190612563565b60006116336211105560ea1b610858565b905060008260a00151836080015184606001516116509190612932565b61165a9190612932565b90506116ea83600001513083856001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156116a157600080fd5b505af11580156116b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d99190611e15565b6001600160a01b031692919061194d565b6116f483836119bf565b505050565b60006109d0836001600160a01b038416611abe565b60006109d08383611afe565b61172261142e565b6001600160a01b0316611733610b23565b6001600160a01b031614610a5e5760405162461bcd60e51b81526004016104b790612675565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006108d982611b36565b6117be611cbe565b6117df74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610858565b6001600160a01b0316632c53f6c46040518163ffffffff1660e01b815260040160806040518083038186803b15801561181757600080fd5b505afa15801561182b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184f9190611fc8565b905090565b61185c611cbe565b61187d74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610858565b6001600160a01b031663688c4b246040518163ffffffff1660e01b815260040160806040518083038186803b15801561181757600080fd5b6118bd611ce9565b6118de74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610858565b6001600160a01b0316639af1da486040518163ffffffff1660e01b8152600401604080518083038186803b15801561191557600080fd5b505afa158015611929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184f9190612038565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1611992573d6000803e3d6000fd5b5061199c85611b3a565b6119b85760405162461bcd60e51b81526004016104b79061263e565b5050505050565b60208201516060830151604051636203b43b60e11b81526001600160a01b0384169263c4076876926119f3926004016124d6565b600060405180830381600087803b158015611a0d57600080fd5b505af1158015611a21573d6000803e3d6000fd5b50505060408084015160808501519151636203b43b60e11b81526001600160a01b038516935063c407687692611a5a92916004016124d6565b600060405180830381600087803b158015611a7457600080fd5b505af1158015611a88573d6000803e3d6000fd5b5050505060a0820151604051636203b43b60e11b81526001600160a01b0383169163c4076876916115b1916000916004016124d6565b600081815260028301602052604081205480151580611ae25750611ae28484611be1565b6109d05760405162461bcd60e51b81526004016104b7906126aa565b6000826000018281548110611b2357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b5490565b6000611b5e565b62461bcd60e51b6000526020600452806024528160445260646000fd5b3d8015611b9d5760208114611bce57611b987f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f611b41565b611bdb565b823b611bc557611bc57311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014611b41565b60019150611bdb565b3d6000803e600051151591505b50919050565b60008181526001830160205260408120546109d090849084908490151584565b604051806101e001604052806060815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040805160a08101825260008082526020820152908101611c9f611cbe565b8152602001611cac611ce9565b8152602001611cb9611d03565b905290565b6040518060800160405280600081526020016000815260200160008152602001600060ff1681525090565b604051806040016040528060008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b80516108dc816129d4565b600082601f830112611d3f578081fd5b8151602067ffffffffffffffff821115611d5b57611d5b6129be565b808202611d698282016128e0565b838152828101908684018388018501891015611d83578687fd5b8693505b85841015611da5578051835260019390930192918401918401611d87565b50979650505050505050565b600082601f830112611dc1578081fd5b8151611dd4611dcf8261290a565b6128e0565b818152846020838601011115611de8578283fd5b610459826020830160208701612961565b600060208284031215611e0a578081fd5b81356109d0816129d4565b600060208284031215611e26578081fd5b81516109d0816129d4565b60008060408385031215611e43578081fd5b8251611e4e816129d4565b6020840151909250611e5f816129d4565b809150509250929050565b60008060408385031215611e7c578182fd5b8235611e87816129d4565b946020939093013593505050565b600060208284031215611ea6578081fd5b815180151581146109d0578182fd5b600060208284031215611ec6578081fd5b5035919050565b60008060408385031215611edf578182fd5b823591506020830135611e5f816129d4565b60008060408385031215611f03578182fd5b823567ffffffffffffffff811115611f19578283fd5b8301601f81018513611f29578283fd5b8035611f37611dcf8261290a565b818152866020838501011115611f4b578485fd5b8160208401602083013790810160209081019490945295939092013593505050565b600060608284031215611f7e578081fd5b6040516060810181811067ffffffffffffffff82111715611fa157611fa16129be565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600060808284031215611fd9578081fd5b6040516080810181811067ffffffffffffffff82111715611ffc57611ffc6129be565b8060405250825181526020830151602082015260408301516040820152606083015160ff8116811461202c578283fd5b60608201529392505050565b600060408284031215612049578081fd5b6040516040810181811067ffffffffffffffff8211171561206c5761206c6129be565b604052825181526020928301519281019290925250919050565b600060208284031215612097578081fd5b815167ffffffffffffffff808211156120ae578283fd5b81840191506101e08083870312156120c4578384fd5b6120cd816128e0565b90508251828111156120dd578485fd5b6120e987828601611db1565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261213460e08401611d24565b60e0820152610100808401518381111561214c578586fd5b61215888828701611d2f565b8284015250506101208084015183811115612171578586fd5b61217d88828701611d2f565b8284015250506101408084015183811115612196578586fd5b6121a288828701611d2f565b82840152505061016080840151838111156121bb578586fd5b6121c788828701611d2f565b82840152505061018080840151838111156121e0578586fd5b6121ec88828701611d2f565b8284015250506101a08084015183811115612205578586fd5b61221188828701611d2f565b8284015250506101c0808401518381111561222a578586fd5b61223688828701611d2f565b918301919091525095945050505050565b600060208284031215612258578081fd5b5051919050565b60008060408385031215612271578182fd5b50508035926020909101359150565b600080600060608486031215612294578081fd5b833592506020840135915060408401356122ad816129d4565b809150509250925092565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156122f4578151875295820195908201906001016122d8565b509495945050505050565b60008151808452612317816020860160208601612961565b601f01601f19169290920160200192915050565b80516001600160a01b031682526020808201519083015260409081015160ff16910152565b60006101e08251818552612366828601826122ff565b9150506020830151602085015260408301516040850152606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e08301516123b760e08601826122b8565b5061010080840151858303828701526123d083826122c5565b9250505061012080840151858303828701526123ec83826122c5565b92505050610140808401518583038287015261240883826122c5565b92505050610160808401518583038287015261242483826122c5565b92505050610180808401518583038287015261244083826122c5565b925050506101a0808401518583038287015261245c83826122c5565b925050506101c0808401518583038287015261247883826122c5565b9695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561254257603f19888603018452612530858351612350565b94509285019290850190600101612514565b5092979650505050505050565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b6000602082526109d060208301846122ff565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b60208082526019908201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b602080825260409082018190527f5265717569726573206d73672e73656e6465722069732066726f6d20636f6e74908201527f726163742061646472657373207265676973746572656420746f205f6e616d65606082015260800190565b600085825284602083015283604083015260806060830152825160808301526020830151608060a08401526127af6101008401826122ff565b604085015160c08501526060909401516001600160a01b031660e0909301929092525090949350505050565b848152602081018490526040810183905260c08101610dae606083018461232b565b81518152602080830151908201526040918201519181019190915260600190565b6000602082528251602083015260208301516080604084015261284460a08401826122ff565b6040850151606085810191909152909401516001600160a01b03166080909301929092525090919050565b6000602082526109d06020830184612350565b9283526020830191909152604082015260600190565b92835260208301919091526001600160a01b0316604082015260600190565b918252602082015260400190565b93845260208401929092526040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715612902576129026129be565b604052919050565b600067ffffffffffffffff821115612924576129246129be565b50601f01601f191660200190565b60008219821115612945576129456129a8565b500190565b60008282101561295c5761295c6129a8565b500390565b60005b8381101561297c578181015183820152602001612964565b838111156108435750506000910152565b60006000198214156129a1576129a16129a8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461139a57600080fdfea2646970667358221220283445963c9c44de0b4aca90337a282dbc8950b2a97794b9efdabd7eb1e5d68d64736f6c63430008000033";

type UserConstructorParams =
  | [linkLibraryAddresses: UserLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class User__factory extends ContractFactory {
  constructor(...args: UserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, User__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: UserLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2fdc6bd74422c331d4350e08f48e4d7efc\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/UserLogic.sol:UserLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$30e2c0763bc74e29ca837c0a99f7d1b333\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<User> {
    return super.deploy(provider, overrides || {}) as Promise<User>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): User {
    return super.attach(address) as User;
  }
  override connect(signer: Signer): User__factory {
    return super.connect(signer) as User__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserInterface {
    return new utils.Interface(_abi) as UserInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): User {
    return new Contract(address, _abi, signerOrProvider) as User;
  }
}

export interface UserLibraryAddresses {
  ["contracts/protocol/libraries/logics/UserLogic.sol:UserLogic"]: string;
  ["contracts/protocol/libraries/logics/InviterLogic.sol:InviterLogic"]: string;
}
