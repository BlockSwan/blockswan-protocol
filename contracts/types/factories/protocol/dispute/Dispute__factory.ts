/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Dispute,
  DisputeInterface,
} from "../../../protocol/dispute/Dispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "appeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "claimAppealFeeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "claimAsJudge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "claimRuling",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "salt",
        type: "string",
      },
    ],
    name: "commitVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "procecutorId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defendantId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Evidence",
        name: "evidence",
        type: "tuple",
      },
    ],
    name: "createDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IProtocolConfigurator",
        name: "protocolConfigurator",
        type: "address",
      },
    ],
    name: "getDelayTimestamp",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "selfRefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "evidence",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "appeal",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DelayTimestamp",
        name: "delayTimestamp",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "getDisputeById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruling",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruledAt",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "timestamps",
            type: "uint256[]",
          },
          {
            internalType: "enum DataTypes.DisputeState",
            name: "state",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "roundId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "procecutorId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defendantId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "appealFeeRewards",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokensAtStakePerJuror",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalFeesForJurors",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penalties",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "winningChoice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRepartitions",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalVoted",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCommited",
                type: "uint256",
              },
              {
                internalType: "uint256[11]",
                name: "counts",
                type: "uint256[11]",
              },
              {
                internalType: "uint256[]",
                name: "evidenceSubmitters",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "appealedBy",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "commit",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "choice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "weight",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "justification",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "hasVoted",
                    type: "bool",
                  },
                ],
                internalType: "struct DataTypes.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "userId",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "role",
                    type: "bytes32",
                  },
                  {
                    internalType: "string",
                    name: "metadata",
                    type: "string",
                  },
                ],
                internalType: "struct DataTypes.Evidence[]",
                name: "evidences",
                type: "tuple[]",
              },
              {
                internalType: "address[]",
                name: "drawnJurors",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "judgesClaimed",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "closed",
                type: "bool",
              },
            ],
            internalType: "struct OutputTypes.RoundOutput[]",
            name: "rounds",
            type: "tuple[]",
          },
        ],
        internalType: "struct OutputTypes.DisputeOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisputeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisputeList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruling",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruledAt",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "timestamps",
            type: "uint256[]",
          },
          {
            internalType: "enum DataTypes.DisputeState",
            name: "state",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "roundId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "procecutorId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defendantId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "appealFeeRewards",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokensAtStakePerJuror",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalFeesForJurors",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penalties",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "winningChoice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRepartitions",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalVoted",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCommited",
                type: "uint256",
              },
              {
                internalType: "uint256[11]",
                name: "counts",
                type: "uint256[11]",
              },
              {
                internalType: "uint256[]",
                name: "evidenceSubmitters",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "appealedBy",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "commit",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "choice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "weight",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "justification",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "hasVoted",
                    type: "bool",
                  },
                ],
                internalType: "struct DataTypes.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "userId",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "role",
                    type: "bytes32",
                  },
                  {
                    internalType: "string",
                    name: "metadata",
                    type: "string",
                  },
                ],
                internalType: "struct DataTypes.Evidence[]",
                name: "evidences",
                type: "tuple[]",
              },
              {
                internalType: "address[]",
                name: "drawnJurors",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "judgesClaimed",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "closed",
                type: "bool",
              },
            ],
            internalType: "struct OutputTypes.RoundOutput[]",
            name: "rounds",
            type: "tuple[]",
          },
        ],
        internalType: "struct OutputTypes.DisputeOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isCallerUser",
    outputs: [
      {
        internalType: "bool",
        name: "isAddressMatchingId",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Evidence",
        name: "evidence",
        type: "tuple",
      },
    ],
    name: "nextRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "passPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "salt",
        type: "string",
      },
      {
        internalType: "string",
        name: "justification",
        type: "string",
      },
    ],
    name: "revealVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Evidence",
        name: "evidence",
        type: "tuple",
      },
    ],
    name: "sendEvidence",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b506040516200451e3803806200451e8339810160408190526200003a9162000118565b806200004f62000049620000c2565b620000c6565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000148565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200019e565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012a578081fd5b81516001600160a01b038116811462000141578182fd5b9392505050565b6000602080835283518082850152825b81811015620001765785810183015185820160400152820162000158565b81811115620001885783604083870101525b50601f01601f1916929092016040019392505050565b61437080620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063715018a611610104578063b87ff37f116100a2578063daea85c511610071578063daea85c5146103d7578063e5b5019a146103ea578063ecccd078146103f2578063f2fde38b14610407576101da565b8063b87ff37f1461038b578063cfd8d6c01461039e578063d6c912be146103b1578063dac21a0c146103c4576101da565b80638da5cb5b116100de5780638da5cb5b1461034a578063985fadc814610352578063b470778314610365578063b817bcf714610378576101da565b8063715018a61461031c57806379a558e7146103245780637e69b7b014610337576101da565b806318f385181161017c57806341c0e1b51161014b57806341c0e1b5146102c157806343511e7f146102c95780634516b756146102e957806349c8ba9114610309576101da565b806318f385181461027557806319872f76146102885780632b495ff51461029b57806331ce2048146102ae576101da565b806310987b77116101b857806310987b771461023257806311e0c07b1461023a578063171a9bb21461025a5780631848effa1461026d576101da565b8063038fb573146101df5780630542975c146101f45780630f25135814610212575b600080fd5b6101f26101ed36600461371e565b61041a565b005b6101fc6105df565b6040516102099190613d60565b60405180910390f35b6102256102203660046131bf565b6105ee565b6040516102099190613e2c565b61022561068c565b61024d6102483660046137d9565b61069f565b6040516102099190613e21565b6101f26102683660046131bf565b61072a565b6101fc610aa8565b61024d610283366004613132565b610ab7565b6101fc6102963660046131bf565b610b3f565b6101f26102a93660046137b8565b610bc9565b6102256102bc3660046138bc565b610d6a565b6101f2610ea1565b6102dc6102d73660046130fa565b610ed7565b6040516102099190613fe2565b6102fc6102f73660046131bf565b610f50565b6040516102099190613ff0565b6101f26103173660046137b8565b611075565b6101f2611248565b61024d6103323660046130fa565b61125c565b6101f26103453660046131bf565b611312565b6101fc611613565b61024d6103603660046131d7565b611622565b6101f2610373366004613774565b6116c3565b61024d6103863660046130fa565b611a3a565b6101f2610399366004613806565b611af1565b6101f26103ac3660046130fa565b611c19565b6101f26103bf3660046131bf565b611d03565b6101f26103d2366004613849565b611ec3565b6101f26103e53660046130fa565b611fed565b6102256120bd565b6103fa6120c3565b6040516102099190613dc1565b6101f26104153660046130fa565b61218e565b600061042c632aa9a2a960e11b610b3f565b905061043d83836000015183610ab7565b60405180604001604052806002815260200161066760f31b8152509061047f5760405162461bcd60e51b81526004016104769190613e4c565b60405180910390fd5b5060405163115e1e5f60e01b815260009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f906104bd9088906002906004016140b6565b60206040518083038186803b1580156104d557600080fd5b505af41580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906133ac565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63101ee79183866040518363ffffffff1660e01b815260040161054a929190614036565b60206040518083038186803b15801561056257600080fd5b505af4158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a91906131a5565b90508060405180604001604052806002815260200161333160f01b815250906105d65760405162461bcd60e51b81526004016104769190613e4c565b50505050505050565b6004546001600160a01b031690565b60006106016427a92222a960d91b610b3f565b6001600160a01b03166342b50a7a836040518263ffffffff1660e01b815260040161062c9190613e2c565b60006040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610680919081019061343e565b61012001515192915050565b60008061069960006121c8565b91505090565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f906106d090879087906004016140b6565b60206040518083038186803b1580156106e857600080fd5b505afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072091906131a5565b90505b9392505050565b600061074d74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b3f565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b15801561078557600080fd5b505afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190613206565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63115e1e5f8460026040518363ffffffff1660e01b81526004016107fb9291906140b6565b60206040518083038186803b15801561081357600080fd5b505af4158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b91906133ac565b600581015490915060ff16600481600481111561087857634e487b7160e01b600052602160045260246000fd5b1415604051806040016040528060028152602001611a1b60f11b815250906108b35760405162461bcd60e51b81526004016104769190613e4c565b5060008160048111156108d657634e487b7160e01b600052602160045260246000fd5b141561094a57604051635f8fdbc560e01b815273__$499c06b2b29ab2ab1aba66b7d414a45a21$__90635f8fdbc5906109159085908790600401614022565b60006040518083038186803b15801561092d57600080fd5b505af4158015610941573d6000803e3d6000fd5b50505050610aa2565b600181600481111561096c57634e487b7160e01b600052602160045260246000fd5b14156109ae576060830151604051634f1c8c7360e11b815273__$499c06b2b29ab2ab1aba66b7d414a45a21$__91639e3918e6916109159186916004016140b6565b60028160048111156109d057634e487b7160e01b600052602160045260246000fd5b1415610a1257608083015160405163261c660160e21b815273__$499c06b2b29ab2ab1aba66b7d414a45a21$__916398719804916109159186916004016140b6565b6003816004811115610a3457634e487b7160e01b600052602160045260246000fd5b1415610aa257604051636a7809e560e01b815273__$499c06b2b29ab2ab1aba66b7d414a45a21$__90636a7809e590610a71908590600401613e2c565b60006040518083038186803b158015610a8957600080fd5b505af4158015610a9d573d6000803e3d6000fd5b505050505b50505050565b6004546001600160a01b031681565b600082826001600160a01b031663dff3b497866040518263ffffffff1660e01b8152600401610ae69190613d60565b60206040518083038186803b158015610afe57600080fd5b505afa158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3691906133ac565b14949350505050565b60048054604051630cc397bb60e11b81526000926001600160a01b03909216916319872f7691610b7191869101613e2c565b60206040518083038186803b158015610b8957600080fd5b505afa158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc19190613116565b90505b919050565b6000610bd36121d3565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63115e1e5f8560026040518363ffffffff1660e01b8152600401610c119291906140b6565b60206040518083038186803b158015610c2957600080fd5b505af4158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6191906133ac565b604051636ad1160f60e11b815290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063d5a22c1e90610ca290859087908990600401614003565b60a06040518083038186803b158015610cba57600080fd5b505af4158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf291906133c4565b805190915015610d1957610d14838260800151836040015184606001516121d7565b610d63565b806020015115610d3157610d148382608001516122db565b6040805180820182526002815261036360f41b6020820152905162461bcd60e51b81526104769190600401613e4c565b505b5050505050565b60006427a92222a960d91b610d7e81610b3f565b6001600160a01b0316610d8f6121d3565b6001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610dd25760405162461bcd60e51b81526004016104769190613e4c565b506000610ddd61068c565b90506000610e0274282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b3f565b90506000816001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b158015610e3f57600080fd5b505afa158015610e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e779190613348565b9050610e88838b8b8b8b878761234c565b610e9383888861041a565b509098975050505050505050565b6004546001600160a01b03163314610ec957634e487b7160e01b600052600160045260246000fd5b6004546001600160a01b0316ff5b610edf6129c7565b816001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b158015610f1857600080fd5b505afa158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc19190613206565b610f586129f6565b60405163115e1e5f60e01b815260009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f90610f959086906002906004016140b6565b60206040518083038186803b158015610fad57600080fd5b505af4158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe591906133ac565b60405163a191f9b360e01b815290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063a191f9b39061102190849087906004016140b6565b60006040518083038186803b15801561103957600080fd5b505af415801561104d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107239190810190613274565b600061107f6121d3565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63115e1e5f8560026040518363ffffffff1660e01b81526004016110bd9291906140b6565b60206040518083038186803b1580156110d557600080fd5b505af41580156110e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110d91906133ac565b90506000611121632aa9a2a960e11b610b3f565b6001600160a01b031663dff3b497846040518263ffffffff1660e01b815260040161114c9190613d60565b60206040518083038186803b15801561116457600080fd5b505afa158015611178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119c91906133ac565b60405163381bdf9d60e21b815290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063e06f7e74906111dd90869086908a90600401614148565b60206040518083038186803b1580156111f557600080fd5b505af4158015611209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122d91906133ac565b9050610d6181856112436211105560ea1b610b3f565b612517565b611250612530565b61125a600061256f565b565b600061127064212aaca2a960d91b83611622565b8015610bc1575042611288632aa9a2a960e11b610b3f565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b81526004016112b39190613d60565b60006040518083038186803b1580156112cb57600080fd5b505afa1580156112df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611307919081019061355e565b604001511192915050565b600061131c6121d3565b90506000611330632aa9a2a960e11b610b3f565b90506000816001600160a01b031663dff3b497846040518263ffffffff1660e01b81526004016113609190613d60565b60206040518083038186803b15801561137857600080fd5b505afa15801561138c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b091906133ac565b905060006113d574282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b3f565b6001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b15801561140d57600080fd5b505afa158015611421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114459190613348565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63115e1e5f8760026040518363ffffffff1660e01b81526004016114839291906140b6565b60206040518083038186803b15801561149b57600080fd5b505af41580156114af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d391906133ac565b6040808401519051632966b8e960e21b815291925060009173__$499c06b2b29ab2ab1aba66b7d414a45a21$__9163a59ae3a4916115159186916004016140b6565b60206040518083038186803b15801561152d57600080fd5b505af4158015611541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156591906133ac565b9050600061157a826115756121d3565b6125c1565b60405163392a44a560e11b815290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__90637254894a906115b890869085908a90600401614148565b60206040518083038186803b1580156115d057600080fd5b505af41580156115e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160891906131a5565b505050505050505050565b6003546001600160a01b031690565b60008061163c6a20a1a62fa6a0a720a3a2a960a91b610b3f565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b8152600401611669929190613e35565b60206040518083038186803b15801561168157600080fd5b505afa158015611695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b991906131a5565b9150505b92915050565b60006116cd6121d3565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63115e1e5f8560026040518363ffffffff1660e01b815260040161170b9291906140b6565b60206040518083038186803b15801561172357600080fd5b505af4158015611737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175b91906133ac565b9050600061178074282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b3f565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b1580156117b857600080fd5b505afa1580156117cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f09190613206565b9050600061181574282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b3f565b6001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b15801561184d57600080fd5b505afa158015611861573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118859190613348565b600684015490915060009061189b90600161427b565b90508373__$499c06b2b29ab2ab1aba66b7d414a45a21$__63425791c490916040518060a00160405280876020015181526020018587606001516118df9190614293565b815260200161190c86886060015189604001516118fc9190614293565b6119069190614293565b8b6125c1565b81528651602088810151604051633e8973e560e01b8152919093019273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__92633e8973e59261195192906004016140b6565b60206040518083038186803b15801561196957600080fd5b505af415801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a191906133ac565b81526020016119be8688606001516119b99190614293565b61273b565b8152506040518363ffffffff1660e01b81526004016119de92919061406c565b60206040518083038186803b1580156119f657600080fd5b505af4158015611a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2e91906131a5565b506105d687868861041a565b6000611a4f6529a2a62622a960d11b83611622565b8015610bc1575042611a67632aa9a2a960e11b610b3f565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b8152600401611a929190613d60565b60006040518083038186803b158015611aaa57600080fd5b505afa158015611abe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ae6919081019061355e565b608001511192915050565b6000611afb6121d3565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63115e1e5f8660026040518363ffffffff1660e01b8152600401611b399291906140b6565b60206040518083038186803b158015611b5157600080fd5b505af4158015611b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8991906133ac565b60405163369de64f60e01b815290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063369de64f90611bc99084908890889088906004016140c4565b60206040518083038186803b158015611be157600080fd5b505af4158015611bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6191906131a5565b6001600160a01b0381161580611c3957506004546001600160a01b031633145b80611cc55750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c8257600080fd5b505afa158015611c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cba9190613116565b6001600160a01b0316145b611ce15760405162461bcd60e51b815260040161047690613ea5565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60405163115e1e5f60e01b815260009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f90611d409085906002906004016140b6565b60206040518083038186803b158015611d5857600080fd5b505af4158015611d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9091906133ac565b90506000806000808473__$499c06b2b29ab2ab1aba66b7d414a45a21$__63ebc3655d90916040518263ffffffff1660e01b8152600401611dd19190613e2c565b60806040518083038186803b158015611de957600080fd5b505af4158015611dfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e219190613926565b93509350935093506000611e3c6427a92222a960d91b610b3f565b60405163641a8c4160e11b81529091506001600160a01b0382169063c835188290611e719088908890889088906004016141ed565b602060405180830381600087803b158015611e8b57600080fd5b505af1158015611e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d91906131a5565b6000611ecd6121d3565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63115e1e5f8760026040518363ffffffff1660e01b8152600401611f0b9291906140b6565b60206040518083038186803b158015611f2357600080fd5b505af4158015611f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5b91906133ac565b6040516390bc2a9160e01b815290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__906390bc2a9190611f9d90849089908990899089906004016140fc565b60206040518083038186803b158015611fb557600080fd5b505af4158015611fc9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d691906131a5565b6d282927aa27a1a7a62fa0a226a4a760911b61200b816103606121d3565b6120275760405162461bcd60e51b815260040161047690613fab565b60006120386211105560ea1b610b3f565b60055460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b39161206b91859190600401613d74565b602060405180830381600087803b15801561208557600080fd5b505af1158015612099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa291906131a5565b60055481565b606060006120cf61068c565b90506000816001600160401b038111156120f957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561213257816020015b61211f6129f6565b8152602001906001900390816121175790505b50905060005b828110156121875761214981610f50565b82828151811061216957634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061217f906142de565b915050612138565b5091505090565b612196612530565b6001600160a01b0381166121bc5760405162461bcd60e51b815260040161047690613e5f565b6121c58161256f565b50565b6000610bc182612839565b3390565b60006121e9634a55525960e01b610b3f565b905060006121fc6211105560ea1b610b3f565b60405163225bcbd160e11b81529091506001600160a01b038316906344b797a29061222d9088908a90600401613e35565b600060405180830381600087803b15801561224757600080fd5b505af115801561225b573d6000803e3d6000fd5b5050505061226a848383612517565b6001600160a01b03821663fd9c6009612283858761427b565b886040518363ffffffff1660e01b81526004016122a1929190613e35565b600060405180830381600087803b1580156122bb57600080fd5b505af11580156122cf573d6000803e3d6000fd5b50505050505050505050565b60006122ed634a55525960e01b610b3f565b60405163225bcbd160e11b81529091506001600160a01b038216906344b797a29061231e9085908790600401613e35565b600060405180830381600087803b15801561233857600080fd5b505af11580156105d6573d6000803e3d6000fd5b600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__639d403dc5600060026040518061012001604052808d81526020018c81526020018b81526020018a8152602001876060015181526020016123b1886060015189604001516119069190614293565b81528751602089810151604051633e8973e560e01b8152919093019273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__92633e8973e5926123f692906004016140b6565b60206040518083038186803b15801561240e57600080fd5b505af4158015612422573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244691906133ac565b815260200161245489610ed7565b60200151815260200161246a886060015161273b565b8152506040518463ffffffff1660e01b815260040161248b9392919061415e565b60206040518083038186803b1580156124a357600080fd5b505af41580156124b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124db91906131a5565b90508060405180604001604052806002815260200161191b60f11b815250906116085760405162461bcd60e51b81526004016104769190613e4c565b61252b6001600160a01b038216838561283d565b505050565b6125386121d3565b6001600160a01b0316612549611613565b6001600160a01b03161461125a5760405162461bcd60e51b815260040161047690613f47565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806125d36211105560ea1b610b3f565b9050612653848430846001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561261657600080fd5b505af115801561262a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061264e9190613116565b6128a0565b604051632e872bb360e01b81526001600160a01b03821690632e872bb39061267f908790600401613e2c565b60206040518083038186803b15801561269757600080fd5b505afa1580156126ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126cf91906133ac565b60405163a59ac6dd60e01b81529092506001600160a01b0382169063a59ac6dd9061270290309088908790600401613d8d565b600060405180830381600087803b15801561271c57600080fd5b505af1158015612730573d6000803e3d6000fd5b505050505092915050565b6060600061274f634a55525960e01b610b3f565b604051631586d81560e31b81529091506001600160a01b0382169063ac36c0a89061277e908690600401613e2c565b60006040518083038186803b15801561279657600080fd5b505afa1580156127aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526127d29190810190613173565b604051630589489560e21b81529092506001600160a01b03821690631625225490612801908590600401613dae565b600060405180830381600087803b15801561281b57600080fd5b505af115801561282f573d6000803e3d6000fd5b5050505050919050565b5490565b60405163a9059cbb60e01b8082526001600160a01b0384166004830152602482018390529060008060448382895af161287a573d6000803e3d6000fd5b50612884846128b5565b610aa25760405162461bcd60e51b815260040161047690613f7c565b610aa26001600160a01b03821684848761295c565b60006128d9565b62461bcd60e51b6000526020600452806024528160445260646000fd5b3d80156129185760208114612949576129137f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f6128bc565b612956565b823b612940576129407311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b60146128bc565b60019150612956565b3d6000803e600051151591505b50919050565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af16129a1573d6000803e3d6000fd5b506129ab856128b5565b610d635760405162461bcd60e51b815260040161047690613f10565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016060815260200160006004811115612a4d57634e487b7160e01b600052602160045260246000fd5b8152602001606081525090565b8051610bc481614325565b600082601f830112612a75578081fd5b81516020612a8a612a8583614231565b614208565b8281528181019085830183850287018401881015612aa6578586fd5b855b85811015612acd578151612abb81614325565b84529284019290840190600101612aa8565b5090979650505050505050565b600082601f830112612aea578081fd5b81516020612afa612a8583614231565b82815281810190858301855b85811015612acd5781518801606080601f19838d03011215612b26578889fd5b604080518281016001600160401b038282108183111715612b4957612b4961430f565b818452858b0151835285840151838c0152938501519380851115612b6b578c8dfd5b5050612b7b8d8a85870101612fc0565b91810191909152865250509284019290840190600101612b06565b600082601f830112612ba6578081fd5b81516020612bb6612a8583614231565b82815281810190858301855b85811015612acd57815188016103c080601f19838d03011215612be3578889fd5b612bee610280614208565b87830151815260408084015189830152606080850151828401526080915081850151818401525060a0808501518284015260c0915081850151818401525060e08085015182840152610100915081850151818401525061012080850151828401526101409150818501518184015250610160808501518284015261018091508185015181840152506101a0612c858e828701612e76565b8284015261030085015191506001600160401b0380831115612ca5578c8dfd5b612cb38f8c85890101612eec565b828501526103208601516101c0850152610340860151925080831115612cd7578c8dfd5b612ce58f8c85890101612d8b565b6101e0850152610360860151925080831115612cff578c8dfd5b612d0d8f8c85890101612ada565b610200850152610380860151925080831115612d27578c8dfd5b612d358f8c85890101612a65565b6102208501526103a0860151925080831115612d4f578c8dfd5b5050612d5f8d8a83870101612a65565b61024083015250612d71828401612f46565b610260820152865250509284019290840190600101612bc2565b600082601f830112612d9b578081fd5b81516020612dab612a8583614231565b82815281810190858301855b85811015612acd578151880160c080601f19838d03011215612dd7578889fd5b604080518281016001600160401b038282108183111715612dfa57612dfa61430f565b818452612e088b8701612a5a565b8352838601518b8401526060860151848401526080860151606084015260a0935083860151915080821115612e3b578c8dfd5b50612e4a8e8b83880101612fc0565b608083015250612e5b838501612f46565b91810191909152865250509284019290840190600101612db7565b600082601f830112612e86578081fd5b6040516101608082018281106001600160401b0382111715612eaa57612eaa61430f565b6040528184828101871015612ebd578485fd5b8492505b600b831015612ee157805182526001929092019160209182019101612ec1565b509195945050505050565b600082601f830112612efc578081fd5b81516020612f0c612a8583614231565b8281528181019085830183850287018401881015612f28578586fd5b855b85811015612acd57815184529284019290840190600101612f2a565b80518015158114610bc457600080fd5b805160058110610bc457600080fd5b805160048110610bc457600080fd5b600082601f830112612f84578081fd5b8135612f92612a8582614254565b818152846020838601011115612fa6578283fd5b816020850160208301379081016020019190915292915050565b600082601f830112612fd0578081fd5b8151612fde612a8582614254565b818152846020838601011115612ff2578283fd5b6130038260208301602087016142b2565b949350505050565b60006060828403121561301c578081fd5b604051606081016001600160401b03828210818311171561303f5761303f61430f565b816040528293508435835260208501356020840152604085013591508082111561306857600080fd5b5061307585828601612f74565b6040830152505092915050565b600060a08284031215613093578081fd5b60405160a081018181106001600160401b03821117156130b5576130b561430f565b80604052508091508251815260208301516020820152604083015160408201526060830151606082015260808301516130ed81614325565b6080919091015292915050565b60006020828403121561310b578081fd5b813561072381614325565b600060208284031215613127578081fd5b815161072381614325565b600080600060608486031215613146578182fd5b833561315181614325565b925060208401359150604084013561316881614325565b809150509250925092565b600060208284031215613184578081fd5b81516001600160401b03811115613199578182fd5b61300384828501612a65565b6000602082840312156131b6578081fd5b61072382612f46565b6000602082840312156131d0578081fd5b5035919050565b600080604083850312156131e9578182fd5b8235915060208301356131fb81614325565b809150509250929050565b600060a08284031215613217578081fd5b60405160a081018181106001600160401b03821117156132395761323961430f565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600060208284031215613285578081fd5b81516001600160401b038082111561329b578283fd5b81840191506101008083870312156132b1578384fd5b6132ba81614208565b9050825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a0830151828111156132f9578485fd5b61330587828601612eec565b60a08301525061331760c08401612f56565b60c082015260e08301518281111561332d578485fd5b61333987828601612b96565b60e08301525095945050505050565b600060808284031215613359578081fd5b604051608081018181106001600160401b038211171561337b5761337b61430f565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b6000602082840312156133bd578081fd5b5051919050565b600060a082840312156133d5578081fd5b60405160a081018181106001600160401b03821117156133f7576133f761430f565b60405261340383612f46565b815261341160208401612f46565b60208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b60006020828403121561344f578081fd5b81516001600160401b0380821115613465578283fd5b908301906101e08286031215613479578283fd5b613484610160614208565b825182811115613492578485fd5b61349e87828601612fc0565b8252506020830151828111156134b2578485fd5b6134be87828601612fc0565b60208301525060408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015182811115613507578485fd5b61351387828601612eec565b60e0830152506101009150613529828401612f46565b82820152610120915061353e86838501613082565b8282015261354f6101c08401612f65565b61014082015295945050505050565b60006020828403121561356f578081fd5b81516001600160401b0380821115613585578283fd5b81840191506101e080838703121561359b578384fd5b6135a481614208565b90508251828111156135b4578485fd5b6135c087828601612fc0565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261360b60e08401612a5a565b60e08201526101008084015183811115613623578586fd5b61362f88828701612eec565b8284015250506101208084015183811115613648578586fd5b61365488828701612eec565b828401525050610140808401518381111561366d578586fd5b61367988828701612eec565b8284015250506101608084015183811115613692578586fd5b61369e88828701612eec565b82840152505061018080840151838111156136b7578586fd5b6136c388828701612eec565b8284015250506101a080840151838111156136dc578586fd5b6136e888828701612eec565b8284015250506101c08084015183811115613701578586fd5b61370d88828701612eec565b918301919091525095945050505050565b600080600060608486031215613732578081fd5b83359250602084013561374481614325565b915060408401356001600160401b0381111561375e578182fd5b61376a8682870161300b565b9150509250925092565b60008060408385031215613786578182fd5b8235915060208301356001600160401b038111156137a2578182fd5b6137ae8582860161300b565b9150509250929050565b600080604083850312156137ca578182fd5b50508035926020909101359150565b6000806000606084860312156137ed578081fd5b8335925060208401359150604084013561316881614325565b60008060006060848603121561381a578081fd5b833592506020840135915060408401356001600160401b0381111561383d578182fd5b61376a86828701612f74565b6000806000806080858703121561385e578182fd5b843593506020850135925060408501356001600160401b0380821115613882578384fd5b61388e88838901612f74565b935060608701359150808211156138a3578283fd5b506138b087828801612f74565b91505092959194509250565b600080600080600060a086880312156138d3578283fd5b85359450602086013593506040860135925060608601356138f381614325565b915060808601356001600160401b0381111561390d578182fd5b6139198882890161300b565b9150509295509295909350565b6000806000806080858703121561393b578182fd5b505082516020840151604085015160609095015191969095509092509050565b6000815180845260208085019450808401835b838110156139935781516001600160a01b03168752958201959082019060010161396e565b509495945050505050565b6000815180845260208085019450848183028601828601855b85811015612acd57838303895281518051845285810151868501526040908101516060918501829052906139ed81860183613c71565b9a87019a94505050908401906001016139b7565b6000815180845260208085018081965082840281019150828601855b85811015613b7b578284038952815180518552858101518686015260408082015190860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e080820151908601526101008082015190860152610120808201519086015261014080820151908601526101608082015190860152610180808201516103c09190613ab882890182613c19565b50506101a0820151816102e0880152613ad382880182613c3c565b9150506101c08201516103008701526101e0820151868203610320880152613afb8282613b88565b915050610200820151868203610340880152613b17828261399e565b915050610220820151868203610360880152613b33828261395b565b915050610240820151868203610380880152613b4f828261395b565b9150506102608201519150613b686103a0870183613c6b565b9986019994505090840190600101613a1d565b5091979650505050505050565b6000815180845260208085019450848183028601828601855b85811015612acd578383038952815180516001600160a01b031684528581015186850152604080820151908501526060808201519085015260808082015160c08287018190529190613bf583880182613c71565b60a09485015115159790940196909652505098850198925090840190600101613ba1565b8060005b600b811015610aa2578151845260209384019390910190600101613c1d565b6000815180845260208085019450808401835b8381101561399357815187529582019590820190600101613c4f565b15159052565b60008151808452613c898160208601602086016142b2565b601f01601f19169290920160200192915050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b6000610100825184526020830151602085015260408301516040850152606083015160608501526080830151608085015260a08301518160a0860152613d1582860182613c3c565b91505060c083015160058110613d3957634e487b7160e01b83526021600452602483fd5b8060c08601525060e083015184820360e0860152613d578282613a01565b95945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b600060208252610723602083018461395b565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015613e1457603f19888603018452613e02858351613ccd565b94509285019290850190600101613de6565b5092979650505050505050565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b6000602082526107236020830184613c71565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b60208082526019908201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526015908201527423a83b191d103330b4b632b2103a3930b739b332b960591b604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b60a081016116bd8284613c9d565b6000602082526107236020830184613ccd565b9283526001600160a01b03919091166020830152604082015260600190565b82815260c081016107236020830184613c9d565b6000838252604060208301528251604083015260208301516060830152604083015160606080840152613d5760a0840182613c71565b600083825260406020830152825160408301526020830151606083015260408301516080830152606083015160a0830152608083015160a060c0840152613d5760e084018261395b565b918252602082015260400190565b6000858252846020830152608060408301526140e36080830185613c71565b905060018060a01b038316606083015295945050505050565b600086825285602083015260a0604083015261411b60a0830186613c71565b828103606084015261412d8186613c71565b91505060018060a01b03831660808301529695505050505050565b9283526020830191909152604082015260600190565b6000848252836020830152606060408301528251606083015260208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a0830151610100818185015260c08501519150610120828186015260e08601516101408601528186015192508061016086015250506141e361018084018261395b565b9695505050505050565b93845260208401929092526040830152606082015260800190565b6040518181016001600160401b03811182821017156142295761422961430f565b604052919050565b60006001600160401b0382111561424a5761424a61430f565b5060209081020190565b60006001600160401b0382111561426d5761426d61430f565b50601f01601f191660200190565b6000821982111561428e5761428e6142f9565b500190565b60008160001904831182151516156142ad576142ad6142f9565b500290565b60005b838110156142cd5781810151838201526020016142b5565b83811115610aa25750506000910152565b60006000198214156142f2576142f26142f9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146121c557600080fdfea264697066735822122064a2440d296f1788d43a6ffe92a2b0771e4d5a4010fca628a36d77eeb67fb5d864736f6c63430008000033";

type DisputeConstructorParams =
  | [linkLibraryAddresses: DisputeLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Dispute__factory extends ContractFactory {
  constructor(...args: DisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Dispute__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: DisputeLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$499c06b2b29ab2ab1aba66b7d414a45a21\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/DisputeLogic.sol:DisputeLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d4e29236ef5669bc8e4309ccc6f37ccd7f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/JuryLogic.sol:JuryLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Dispute> {
    return super.deploy(provider, overrides || {}) as Promise<Dispute>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Dispute {
    return super.attach(address) as Dispute;
  }
  override connect(signer: Signer): Dispute__factory {
    return super.connect(signer) as Dispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeInterface {
    return new utils.Interface(_abi) as DisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Dispute {
    return new Contract(address, _abi, signerOrProvider) as Dispute;
  }
}

export interface DisputeLibraryAddresses {
  ["contracts/protocol/libraries/logics/DisputeLogic.sol:DisputeLogic"]: string;
  ["contracts/protocol/libraries/logics/JuryLogic.sol:JuryLogic"]: string;
}
