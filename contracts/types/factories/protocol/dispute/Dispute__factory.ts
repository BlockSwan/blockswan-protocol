/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Dispute,
  DisputeInterface,
} from "../../../protocol/dispute/Dispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "appeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "claimAppealFeeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "claimAsJudge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "claimRuling",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "salt",
        type: "string",
      },
    ],
    name: "commitVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "procecutorId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defendantId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Evidence",
        name: "evidence",
        type: "tuple",
      },
    ],
    name: "createDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IProtocolConfigurator",
        name: "protocolConfigurator",
        type: "address",
      },
    ],
    name: "getDelayTimestamp",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "selfRefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "evidence",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "appeal",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.DelayTimestamp",
        name: "delayTimestamp",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "getDisputeById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruling",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruledAt",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "timestamps",
            type: "uint256[]",
          },
          {
            internalType: "enum DataTypes.DisputeState",
            name: "state",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "roundId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "procecutorId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defendantId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "appealFeeRewards",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokensAtStakePerJuror",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalFeesForJurors",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penalties",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "winningChoice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRepartitions",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalVoted",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCommited",
                type: "uint256",
              },
              {
                internalType: "uint256[11]",
                name: "counts",
                type: "uint256[11]",
              },
              {
                internalType: "uint256[]",
                name: "evidenceSubmitters",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "appealedBy",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "commit",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "choice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "weight",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "justification",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "hasVoted",
                    type: "bool",
                  },
                ],
                internalType: "struct DataTypes.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "userId",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "role",
                    type: "bytes32",
                  },
                  {
                    internalType: "string",
                    name: "metadata",
                    type: "string",
                  },
                ],
                internalType: "struct DataTypes.Evidence[]",
                name: "evidences",
                type: "tuple[]",
              },
              {
                internalType: "address[]",
                name: "drawnJurors",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "judgesClaimed",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "closed",
                type: "bool",
              },
            ],
            internalType: "struct OutputTypes.RoundOutput[]",
            name: "rounds",
            type: "tuple[]",
          },
        ],
        internalType: "struct OutputTypes.DisputeOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisputeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisputeList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruling",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ruledAt",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "timestamps",
            type: "uint256[]",
          },
          {
            internalType: "enum DataTypes.DisputeState",
            name: "state",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "roundId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "procecutorId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defendantId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "appealFeeRewards",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokensAtStakePerJuror",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalFeesForJurors",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penalties",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "winningChoice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalRepartitions",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalVoted",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCommited",
                type: "uint256",
              },
              {
                internalType: "uint256[11]",
                name: "counts",
                type: "uint256[11]",
              },
              {
                internalType: "uint256[]",
                name: "evidenceSubmitters",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "appealedBy",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "commit",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "choice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "weight",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "justification",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "hasVoted",
                    type: "bool",
                  },
                ],
                internalType: "struct DataTypes.Vote[]",
                name: "votes",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "userId",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "role",
                    type: "bytes32",
                  },
                  {
                    internalType: "string",
                    name: "metadata",
                    type: "string",
                  },
                ],
                internalType: "struct DataTypes.Evidence[]",
                name: "evidences",
                type: "tuple[]",
              },
              {
                internalType: "address[]",
                name: "drawnJurors",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "judgesClaimed",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "closed",
                type: "bool",
              },
            ],
            internalType: "struct OutputTypes.RoundOutput[]",
            name: "rounds",
            type: "tuple[]",
          },
        ],
        internalType: "struct OutputTypes.DisputeOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "getOrderPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isCallerUser",
    outputs: [
      {
        internalType: "bool",
        name: "isAddressMatchingId",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Evidence",
        name: "evidence",
        type: "tuple",
      },
    ],
    name: "nextRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "passPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "salt",
        type: "string",
      },
      {
        internalType: "string",
        name: "justification",
        type: "string",
      },
    ],
    name: "revealVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Evidence",
        name: "evidence",
        type: "tuple",
      },
    ],
    name: "sendEvidence",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000196005553480156200001757600080fd5b5060405162004511380380620045118339810160408190526200003a916200010b565b806200004633620000b9565b6040805180820190915260018152603560f81b60208201526001600160a01b038216620000915760405162461bcd60e51b81526004016200008891906200013d565b60405180910390fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000195565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200011e57600080fd5b81516001600160a01b03811681146200013657600080fd5b9392505050565b600060208083528351808285015260005b818110156200016c578581018301518582016040015282016200014e565b818111156200017f576000604083870101525b50601f01601f1916929092016040019392505050565b61436c80620001a56000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063715018a611610104578063b87ff37f116100a2578063daea85c511610071578063daea85c5146103fb578063e5b5019a1461040e578063ecccd07814610417578063f2fde38b1461042c57600080fd5b8063b87ff37f146103af578063cfd8d6c0146103c2578063d6c912be146103d5578063dac21a0c146103e857600080fd5b80638da5cb5b116100de5780638da5cb5b14610365578063985fadc814610376578063b470778314610389578063b817bcf71461039c57600080fd5b8063715018a61461033757806379a558e71461033f5780637e69b7b01461035257600080fd5b806318f385181161017c57806341c0e1b51161014b57806341c0e1b5146102dc57806343511e7f146102e45780634516b7561461030457806349c8ba911461032457600080fd5b806318f385181461029057806319872f76146102a35780632b495ff5146102b657806331ce2048146102c957600080fd5b806310987b77116101b857806310987b771461023f57806311e0c07b14610247578063171a9bb21461026a5780631848effa1461027d57600080fd5b8063038fb573146101df5780630542975c146101f45780630f2513581461021e575b600080fd5b6101f26101ed366004612d56565b61043f565b005b6004546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61023161022c366004612dae565b610604565b604051908152602001610215565b6102316106a4565b61025a610255366004612dc7565b6106b7565b6040519015158152602001610215565b6101f2610278366004612dae565b610743565b600454610201906001600160a01b031681565b61025a61029e366004612e00565b610a8b565b6102016102b1366004612dae565b610b12565b6101f26102c4366004612e37565b610b91565b6102316102d7366004612e59565b610d3b565b6101f2610e6b565b6102f76102f2366004612ec5565b610e93565b6040516102159190612ee2565b610317610312366004612dae565b610f36565b604051610215919061333d565b6101f2610332366004612e37565b61105c565b6101f2611230565b61025a61034d366004612ec5565b611244565b6101f2610360366004612dae565b6112fa565b6003546001600160a01b0316610201565b61025a610384366004613350565b6115f9565b6101f2610397366004613380565b61169d565b61025a6103aa366004612ec5565b611a11565b6101f26103bd3660046133c6565b611ac8565b6101f26103d0366004612ec5565b611beb565b6101f26103e3366004612dae565b611d39565b6101f26103f636600461340b565b611f06565b6101f2610409366004612ec5565b61202b565b61023160055481565b61041f61212d565b6040516102159190613481565b6101f261043a366004612ec5565b6121dc565b6000610451632aa9a2a960e11b610b12565b905061046283836000015183610a8b565b60405180604001604052806002815260200161066760f31b815250906104a45760405162461bcd60e51b815260040161049b91906134e3565b60405180910390fd5b5060405163115e1e5f60e01b8152600481018590526002602482015260009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b1580156104fa57600080fd5b505af415801561050e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053291906134f6565b9050600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__63101ee79183866040518363ffffffff1660e01b815260040161056f92919061350f565b60206040518083038186803b15801561058757600080fd5b505af415801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf919061355a565b90508060405180604001604052806002815260200161333160f01b815250906105fb5760405162461bcd60e51b815260040161049b91906134e3565b50505050505050565b60006106176427a92222a960d91b610b12565b6001600160a01b03166342b50a7a836040518263ffffffff1660e01b815260040161064491815260200190565b60006040518083038186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261069891908101906136cb565b61012001515192915050565b6000806106b16000612255565b92915050565b60405163fbd2817f60e01b815260048101849052602481018390526000906001600160a01b0383169063fbd2817f9060440160206040518083038186803b15801561070157600080fd5b505afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610739919061355a565b90505b9392505050565b600061076674282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b12565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b15801561079e57600080fd5b505afa1580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d691906137ee565b60405163115e1e5f60e01b8152600481018490526002602482015290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b15801561082e57600080fd5b505af4158015610842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086691906134f6565b600581015490915060ff16600481600481111561088557610885612f56565b1415604051806040016040528060028152602001611a1b60f11b815250906108c05760405162461bcd60e51b815260040161049b91906134e3565b5060008160048111156108d5576108d5612f56565b141561094957604051635f8fdbc560e01b815273__$499c06b2b29ab2ab1aba66b7d414a45a21$__90635f8fdbc590610914908590879060040161383e565b60006040518083038186803b15801561092c57600080fd5b505af4158015610940573d6000803e3d6000fd5b50505050610a85565b600181600481111561095d5761095d612f56565b14156109a8576060830151604051634f1c8c7360e11b815273__$499c06b2b29ab2ab1aba66b7d414a45a21$__91639e3918e691610914918691600401918252602082015260400190565b60028160048111156109bc576109bc612f56565b1415610a0757608083015160405163261c660160e21b815273__$499c06b2b29ab2ab1aba66b7d414a45a21$__91639871980491610914918691600401918252602082015260400190565b6003816004811115610a1b57610a1b612f56565b1415610a8557604051636a7809e560e01b81526004810183905273__$499c06b2b29ab2ab1aba66b7d414a45a21$__90636a7809e59060240160006040518083038186803b158015610a6c57600080fd5b505af4158015610a80573d6000803e3d6000fd5b505050505b50505050565b60405163dff3b49760e01b81526001600160a01b038481166004830152600091849184169063dff3b4979060240160206040518083038186803b158015610ad157600080fd5b505afa158015610ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0991906134f6565b14949350505050565b60048054604051630cc397bb60e11b81529182018390526000916001600160a01b03909116906319872f769060240160206040518083038186803b158015610b5957600080fd5b505afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190613888565b60003360405163115e1e5f60e01b8152600481018590526002602482015290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b158015610bec57600080fd5b505af4158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2491906134f6565b604051636ad1160f60e11b8152600481018290526001600160a01b03841660248201526044810185905290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063d5a22c1e9060640160a06040518083038186803b158015610c8b57600080fd5b505af4158015610c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc391906138a5565b805190915015610cea57610ce58382608001518360400151846060015161225f565b610d34565b806020015115610d0257610ce5838260800151612376565b6040805180820182526002815261036360f41b6020820152905162461bcd60e51b815261049b91906004016134e3565b505b5050505050565b60006427a92222a960d91b610d4f81610b12565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161199b60f11b81525090610d9c5760405162461bcd60e51b815260040161049b91906134e3565b506000610da76106a4565b90506000610dcc74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b12565b90506000816001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b158015610e0957600080fd5b505afa158015610e1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e419190613903565b9050610e52838b8b8b8b87876123ea565b610e5d83888861043f565b509098975050505050505050565b6004546001600160a01b03163314610e8557610e85613968565b6004546001600160a01b0316ff5b610ec56040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b816001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b158015610efe57600080fd5b505afa158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b191906137ee565b610f3e612ad5565b60405163115e1e5f60e01b8152600481018390526002602482015260009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b158015610f9357600080fd5b505af4158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb91906134f6565b60405163a191f9b360e01b8152600481018290526024810185905290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063a191f9b39060440160006040518083038186803b15801561102057600080fd5b505af4158015611034573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261073c9190810190613e44565b60003360405163115e1e5f60e01b8152600481018590526002602482015290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b1580156110b757600080fd5b505af41580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef91906134f6565b90506000611103632aa9a2a960e11b610b12565b60405163dff3b49760e01b81526001600160a01b038581166004830152919091169063dff3b4979060240160206040518083038186803b15801561114657600080fd5b505afa15801561115a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117e91906134f6565b60405163381bdf9d60e21b815260048101849052602481018290526044810186905290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063e06f7e749060640160206040518083038186803b1580156111dd57600080fd5b505af41580156111f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121591906134f6565b9050610d32818561122b6211105560ea1b610b12565b6125b7565b6112386125d0565b611242600061262a565b565b600061125864212aaca2a960d91b836115f9565b80156106b1575042611270632aa9a2a960e11b610b12565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b1580156112b357600080fd5b505afa1580156112c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112ef9190810190613f18565b604001511192915050565b33600061130d632aa9a2a960e11b610b12565b60405163dff3b49760e01b81526001600160a01b03848116600483015291925060009183169063dff3b4979060240160206040518083038186803b15801561135457600080fd5b505afa158015611368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138c91906134f6565b905060006113b174282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b12565b6001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b1580156113e957600080fd5b505afa1580156113fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114219190613903565b60405163115e1e5f60e01b8152600481018790526002602482015290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b15801561147957600080fd5b505af415801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b191906134f6565b6040808401519051632966b8e960e21b815291925060009173__$499c06b2b29ab2ab1aba66b7d414a45a21$__9163a59ae3a4916114fc918691600401918252602082015260400190565b60206040518083038186803b15801561151457600080fd5b505af4158015611528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154c91906134f6565b9050600061155a823361267c565b60405163392a44a560e11b815260048101859052602481018290526044810187905290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__90637254894a9060640160206040518083038186803b1580156115b657600080fd5b505af41580156115ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ee919061355a565b505050505050505050565b6000806116136a20a1a62fa6a0a720a3a2a960a91b610b12565b604051632474521560e21b8152600481018690526001600160a01b03858116602483015291909116906391d148549060440160206040518083038186803b15801561165d57600080fd5b505afa158015611671573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611695919061355a565b949350505050565b60003360405163115e1e5f60e01b8152600481018590526002602482015290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b1580156116f857600080fd5b505af415801561170c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173091906134f6565b9050600061175574282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b12565b6001600160a01b0316631cb647056040518163ffffffff1660e01b815260040160a06040518083038186803b15801561178d57600080fd5b505afa1580156117a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c591906137ee565b905060006117ea74282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b610b12565b6001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b15801561182257600080fd5b505afa158015611836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185a9190613903565b60068401549091506000906118709060016140f4565b90508373__$499c06b2b29ab2ab1aba66b7d414a45a21$__63425791c490916040518060a00160405280876020015181526020018587606001516118b4919061410c565b81526020016118e186886060015189604001516118d1919061410c565b6118db919061410c565b8b61267c565b81528651602080890151604051633e8973e560e01b8152600481019390935260248301529091019073__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__90633e8973e59060440160206040518083038186803b15801561194057600080fd5b505af4158015611954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197891906134f6565b8152602001611995868860600151611990919061410c565b6127f7565b8152506040518363ffffffff1660e01b81526004016119b592919061412b565b60206040518083038186803b1580156119cd57600080fd5b505af41580156119e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a05919061355a565b506105fb87868861043f565b6000611a266529a2a62622a960d11b836115f9565b80156106b1575042611a3e632aa9a2a960e11b610b12565b6040516334e1097b60e11b81526001600160a01b03858116600483015291909116906369c212f69060240160006040518083038186803b158015611a8157600080fd5b505afa158015611a95573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611abd9190810190613f18565b608001511192915050565b60003360405163115e1e5f60e01b8152600481018690526002602482015290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b158015611b2357600080fd5b505af4158015611b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5b91906134f6565b60405163369de64f60e01b815290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063369de64f90611b9b908490889088908890600401614175565b60206040518083038186803b158015611bb357600080fd5b505af4158015611bc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d32919061355a565b6001600160a01b0381161580611c0b57506004546001600160a01b031633145b80611c975750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c5457600080fd5b505afa158015611c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8c9190613888565b6001600160a01b0316145b611d175760405162461bcd60e51b815260206004820152604560248201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060448201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060648201526437bbb732b960d91b608482015260a40161049b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60405163115e1e5f60e01b8152600481018290526002602482015260009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b158015611d8e57600080fd5b505af4158015611da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc691906134f6565b90506000806000808473__$499c06b2b29ab2ab1aba66b7d414a45a21$__63ebc3655d90916040518263ffffffff1660e01b8152600401611e0991815260200190565b60806040518083038186803b158015611e2157600080fd5b505af4158015611e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5991906141ad565b93509350935093506000611e746427a92222a960d91b610b12565b60405163641a8c4160e11b8152600481018790526024810186905260448101859052606481018490529091506001600160a01b0382169063c835188290608401602060405180830381600087803b158015611ece57600080fd5b505af1158015611ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a80919061355a565b60003360405163115e1e5f60e01b8152600481018790526002602482015290915060009073__$499c06b2b29ab2ab1aba66b7d414a45a21$__9063115e1e5f9060440160206040518083038186803b158015611f6157600080fd5b505af4158015611f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9991906134f6565b6040516390bc2a9160e01b815290915073__$499c06b2b29ab2ab1aba66b7d414a45a21$__906390bc2a9190611fdb90849089908990899089906004016141e3565b60206040518083038186803b158015611ff357600080fd5b505af4158015612007573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb919061355a565b6d282927aa27a1a7a62fa0a226a4a760911b61204781336115f9565b6120935760405162461bcd60e51b815260206004820152601c60248201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604482015260640161049b565b60006120a46211105560ea1b610b12565b60055460405163095ea7b360e01b81526001600160a01b038084166004830152602482019290925291925084169063095ea7b390604401602060405180830381600087803b1580156120f557600080fd5b505af1158015612109573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a85919061355a565b606060006121396106a4565b90506000816001600160401b0381111561215557612155612b40565b60405190808252806020026020018201604052801561218e57816020015b61217b612ad5565b8152602001906001900390816121735790505b50905060005b828110156121d5576121a581610f36565b8282815181106121b7576121b761422f565b602002602001018190525080806121cd90614245565b915050612194565b5092915050565b6121e46125d0565b6001600160a01b0381166122495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161049b565b6122528161262a565b50565b60006106b1825490565b6000612271634a55525960e01b610b12565b905060006122846211105560ea1b610b12565b60405163225bcbd160e11b8152600481018790526001600160a01b038881166024830152919250908316906344b797a290604401600060405180830381600087803b1580156122d257600080fd5b505af11580156122e6573d6000803e3d6000fd5b505050506122f58483836125b7565b6001600160a01b03821663fd9c600961230e85876140f4565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0389166024820152604401600060405180830381600087803b15801561235657600080fd5b505af115801561236a573d6000803e3d6000fd5b50505050505050505050565b6000612388634a55525960e01b610b12565b60405163225bcbd160e11b8152600481018490526001600160a01b038581166024830152919250908216906344b797a290604401600060405180830381600087803b1580156123d657600080fd5b505af11580156105fb573d6000803e3d6000fd5b600073__$499c06b2b29ab2ab1aba66b7d414a45a21$__639d403dc5600060026040518061012001604052808d81526020018c81526020018b81526020018a81526020018760600151815260200161244f886060015189604001516118db919061410c565b815287516020808a0151604051633e8973e560e01b8152600481019390935260248301529091019073__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__90633e8973e59060440160206040518083038186803b1580156124ae57600080fd5b505af41580156124c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e691906134f6565b81526020016124f489610e93565b60200151815260200161250a88606001516127f7565b8152506040518463ffffffff1660e01b815260040161252b93929190614260565b60206040518083038186803b15801561254357600080fd5b505af4158015612557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257b919061355a565b90508060405180604001604052806002815260200161191b60f11b815250906115ee5760405162461bcd60e51b815260040161049b91906134e3565b6125cb6001600160a01b03821683856128f1565b505050565b6003546001600160a01b031633146112425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061268e6211105560ea1b610b12565b905061270e848430846001600160a01b031663e5a6b10f6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156126d157600080fd5b505af11580156126e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127099190613888565b61297c565b604051632e872bb360e01b8152600481018590526001600160a01b03821690632e872bb39060240160206040518083038186803b15801561274e57600080fd5b505afa158015612762573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278691906134f6565b60405163a59ac6dd60e01b815230600482015260248101869052604481018290529092506001600160a01b0382169063a59ac6dd90606401600060405180830381600087803b1580156127d857600080fd5b505af11580156127ec573d6000803e3d6000fd5b505050505092915050565b6060600061280b634a55525960e01b610b12565b604051631586d81560e31b8152600481018590529091506001600160a01b0382169063ac36c0a89060240160006040518083038186803b15801561284e57600080fd5b505afa158015612862573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261288a91908101906142ef565b604051630589489560e21b81529092506001600160a01b038216906316252254906128b9908590600401614323565b600060405180830381600087803b1580156128d357600080fd5b505af11580156128e7573d6000803e3d6000fd5b5050505050919050565b60405163a9059cbb60e01b8082526001600160a01b0384166004830152602482018390529060008060448382895af161292e573d6000803e3d6000fd5b5061293884612991565b610a855760405162461bcd60e51b815260206004820152601560248201527423a83b191d103330b4b632b2103a3930b739b332b960591b604482015260640161049b565b610a856001600160a01b038216848487612a3a565b60006129b7565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d80156129f65760208114612a27576129f17f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612998565b612a34565b823b612a1e57612a1e7311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612998565b60019150612a34565b3d6000803e600051151591505b50919050565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1612a7f573d6000803e3d6000fd5b50612a8985612991565b610d345760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604482015260640161049b565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016060815260200160006004811115612b1e57612b1e612f56565b8152602001606081525090565b6001600160a01b038116811461225257600080fd5b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715612b7857612b78612b40565b60405290565b60405161016081016001600160401b0381118282101715612b7857612b78612b40565b60405160a081016001600160401b0381118282101715612b7857612b78612b40565b60405160c081016001600160401b0381118282101715612b7857612b78612b40565b60405161028081016001600160401b0381118282101715612b7857612b78612b40565b60405161010081016001600160401b0381118282101715612b7857612b78612b40565b6040516101e081016001600160401b0381118282101715612b7857612b78612b40565b604051601f8201601f191681016001600160401b0381118282101715612c7657612c76612b40565b604052919050565b60006001600160401b03821115612c9757612c97612b40565b50601f01601f191660200190565b600082601f830112612cb657600080fd5b8135612cc9612cc482612c7e565b612c4e565b818152846020838601011115612cde57600080fd5b816020850160208301376000918101602001919091529392505050565b600060608284031215612d0d57600080fd5b612d15612b56565b9050813581526020820135602082015260408201356001600160401b03811115612d3e57600080fd5b612d4a84828501612ca5565b60408301525092915050565b600080600060608486031215612d6b57600080fd5b833592506020840135612d7d81612b2b565b915060408401356001600160401b03811115612d9857600080fd5b612da486828701612cfb565b9150509250925092565b600060208284031215612dc057600080fd5b5035919050565b600080600060608486031215612ddc57600080fd5b83359250602084013591506040840135612df581612b2b565b809150509250925092565b600080600060608486031215612e1557600080fd5b8335612e2081612b2b565b9250602084013591506040840135612df581612b2b565b60008060408385031215612e4a57600080fd5b50508035926020909101359150565b600080600080600060a08688031215612e7157600080fd5b8535945060208601359350604086013592506060860135612e9181612b2b565b915060808601356001600160401b03811115612eac57600080fd5b612eb888828901612cfb565b9150509295509295909350565b600060208284031215612ed757600080fd5b813561073c81612b2b565b60a081016106b1828480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b600081518084526020808501945080840160005b83811015612f4b57815187529582019590820190600101612f2f565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b8060005b600b811015610a85578151845260209384019390910190600101612f70565b60005b83811015612faa578181015183820152602001612f92565b83811115610a855750506000910152565b60008151808452612fd3816020860160208601612f8f565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101561307d578284038952815180516001600160a01b031685528581015186860152604080820151908601526060808201519086015260808082015160c0828801819052919061305983890182612fbb565b60a09485015115159890940197909752505098850198935090840190600101613005565b5091979650505050505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561307d57828403895281518051855285810151868601526040908101516060918601829052906130de81870183612fbb565b9a87019a95505050908401906001016130a8565b600081518084526020808501945080840160005b83811015612f4b5781516001600160a01b031687529582019590820190600101613106565b600081518084526020808501808196508360051b8101915082860160005b8581101561307d578284038952815180518552858101518686015260408082015190860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e080820151908601526101008082015190860152610120808201519086015261014080820151908601526101608082015190860152610180808201516103c091906131e482890182612f6c565b50506101a0820151816102e08801526131ff82880182612f1b565b9150506101c08201516103008701526101e08201518682036103208801526132278282612fe7565b915050610200820151868203610340880152613243828261308a565b91505061022082015186820361036088015261325f82826130f2565b91505061024082015186820361038088015261327b82826130f2565b91505061026082015191506132956103a087018315159052565b9986019994505090840190600101613149565b6000610100825184526020830151602085015260408301516040850152606083015160608501526080830151608085015260a08301518160a08601526132f082860182612f1b565b91505060c08301516005811061331657634e487b7160e01b600052602160045260246000fd5b8060c08601525060e083015184820360e0860152613334828261312b565b95945050505050565b60208152600061073c60208301846132a8565b6000806040838503121561336357600080fd5b82359150602083013561337581612b2b565b809150509250929050565b6000806040838503121561339357600080fd5b8235915060208301356001600160401b038111156133b057600080fd5b6133bc85828601612cfb565b9150509250929050565b6000806000606084860312156133db57600080fd5b833592506020840135915060408401356001600160401b038111156133ff57600080fd5b612da486828701612ca5565b6000806000806080858703121561342157600080fd5b843593506020850135925060408501356001600160401b038082111561344657600080fd5b61345288838901612ca5565b9350606087013591508082111561346857600080fd5b5061347587828801612ca5565b91505092959194509250565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156134d657603f198886030184526134c48583516132a8565b945092850192908501906001016134a8565b5092979650505050505050565b60208152600061073c6020830184612fbb565b60006020828403121561350857600080fd5b5051919050565b828152604060208201528151604082015260208201516060820152600060408301516060608084015261333460a0840182612fbb565b8051801515811461355557600080fd5b919050565b60006020828403121561356c57600080fd5b61073c82613545565b600082601f83011261358657600080fd5b8151613594612cc482612c7e565b8181528460208386010111156135a957600080fd5b611695826020830160208701612f8f565b60006001600160401b038211156135d3576135d3612b40565b5060051b60200190565b600082601f8301126135ee57600080fd5b815160206135fe612cc4836135ba565b82815260059290921b8401810191818101908684111561361d57600080fd5b8286015b848110156136385780518352918301918301613621565b509695505050505050565b600060a0828403121561365557600080fd5b60405160a081018181106001600160401b038211171561367757613677612b40565b80604052508091508251815260208301516020820152604083015160408201526060830151606082015260808301516136af81612b2b565b6080919091015292915050565b80516004811061355557600080fd5b6000602082840312156136dd57600080fd5b81516001600160401b03808211156136f457600080fd5b908301906101e0828603121561370957600080fd5b613711612b7e565b82518281111561372057600080fd5b61372c87828601613575565b82525060208301518281111561374157600080fd5b61374d87828601613575565b60208301525060408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e08301518281111561379757600080fd5b6137a3878286016135dd565b60e08301525061010091506137b9828401613545565b8282015261012091506137ce86838501613643565b828201526137df6101c084016136bc565b61014082015295945050505050565b600060a0828403121561380057600080fd5b613808612ba1565b82518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b82815260c0810161073c602083018480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b805161355581612b2b565b60006020828403121561389a57600080fd5b815161073c81612b2b565b600060a082840312156138b757600080fd5b6138bf612ba1565b6138c883613545565b81526138d660208401613545565b60208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b60006080828403121561391557600080fd5b604051608081018181106001600160401b038211171561393757613937612b40565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b634e487b7160e01b600052600160045260246000fd5b80516005811061355557600080fd5b600082601f83011261399e57600080fd5b6040516101608082018281106001600160401b03821117156139c2576139c2612b40565b604052830181858211156139d557600080fd5b845b828110156139ef5780518252602091820191016139d7565b509195945050505050565b600082601f830112613a0b57600080fd5b81516020613a1b612cc4836135ba565b82815260059290921b84018101918181019086841115613a3a57600080fd5b8286015b848110156136385780516001600160401b0380821115613a5e5760008081fd5b9088019060c0828b03601f1901811315613a785760008081fd5b613a80612bc3565b87840151613a8d81612b2b565b8082525060408085015189830152606080860151828401526080915081860151818401525060a08086015185811115613ac65760008081fd5b613ad48f8c838a0101613575565b8385015250613ae4848701613545565b90830152508652505050918301918301613a3e565b600082601f830112613b0a57600080fd5b81516020613b1a612cc4836135ba565b82815260059290921b84018101918181019086841115613b3957600080fd5b8286015b848110156136385780516001600160401b0380821115613b5d5760008081fd5b908801906060828b03601f1901811315613b775760008081fd5b613b7f612b56565b838801518152604080850151828a0152918401519183831115613ba25760008081fd5b613bb08d8a85880101613575565b908201528652505050918301918301613b3d565b600082601f830112613bd557600080fd5b81516020613be5612cc4836135ba565b82815260059290921b84018101918181019086841115613c0457600080fd5b8286015b84811015613638578051613c1b81612b2b565b8352918301918301613c08565b600082601f830112613c3957600080fd5b81516020613c49612cc4836135ba565b82815260059290921b84018101918181019086841115613c6857600080fd5b8286015b848110156136385780516001600160401b0380821115613c8c5760008081fd5b908801906103c0828b03601f1901811315613ca75760008081fd5b613caf612be5565b87840151815260408085015189830152606080860151828401526080915081860151818401525060a0808601518284015260c0915081860151818401525060e08086015182840152610100915081860151818401525061012080860151828401526101409150818601518184015250610160808601518284015261018091508186015181840152506101a0613d468e82880161398d565b82840152610300860151915084821115613d605760008081fd5b613d6e8e8b848901016135dd565b90830152506103208401516101c082015261034084015183811115613d935760008081fd5b613da18d8a838801016139fa565b6101e08301525061036084015183811115613dbc5760008081fd5b613dca8d8a83880101613af9565b6102008301525061038084015183811115613de55760008081fd5b613df38d8a83880101613bc4565b610220830152506103a084015183811115613e0e5760008081fd5b613e1c8d8a83880101613bc4565b61024083015250613e2e828501613545565b6102608201528652505050918301918301613c6c565b600060208284031215613e5657600080fd5b81516001600160401b0380821115613e6d57600080fd5b908301906101008286031215613e8257600080fd5b613e8a612c08565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015182811115613ec857600080fd5b613ed4878286016135dd565b60a083015250613ee660c0840161397e565b60c082015260e083015182811115613efd57600080fd5b613f0987828601613c28565b60e08301525095945050505050565b600060208284031215613f2a57600080fd5b81516001600160401b0380821115613f4157600080fd5b908301906101e08286031215613f5657600080fd5b613f5e612c2b565b825182811115613f6d57600080fd5b613f7987828601613575565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c0820152613fc460e0840161387d565b60e08201526101008084015183811115613fdd57600080fd5b613fe9888287016135dd565b828401525050610120808401518381111561400357600080fd5b61400f888287016135dd565b828401525050610140808401518381111561402957600080fd5b614035888287016135dd565b828401525050610160808401518381111561404f57600080fd5b61405b888287016135dd565b828401525050610180808401518381111561407557600080fd5b614081888287016135dd565b8284015250506101a0808401518381111561409b57600080fd5b6140a7888287016135dd565b8284015250506101c080840151838111156140c157600080fd5b6140cd888287016135dd565b918301919091525095945050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115614107576141076140de565b500190565b6000816000190483118215151615614126576141266140de565b500290565b82815260406020820152815160408201526020820151606082015260408201516080820152606082015160a08201526000608083015160a060c084015261333460e08401826130f2565b8481528360208201526080604082015260006141946080830185612fbb565b905060018060a01b038316606083015295945050505050565b600080600080608085870312156141c357600080fd5b505082516020840151604085015160609095015191969095509092509050565b85815284602082015260a06040820152600061420260a0830186612fbb565b82810360608401526142148186612fbb565b91505060018060a01b03831660808301529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415614259576142596140de565b5060010190565b838152826020820152606060408201528151606082015260208201516080820152604082015160a0820152606082015160c0820152608082015160e0820152600060a0830151610100818185015260c08501519150610120828186015260e08601516101408601528186015192508061016086015250506142e56101808401826130f2565b9695505050505050565b60006020828403121561430157600080fd5b81516001600160401b0381111561431757600080fd5b61169584828501613bc4565b60208152600061073c60208301846130f256fea26469706673582212200a0edbe2ba000065e3f39bfbb9258d670850babd6db925134828fca8591dfc5064736f6c63430008090033";

type DisputeConstructorParams =
  | [linkLibraryAddresses: DisputeLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Dispute__factory extends ContractFactory {
  constructor(...args: DisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Dispute__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: DisputeLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$499c06b2b29ab2ab1aba66b7d414a45a21\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/DisputeLogic.sol:DisputeLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d4e29236ef5669bc8e4309ccc6f37ccd7f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/JuryLogic.sol:JuryLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Dispute> {
    return super.deploy(provider, overrides || {}) as Promise<Dispute>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Dispute {
    return super.attach(address) as Dispute;
  }
  override connect(signer: Signer): Dispute__factory {
    return super.connect(signer) as Dispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeInterface {
    return new utils.Interface(_abi) as DisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Dispute {
    return new Contract(address, _abi, signerOrProvider) as Dispute;
  }
}

export interface DisputeLibraryAddresses {
  ["contracts/protocol/libraries/logics/DisputeLogic.sol:DisputeLogic"]: string;
  ["contracts/protocol/libraries/logics/JuryLogic.sol:JuryLogic"]: string;
}
