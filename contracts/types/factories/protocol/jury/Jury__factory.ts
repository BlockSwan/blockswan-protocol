/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Jury, JuryInterface } from "../../../protocol/jury/Jury";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESS_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toStake",
        type: "uint256",
      },
    ],
    name: "depositStake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "fetchContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasProtocolRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gigId",
        type: "uint256",
      },
      {
        internalType: "contract IUser",
        name: "UserContract",
        type: "address",
      },
    ],
    name: "isGigOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillBuyer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isStillSeller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "readJuror",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stakedTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezedTokens",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Juror",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toWithdraw",
        type: "uint256",
      },
    ],
    name: "withdrawStake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600019600b553480156200001757600080fd5b50604051620017e2380380620017e28339810160408190526200003a91620001ab565b806200004f6200004962000155565b62000159565b6040805180820190915260018152603560f81b60208201526001600160a01b0382166200009a5760405162461bcd60e51b8152600401620000919190620001db565b60405180910390fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905560405163483abc4f60e11b815273__$819dd864b9a28b29592cd77136582b47ce$__90639075789e906200011c906000907f426c6f636b7377616e2f536f72746974696f6e53756d5472656573000000000090620400009060040162000231565b60006040518083038186803b1580156200013557600080fd5b505af41580156200014a573d6000803e3d6000fd5b505050505062000247565b3390565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620001bd578081fd5b81516001600160a01b0381168114620001d4578182fd5b9392505050565b6000602080835283518082850152825b818110156200020957858101830151858201604001528201620001eb565b818111156200021b5783604083870101525b50601f01601f1916929092016040019392505050565b9283526020830191909152604082015260600190565b61158b80620002576000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063cfd8d6c011610071578063cfd8d6c0146101e2578063d0489945146101f5578063daea85c514610215578063e5b5019a14610228578063f2fde38b1461023d5761010b565b80638da5cb5b146101a1578063985fadc8146101a9578063b817bcf7146101bc578063cb82cc8f146101cf5761010b565b806325d5971f116100de57806325d5971f1461016957806341c0e1b51461017c578063715018a61461018657806379a558e71461018e5761010b565b80630542975c1461011057806311e0c07b1461012e5780631848effa1461014e57806319872f7614610156575b600080fd5b610118610250565b6040516101259190611221565b60405180910390f35b61014161013c3660046111e9565b61025f565b6040516101259190611293565b6101186102e8565b610118610164366004610f2e565b6102f7565b610141610177366004610f2e565b610380565b61018461056b565b005b6101846105a1565b61014161019c366004610ed6565b6105b5565b61011861066b565b6101416101b7366004610f46565b61067a565b6101416101ca366004610ed6565b6106c1565b6101416101dd366004610f2e565b610778565b6101846101f0366004610ed6565b610960565b610208610203366004610ed6565b610a4a565b6040516101259190611445565b610184610223366004610ed6565b610ade565b610230610bb4565b604051610125919061129e565b61018461024b366004610ed6565b610bba565b600a546001600160a01b031690565b60405163fbd2817f60e01b81526000906001600160a01b0383169063fbd2817f9061029090879087906004016114c6565b60206040518083038186803b1580156102a857600080fd5b505afa1580156102bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e09190610f0e565b949350505050565b600a546001600160a01b031681565b600a54604051630cc397bb60e11b81526000916001600160a01b0316906319872f769061032890859060040161129e565b60206040518083038186803b15801561034057600080fd5b505afa158015610354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103789190610ef2565b90505b919050565b60008061038b610bf4565b905082610399600383610bf8565b101560405180604001604052806002815260200161323760f01b815250906103dd5760405162461bcd60e51b81526004016103d491906112be565b60405180910390fd5b5060405163018e22f360e01b815273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063018e22f39061044290869085907f426c6f636b7377616e2f536f72746974696f6e53756d5472656573000000000090600190600390600090600401611495565b60206040518083038186803b15801561045a57600080fd5b505af415801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f0e565b5060006104a46211105560ea1b6102f7565b60405163a9059cbb60e01b81529091506001600160a01b0382169063a9059cbb906104d5908590889060040161127a565b602060405180830381600087803b1580156104ef57600080fd5b505af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190610f0e565b60405180604001604052806002815260200161323960f01b815250906105605760405162461bcd60e51b81526004016103d491906112be565b506001949350505050565b600a546001600160a01b0316331461059357634e487b7160e01b600052600160045260246000fd5b600a546001600160a01b0316ff5b6105a9610c14565b6105b36000610c53565b565b60006105c964212aaca2a960d91b8361067a565b80156103785750426105e1632aa9a2a960e11b6102f7565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b815260040161060c9190611221565b60006040518083038186803b15801561062457600080fd5b505afa158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106609190810190611028565b604001511192915050565b6009546001600160a01b031690565b6000806106946a20a1a62fa6a0a720a3a2a960a91b6102f7565b6001600160a01b03166391d1485485856040518363ffffffff1660e01b81526004016102909291906112a7565b60006106d66529a2a62622a960d11b8361067a565b80156103785750426106ee632aa9a2a960e11b6102f7565b6001600160a01b03166369c212f6846040518263ffffffff1660e01b81526004016107199190611221565b60006040518083038186803b15801561073157600080fd5b505afa158015610745573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261076d9190810190611028565b608001511192915050565b600080610783610bf4565b9050600061078f610ca5565b905060006107a26211105560ea1b6102f7565b8251604080518082019091526002815261323760f01b60208201529192508610156107e05760405162461bcd60e51b81526004016103d491906112be565b50604051639f0e2ec560e01b815273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__90639f0e2ec59061084890889087907f426c6f636b7377616e2f536f72746974696f6e53756d547265657300000000009060019060039060069060009060040161145c565b60206040518083038186803b15801561086057600080fd5b505af4158015610874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108989190610f0e565b506040516323b872dd60e01b81526001600160a01b038216906323b872dd906108c990869030908a90600401611235565b602060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190610f0e565b60405180604001604052806002815260200161064760f31b815250906109545760405162461bcd60e51b81526004016103d491906112be565b50600195945050505050565b6001600160a01b03811615806109805750600a546001600160a01b031633145b80610a0c5750336001600160a01b0316306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109c957600080fd5b505afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a019190610ef2565b6001600160a01b0316145b610a285760405162461bcd60e51b81526004016103d490611337565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b610a52610da5565b60405163ce54287960e01b815273__$d4e29236ef5669bc8e4309ccc6f37ccd7f$__9063ce54287990610a8f908590600390600690600401611259565b604080518083038186803b158015610aa657600080fd5b505af4158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103789190610fda565b6d282927aa27a1a7a62fa0a226a4a760911b610afc816101b7610bf4565b610b185760405162461bcd60e51b81526004016103d49061140e565b6000610b296211105560ea1b6102f7565b600b5460405163095ea7b360e01b81529192506001600160a01b0385169163095ea7b391610b5c9185919060040161127a565b602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190610f0e565b50505050565b600b5481565b610bc2610c14565b6001600160a01b038116610be85760405162461bcd60e51b81526004016103d4906112f1565b610bf181610c53565b50565b3390565b6000610c0d836001600160a01b038416610d46565b9392505050565b610c1c610bf4565b6001600160a01b0316610c2d61066b565b6001600160a01b0316146105b35760405162461bcd60e51b81526004016103d4906113a2565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cad610dbf565b6000610cd074282927aa27a1a7a62fa1a7a72324a3aaa920aa27a960591b6102f7565b6001600160a01b03166382db8b076040518163ffffffff1660e01b815260040160806040518083038186803b158015610d0857600080fd5b505afa158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d409190610f75565b91505090565b600081815260028301602052604081205480151580610d6a5750610d6a8484610d86565b610c0d5760405162461bcd60e51b81526004016103d4906113d7565b6000610c0d838360008181526001830160205260408120541515610c0d565b604051806040016040528060008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b805161037b81611540565b600082601f830112610e02578081fd5b8151602067ffffffffffffffff821115610e1e57610e1e61152a565b808202610e2c8282016114d4565b838152828101908684018388018501891015610e46578687fd5b8693505b85841015610e68578051835260019390930192918401918401610e4a565b50979650505050505050565b600082601f830112610e84578081fd5b815167ffffffffffffffff811115610e9e57610e9e61152a565b610eb1601f8201601f19166020016114d4565b818152846020838601011115610ec5578283fd5b6102e08260208301602087016114fe565b600060208284031215610ee7578081fd5b8135610c0d81611540565b600060208284031215610f03578081fd5b8151610c0d81611540565b600060208284031215610f1f578081fd5b81518015158114610c0d578182fd5b600060208284031215610f3f578081fd5b5035919050565b60008060408385031215610f58578081fd5b823591506020830135610f6a81611540565b809150509250929050565b600060808284031215610f86578081fd5b6040516080810181811067ffffffffffffffff82111715610fa957610fa961152a565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b600060408284031215610feb578081fd5b6040516040810181811067ffffffffffffffff8211171561100e5761100e61152a565b604052825181526020928301519281019290925250919050565b600060208284031215611039578081fd5b815167ffffffffffffffff80821115611050578283fd5b81840191506101e0808387031215611066578384fd5b61106f816114d4565b905082518281111561107f578485fd5b61108b87828601610e74565b8252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526110d660e08401610de7565b60e082015261010080840151838111156110ee578586fd5b6110fa88828701610df2565b8284015250506101208084015183811115611113578586fd5b61111f88828701610df2565b8284015250506101408084015183811115611138578586fd5b61114488828701610df2565b828401525050610160808401518381111561115d578586fd5b61116988828701610df2565b8284015250506101808084015183811115611182578586fd5b61118e88828701610df2565b8284015250506101a080840151838111156111a7578586fd5b6111b388828701610df2565b8284015250506101c080840151838111156111cc578586fd5b6111d888828701610df2565b918301919091525095945050505050565b6000806000606084860312156111fd578081fd5b8335925060208401359150604084013561121681611540565b809150509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006020825282518060208401526112dd8160408501602087016114fe565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526045908201527f43616e206f6e6c792062652063616c6c6564206966206164647265737365735060408201527f726f766964657220697320656d7074792c206d73672e73656e646572206f722060608201526437bbb732b960d91b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604082015260600190565b6020808252601c908201527f5265717569726573206d73672e73656e6465722068617320726f6c6500000000604082015260600190565b815181526020918201519181019190915260400190565b9687526001600160a01b0395909516602087015260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b918252602082015260400190565b60405181810167ffffffffffffffff811182821017156114f6576114f661152a565b604052919050565b60005b83811015611519578181015183820152602001611501565b83811115610bae5750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bf157600080fdfea2646970667358221220d94ff5f73897e5012f8f8d235fe028c68cb92c3ef3637275204169fabd1193a164736f6c63430008000033";

type JuryConstructorParams =
  | [linkLibraryAddresses: JuryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Jury__factory extends ContractFactory {
  constructor(...args: JuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Jury__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: JuryLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$819dd864b9a28b29592cd77136582b47ce\\$__", "g"),
      linkLibraryAddresses[
        "contracts/imports/kleros/contracts/SortitionSumTreeFactory.sol:SortitionSumTreeFactory"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d4e29236ef5669bc8e4309ccc6f37ccd7f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/JuryLogic.sol:JuryLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Jury> {
    return super.deploy(provider, overrides || {}) as Promise<Jury>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Jury {
    return super.attach(address) as Jury;
  }
  override connect(signer: Signer): Jury__factory {
    return super.connect(signer) as Jury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JuryInterface {
    return new utils.Interface(_abi) as JuryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Jury {
    return new Contract(address, _abi, signerOrProvider) as Jury;
  }
}

export interface JuryLibraryAddresses {
  ["contracts/imports/kleros/contracts/SortitionSumTreeFactory.sol:SortitionSumTreeFactory"]: string;
  ["contracts/protocol/libraries/logics/JuryLogic.sol:JuryLogic"]: string;
}
