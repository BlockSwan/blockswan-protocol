/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export declare namespace DataTypes {
  export type EntryParamsStruct = {
    currencyValue: PromiseOrValue<BigNumberish>;
    timeAdded: PromiseOrValue<BigNumberish>;
    xpEarned: PromiseOrValue<BigNumberish>;
    invitationEarned: PromiseOrValue<BigNumberish>;
  };

  export type EntryParamsStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    number
  ] & {
    currencyValue: BigNumber;
    timeAdded: BigNumber;
    xpEarned: BigNumber;
    invitationEarned: number;
  };

  export type RetributionParamsStruct = {
    affiliate: PromiseOrValue<BigNumberish>;
    lvl0AffiliateShare: PromiseOrValue<BigNumberish>;
  };

  export type RetributionParamsStructOutput = [BigNumber, BigNumber] & {
    affiliate: BigNumber;
    lvl0AffiliateShare: BigNumber;
  };
}

export interface IProtocolConfiguratorInterface extends utils.Interface {
  functions: {
    "getBuyerEntryParams(uint256)": FunctionFragment;
    "getBuyerEntryParams()": FunctionFragment;
    "getRetributionParams(uint256)": FunctionFragment;
    "getRetributionParams()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getBuyerEntryParams(uint256)"
      | "getBuyerEntryParams()"
      | "getRetributionParams(uint256)"
      | "getRetributionParams()"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getBuyerEntryParams(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getBuyerEntryParams()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRetributionParams(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getRetributionParams()",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getBuyerEntryParams(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuyerEntryParams()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRetributionParams(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRetributionParams()",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IProtocolConfigurator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IProtocolConfiguratorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    "getBuyerEntryParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[DataTypes.EntryParamsStructOutput]>;

    "getBuyerEntryParams()"(
      overrides?: CallOverrides
    ): Promise<[DataTypes.EntryParamsStructOutput]>;

    "getRetributionParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[DataTypes.RetributionParamsStructOutput]>;

    "getRetributionParams()"(
      overrides?: CallOverrides
    ): Promise<[DataTypes.RetributionParamsStructOutput]>;
  };

  "getBuyerEntryParams(uint256)"(
    version: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<DataTypes.EntryParamsStructOutput>;

  "getBuyerEntryParams()"(
    overrides?: CallOverrides
  ): Promise<DataTypes.EntryParamsStructOutput>;

  "getRetributionParams(uint256)"(
    version: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<DataTypes.RetributionParamsStructOutput>;

  "getRetributionParams()"(
    overrides?: CallOverrides
  ): Promise<DataTypes.RetributionParamsStructOutput>;

  callStatic: {
    "getBuyerEntryParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<DataTypes.EntryParamsStructOutput>;

    "getBuyerEntryParams()"(
      overrides?: CallOverrides
    ): Promise<DataTypes.EntryParamsStructOutput>;

    "getRetributionParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<DataTypes.RetributionParamsStructOutput>;

    "getRetributionParams()"(
      overrides?: CallOverrides
    ): Promise<DataTypes.RetributionParamsStructOutput>;
  };

  filters: {};

  estimateGas: {
    "getBuyerEntryParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBuyerEntryParams()"(overrides?: CallOverrides): Promise<BigNumber>;

    "getRetributionParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRetributionParams()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    "getBuyerEntryParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBuyerEntryParams()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRetributionParams(uint256)"(
      version: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRetributionParams()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
